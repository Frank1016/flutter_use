// Generated by dart2js (NullSafetyMode.sound, csp, deferred-serialization, intern-composite-values), the Dart to JavaScript compiler version: 2.19.6.
self.$__dart_deferred_initializers__ = self.$__dart_deferred_initializers__ || Object.create(null);
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A = {ViewportElementMixin: function ViewportElementMixin() {
    }, ScrollViewKeyboardDismissBehavior: function ScrollViewKeyboardDismissBehavior(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    SingleChildScrollView$(child, controller) {
      return new A.SingleChildScrollView(controller, child, null);
    },
    SingleChildScrollView: function SingleChildScrollView(t0, t1, t2) {
      this.controller = t0;
      this.child = t1;
      this.key = t2;
    },
    SingleChildScrollView_build_closure: function SingleChildScrollView_build_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.axisDirection = t2;
    },
    _SingleChildViewport: function _SingleChildViewport(t0, t1, t2, t3, t4) {
      var _ = this;
      _.axisDirection = t0;
      _.offset = t1;
      _.clipBehavior = t2;
      _.child = t3;
      _.key = t4;
    },
    _SingleChildViewportElement: function _SingleChildViewportElement(t0, t1) {
      var _ = this;
      _._renderObject = _._framework$_child = null;
      _._debugDoingBuild = false;
      _._slot = _._notificationTree = _._debugReassembleConfig = _._framework$_parent = _._ancestorRenderObjectElement = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._owner = null;
      _._lifecycleState = t1;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugBuiltOnce = _._inDirtyList = false;
    },
    _RenderSingleChildViewport: function _RenderSingleChildViewport(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._axisDirection = t0;
      _._single_child_scroll_view$_offset = t1;
      _._single_child_scroll_view$_clipBehavior = t2;
      _._single_child_scroll_view$_clipRectLayer = t3;
      _.RenderObjectWithChildMixin__child = t4;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t5;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderSingleChildViewport_paint_paintContents: function _RenderSingleChildViewport_paint_paintContents(t0, t1) {
      this.$this = t0;
      this.paintOffset = t1;
    },
    _RenderSingleChildViewport_hitTestChildren_closure: function _RenderSingleChildViewport_hitTestChildren_closure(t0, t1) {
      this.$this = t0;
      this.position = t1;
    },
    __RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin: function __RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin() {
    },
    __SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin: function __SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin() {
    },
    __SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin_ViewportElementMixin: function __SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin_ViewportElementMixin() {
    },
    AutoUi: function AutoUi() {
      this.first = true;
    },
    UiUtil$_internal() {
      var t2, t3, ratio,
        t1 = new A.UiUtil();
      $.WidgetsBinding__instance.toString;
      t2 = $.$get$window();
      t3 = t2._debugDevicePixelRatio;
      if (t3 == null) {
        ratio = B._asDouble(self.window.devicePixelRatio);
        t3 = ratio === 0 ? 1 : ratio;
      }
      t1.__UiUtil__pixelRatio_A = t3;
      t2.get$viewConfiguration();
      t1.__UiUtil__statusBarHeight_A = 0;
      t2.get$viewConfiguration();
      t1.__UiUtil__uiSize_A = D.Size_360_690;
      return t1;
    },
    UiUtil: function UiUtil() {
      var _ = this;
      _.__UiUtil__statusBarHeight_A = _.__UiUtil__pixelRatio_A = _.__UiUtil__uiSize_A = $;
      _._screenWidth = null;
    },
    textDirectionToAxisDirection(textDirection) {
      switch (textDirection.index) {
        case 0:
          return C.AxisDirection_3;
        case 1:
          return C.AxisDirection_1;
      }
    },
    RenderViewportBase_showInViewport(curve, descendant, duration, offset, rect, viewport) {
      var leadingEdgeOffset, trailingEdgeOffset, t1, t2, t3, targetOffset, transform;
      if (descendant == null)
        return rect;
      leadingEdgeOffset = viewport.getOffsetToReveal$3$rect(descendant, 0, rect);
      trailingEdgeOffset = viewport.getOffsetToReveal$3$rect(descendant, 1, rect);
      t1 = offset._pixels;
      t1.toString;
      t2 = leadingEdgeOffset.offset;
      t3 = trailingEdgeOffset.offset;
      if (t2 < t3)
        targetOffset = Math.abs(t1 - t2) < Math.abs(t1 - t3) ? leadingEdgeOffset : trailingEdgeOffset;
      else if (t1 > t2)
        targetOffset = leadingEdgeOffset;
      else {
        if (!(t1 < t3)) {
          t1 = viewport._node$_parent;
          t1.toString;
          transform = descendant.getTransformTo$1(0, type$.RenderObject._as(t1));
          return B.MatrixUtils_transformRect(transform, rect == null ? descendant.get$paintBounds() : rect);
        }
        targetOffset = trailingEdgeOffset;
      }
      offset.moveTo$3$curve$duration(0, targetOffset.offset, curve, duration);
      return targetOffset.rect;
    },
    getAxisDirectionFromAxisReverseAndDirectionality(context, axis, reverse) {
      var t1, axisDirection;
      switch (axis.index) {
        case 0:
          t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
          t1.toString;
          axisDirection = A.textDirectionToAxisDirection(t1.textDirection);
          return axisDirection;
        case 1:
          return C.AxisDirection_2;
      }
    },
    PrimaryScrollController$none(child) {
      return new B.PrimaryScrollController(null, null, D.Set_empty, child, null);
    },
    PrimaryScrollController_shouldInherit(context, scrollDirection) {
      var platform,
        result = context.findAncestorWidgetOfExactType$1$0(type$.PrimaryScrollController);
      if (result == null)
        return false;
      platform = B.ScrollConfiguration_of(context).getPlatform$1(context);
      if (J.containsKey$1$x(result.automaticallyInheritForPlatforms._collection$_map, platform))
        return result.scrollDirection === scrollDirection;
      return false;
    }
  },
  C, B, E, D, J;
  A = hunkHelpers.updateHolder(holdersList[49], A);
  C = holdersList[2];
  B = holdersList[0];
  E = holdersList[53];
  D = holdersList[86];
  J = holdersList[1];
  A.ViewportElementMixin.prototype = {
    onNotification$1(notification) {
      if (type$.ViewportNotificationMixin._is(notification))
        ++notification.ViewportNotificationMixin__depth;
      return false;
    }
  };
  A.ScrollViewKeyboardDismissBehavior.prototype = {
    _enumToString$0() {
      return "ScrollViewKeyboardDismissBehavior." + this._core$_name;
    }
  };
  A.SingleChildScrollView.prototype = {
    build$1(context) {
      var effectivePrimary, scrollController, scrollable, _this = this, _null = null, t1 = {},
        t2 = A.getAxisDirectionFromAxisReverseAndDirectionality(context, C.Axis_1, false);
      t1.contents = _this.child;
      effectivePrimary = _this.controller == null && A.PrimaryScrollController_shouldInherit(context, C.Axis_1);
      scrollController = effectivePrimary ? B.PrimaryScrollController_maybeOf(context) : _this.controller;
      scrollable = E.Scrollable$(t2, C.Clip_1, scrollController, C.DragStartBehavior_1, false, _null, _null, _null, _null, _null, new A.SingleChildScrollView_build_closure(t1, _this, t2));
      return effectivePrimary && scrollController != null ? A.PrimaryScrollController$none(scrollable) : scrollable;
    }
  };
  A._SingleChildViewport.prototype = {
    createRenderObject$1(context) {
      var t1 = new A._RenderSingleChildViewport(this.axisDirection, this.offset, this.clipBehavior, B.LayerHandle$(type$.ClipRectLayer), null, B.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1;
      type$._RenderSingleChildViewport._as(renderObject);
      renderObject.set$axisDirection(this.axisDirection);
      renderObject.set$offset(0, this.offset);
      t1 = this.clipBehavior;
      if (t1 !== renderObject._single_child_scroll_view$_clipBehavior) {
        renderObject._single_child_scroll_view$_clipBehavior = t1;
        renderObject.markNeedsPaint$0();
        renderObject.markNeedsSemanticsUpdate$0();
      }
    },
    createElement$0(_) {
      return new A._SingleChildViewportElement(this, C._ElementLifecycle_0);
    }
  };
  A._SingleChildViewportElement.prototype = {};
  A._RenderSingleChildViewport.prototype = {
    set$axisDirection(value) {
      if (value === this._axisDirection)
        return;
      this._axisDirection = value;
      this.markNeedsLayout$0();
    },
    set$offset(_, value) {
      var _this = this,
        t1 = _this._single_child_scroll_view$_offset;
      if (value === t1)
        return;
      if (_this._node$_owner != null)
        t1.removeListener$1(0, _this.get$_hasScrolled());
      _this._single_child_scroll_view$_offset = value;
      if (_this._node$_owner != null)
        value.addListener$1(0, _this.get$_hasScrolled());
      _this.markNeedsLayout$0();
    },
    _hasScrolled$0() {
      this.markNeedsPaint$0();
      this.markNeedsSemanticsUpdate$0();
    },
    setupParentData$1(child) {
      if (!(child.parentData instanceof B.ParentData))
        child.parentData = new B.ParentData();
    },
    attach$1(owner) {
      this.super$__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin$attach(type$.PipelineOwner._as(owner));
      this._single_child_scroll_view$_offset.addListener$1(0, this.get$_hasScrolled());
    },
    detach$0(_) {
      this._single_child_scroll_view$_offset.removeListener$1(0, this.get$_hasScrolled());
      this.super$__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin$detach(0);
    },
    get$isRepaintBoundary() {
      return true;
    },
    get$_single_child_scroll_view$_viewportExtent() {
      switch (B.axisDirectionToAxis(this._axisDirection).index) {
        case 0:
          return this._size._dx;
        case 1:
          return this._size._dy;
      }
    },
    get$_single_child_scroll_view$_maxScrollExtent() {
      var _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 == null)
        return 0;
      switch (B.axisDirectionToAxis(_this._axisDirection).index) {
        case 0:
          return Math.max(0, t1._size._dx - _this._size._dx);
        case 1:
          return Math.max(0, t1._size._dy - _this._size._dy);
      }
    },
    _getInnerConstraints$1(constraints) {
      switch (B.axisDirectionToAxis(this._axisDirection).index) {
        case 0:
          return new B.BoxConstraints(0, 1 / 0, constraints.minHeight, constraints.maxHeight);
        case 1:
          return new B.BoxConstraints(constraints.minWidth, constraints.maxWidth, 0, 1 / 0);
      }
    },
    computeDryLayout$1(constraints) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 == null)
        return new B.Size(B.clampDouble(0, constraints.minWidth, constraints.maxWidth), B.clampDouble(0, constraints.minHeight, constraints.maxHeight));
      return constraints.constrain$1(t1.getDryLayout$1(this._getInnerConstraints$1(constraints)));
    },
    performLayout$0() {
      var _this = this,
        constraints = type$.BoxConstraints._as(B.RenderObject.prototype.get$constraints.call(_this)),
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 == null)
        _this._size = new B.Size(B.clampDouble(0, constraints.minWidth, constraints.maxWidth), B.clampDouble(0, constraints.minHeight, constraints.maxHeight));
      else {
        t1.layout$2$parentUsesSize(_this._getInnerConstraints$1(constraints), true);
        t1 = _this.RenderObjectWithChildMixin__child._size;
        t1.toString;
        _this._size = constraints.constrain$1(t1);
      }
      _this._single_child_scroll_view$_offset.applyViewportDimension$1(_this.get$_single_child_scroll_view$_viewportExtent());
      _this._single_child_scroll_view$_offset.applyContentDimensions$2(0, _this.get$_single_child_scroll_view$_maxScrollExtent());
    },
    _paintOffsetForPosition$1(position) {
      var _this = this;
      switch (_this._axisDirection.index) {
        case 0:
          return new B.Offset(0, position - _this.RenderObjectWithChildMixin__child._size._dy + _this._size._dy);
        case 2:
          return new B.Offset(0, -position);
        case 3:
          return new B.Offset(position - _this.RenderObjectWithChildMixin__child._size._dx + _this._size._dx, 0);
        case 1:
          return new B.Offset(-position, 0);
      }
    },
    _shouldClipAtPaintOffset$1(paintOffset) {
      var t1, t2, t3, t4, t5;
      type$.Offset._as(paintOffset);
      switch (this._single_child_scroll_view$_clipBehavior.index) {
        case 0:
          return false;
        case 1:
        case 2:
        case 3:
          t1 = paintOffset._dx;
          if (!(t1 < 0)) {
            t2 = paintOffset._dy;
            if (!(t2 < 0)) {
              t3 = this.RenderObjectWithChildMixin__child._size;
              t4 = t3._dx;
              t5 = this._size;
              t1 = t1 + t4 > t5._dx || t2 + t3._dy > t5._dy;
            } else
              t1 = true;
          } else
            t1 = true;
          return t1;
      }
    },
    paint$2(context, offset) {
      var t1, t2, t3, t4, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        t1 = _this._single_child_scroll_view$_offset._pixels;
        t1.toString;
        t1 = _this._paintOffsetForPosition$1(t1);
        t2 = new A._RenderSingleChildViewport_paint_paintContents(_this, t1);
        t3 = _this._single_child_scroll_view$_clipRectLayer;
        if (B.boolConversionCheck(_this._shouldClipAtPaintOffset$1(t1))) {
          t1 = _this.__RenderObject__needsCompositing_A;
          t1 === $ && B.throwLateFieldNI("_needsCompositing");
          t4 = _this._size;
          t3.set$layer(0, context.pushClipRect$6$clipBehavior$oldLayer(t1, offset, new B.Rect(0, 0, 0 + t4._dx, 0 + t4._dy), t2, _this._single_child_scroll_view$_clipBehavior, t3._layer));
        } else {
          t3.set$layer(0, null);
          t2.call$2(context, offset);
        }
      }
    },
    dispose$0() {
      this._single_child_scroll_view$_clipRectLayer.set$layer(0, null);
      this.super$RenderObject$dispose();
    },
    applyPaintTransform$2(child, transform) {
      var t1;
      type$.RenderBox._as(child);
      t1 = this._single_child_scroll_view$_offset._pixels;
      t1.toString;
      t1 = this._paintOffsetForPosition$1(t1);
      transform.translate$2(0, t1._dx, t1._dy);
    },
    describeApproximatePaintClip$1(child) {
      var _this = this,
        t1 = _this._single_child_scroll_view$_offset._pixels;
      t1.toString;
      t1 = _this._paintOffsetForPosition$1(t1);
      if (B.boolConversionCheck(_this._shouldClipAtPaintOffset$1(t1))) {
        t1 = _this._size;
        return new B.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      }
      return null;
    },
    hitTestChildren$2$position(result, position) {
      var t1, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        t1 = _this._single_child_scroll_view$_offset._pixels;
        t1.toString;
        return result.addWithPaintOffset$3$hitTest$offset$position(new A._RenderSingleChildViewport_hitTestChildren_closure(_this, position), _this._paintOffsetForPosition$1(t1), position);
      }
      return false;
    },
    getOffsetToReveal$3$rect(target, alignment, rect) {
      var t1, bounds, mainAxisExtent, t2, leadingScrollOffset, targetMainAxisExtent, targetOffset, _this = this;
      if (rect == null)
        rect = target.get$paintBounds();
      if (!(target instanceof B.RenderBox)) {
        t1 = _this._single_child_scroll_view$_offset._pixels;
        t1.toString;
        return new E.RevealedOffset(t1, rect);
      }
      bounds = B.MatrixUtils_transformRect(target.getTransformTo$1(0, _this.RenderObjectWithChildMixin__child), rect);
      t1 = _this.RenderObjectWithChildMixin__child._size;
      t1.toString;
      switch (_this._axisDirection.index) {
        case 0:
          mainAxisExtent = _this._size._dy;
          t2 = bounds.bottom;
          leadingScrollOffset = t1._dy - t2;
          targetMainAxisExtent = t2 - bounds.top;
          break;
        case 1:
          mainAxisExtent = _this._size._dx;
          leadingScrollOffset = bounds.left;
          targetMainAxisExtent = bounds.right - leadingScrollOffset;
          break;
        case 2:
          mainAxisExtent = _this._size._dy;
          leadingScrollOffset = bounds.top;
          targetMainAxisExtent = bounds.bottom - leadingScrollOffset;
          break;
        case 3:
          mainAxisExtent = _this._size._dx;
          t2 = bounds.right;
          leadingScrollOffset = t1._dx - t2;
          targetMainAxisExtent = t2 - bounds.left;
          break;
        default:
          leadingScrollOffset = null;
          targetMainAxisExtent = null;
          mainAxisExtent = null;
      }
      if (typeof mainAxisExtent !== "number")
        return mainAxisExtent.$sub();
      if (typeof targetMainAxisExtent !== "number")
        return B.iae(targetMainAxisExtent);
      if (typeof leadingScrollOffset !== "number")
        return leadingScrollOffset.$sub();
      targetOffset = leadingScrollOffset - (mainAxisExtent - targetMainAxisExtent) * alignment;
      return new E.RevealedOffset(targetOffset, bounds.shift$1(_this._paintOffsetForPosition$1(targetOffset)));
    },
    showOnScreen$4$curve$descendant$duration$rect(curve, descendant, duration, rect) {
      var _this = this;
      if (!_this._single_child_scroll_view$_offset.physics.get$allowImplicitScrolling())
        return _this.super$RenderObject$showOnScreen(curve, descendant, duration, rect);
      _this.super$RenderObject$showOnScreen(curve, null, duration, A.RenderViewportBase_showInViewport(curve, descendant, duration, _this._single_child_scroll_view$_offset, rect, _this));
    },
    showOnScreen$0() {
      return this.showOnScreen$4$curve$descendant$duration$rect(C.Cubic_JUR0, null, C.Duration_0, null);
    },
    showOnScreen$1$rect(rect) {
      return this.showOnScreen$4$curve$descendant$duration$rect(C.Cubic_JUR0, null, C.Duration_0, rect);
    },
    showOnScreen$3$curve$duration$rect(curve, duration, rect) {
      return this.showOnScreen$4$curve$descendant$duration$rect(curve, null, duration, rect);
    },
    showOnScreen$2$descendant$rect(descendant, rect) {
      return this.showOnScreen$4$curve$descendant$duration$rect(C.Cubic_JUR0, descendant, C.Duration_0, rect);
    },
    describeSemanticsClip$1(child) {
      var remainingOffset, _this = this,
        t1 = _this.get$_single_child_scroll_view$_maxScrollExtent(),
        t2 = _this._single_child_scroll_view$_offset._pixels;
      t2.toString;
      if (typeof t1 !== "number")
        return t1.$sub();
      remainingOffset = t1 - t2;
      switch (_this._axisDirection.index) {
        case 0:
          t1 = _this._size;
          return new B.Rect(0, 0 - remainingOffset, 0 + t1._dx, 0 + t1._dy + t2);
        case 1:
          t1 = _this._size;
          return new B.Rect(0 - t2, 0, 0 + t1._dx + remainingOffset, 0 + t1._dy);
        case 2:
          t1 = _this._size;
          return new B.Rect(0, 0 - t2, 0 + t1._dx, 0 + t1._dy + remainingOffset);
        case 3:
          t1 = _this._size;
          return new B.Rect(0 - remainingOffset, 0, 0 + t1._dx + t2, 0 + t1._dy);
      }
    },
    $isRenderAbstractViewport: 1
  };
  A.__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin.prototype = {
    attach$1(owner) {
      var t1;
      type$.PipelineOwner._as(owner);
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0(_) {
      var t1;
      this.super$AbstractNode$detach(0);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0(0);
    }
  };
  A.__SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin.prototype = {};
  A.__SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin_ViewportElementMixin.prototype = {};
  A.AutoUi.prototype = {
    init$0() {
      var t1, t2, t3;
      $.$get$Get();
      t1 = $.$get$GetNavigation__getxController()._key;
      if ($.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1) == null || !this.first)
        return;
      this.first = false;
      t1 = $.$get$GetNavigation__getxController()._key;
      t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1);
      t1.toString;
      t2 = $.UiUtil__instance;
      if (t2 == null)
        t2 = $.UiUtil__instance = A.UiUtil$_internal();
      t2.__UiUtil__uiSize_A = D.Size_boY;
      t3 = type$.MediaQuery;
      t2._screenWidth = t1.dependOnInheritedWidgetOfExactType$1$0(t3).data.size._dx;
      t1.dependOnInheritedWidgetOfExactType$1$0(t3).toString;
    }
  };
  A.UiUtil.prototype = {
    get$scaleWidth() {
      var t2,
        t1 = this._screenWidth;
      if (t1 == null) {
        t1 = this.__UiUtil__uiSize_A;
        t1 === $ && B.throwLateFieldNI("_uiSize");
        t1 = t1._dx;
      }
      t2 = this.__UiUtil__uiSize_A;
      t2 === $ && B.throwLateFieldNI("_uiSize");
      return t1 / t2._dx;
    }
  };
  var typesOffset = hunkHelpers.updateTypes(["_SingleChildViewport(BuildContext,ViewportOffset)", "~()", "~({curve:Curve,descendant:RenderObject?,duration:Duration,rect:Rect?})"]);
  A.SingleChildScrollView_build_closure.prototype = {
    call$2(context, offset) {
      type$.BuildContext._as(context);
      return new A._SingleChildViewport(this.axisDirection, type$.ViewportOffset._as(offset), C.Clip_1, this._box_0.contents, null);
    },
    $signature: typesOffset + 0
  };
  A._RenderSingleChildViewport_paint_paintContents.prototype = {
    call$2(context, offset) {
      var t1 = this.$this.RenderObjectWithChildMixin__child;
      t1.toString;
      context.paintChild$2(t1, offset.$add(0, this.paintOffset));
    },
    $signature: 11
  };
  A._RenderSingleChildViewport_hitTestChildren_closure.prototype = {
    call$2(result, transformed) {
      return this.$this.RenderObjectWithChildMixin__child.hitTest$2$position(result, transformed);
    },
    $signature: 12
  };
  (function aliases() {
    var _ = A.__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin.prototype;
    _.super$__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin$attach = _.attach$1;
    _.super$__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin$detach = _.detach$0;
  })();
  (function installTearOffs() {
    var _instance_0_u = hunkHelpers._instance_0u,
      _instance = hunkHelpers.installInstanceTearOff;
    var _;
    _instance_0_u(_ = A._RenderSingleChildViewport.prototype, "get$_hasScrolled", "_hasScrolled$0", 1);
    _instance(_, "get$showOnScreen", 0, 0, null, ["call$4$curve$descendant$duration$rect", "call$0", "call$1$rect", "call$3$curve$duration$rect", "call$2$descendant$rect"], ["showOnScreen$4$curve$descendant$duration$rect", "showOnScreen$0", "showOnScreen$1$rect", "showOnScreen$3$curve$duration$rect", "showOnScreen$2$descendant$rect"], 2, 0, 0);
  })();
  (function inheritance() {
    var _mixinHard = hunkHelpers.mixinHard,
      _mixin = hunkHelpers.mixin,
      _inheritMany = hunkHelpers.inheritMany,
      _inherit = hunkHelpers.inherit;
    _inheritMany(B.Object, [A.ViewportElementMixin, A.AutoUi, A.UiUtil]);
    _inherit(A.ScrollViewKeyboardDismissBehavior, B._Enum);
    _inherit(A.SingleChildScrollView, B.StatelessWidget);
    _inheritMany(B.Closure2Args, [A.SingleChildScrollView_build_closure, A._RenderSingleChildViewport_paint_paintContents, A._RenderSingleChildViewport_hitTestChildren_closure]);
    _inherit(A._SingleChildViewport, B.SingleChildRenderObjectWidget);
    _inherit(A.__SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin, B.SingleChildRenderObjectElement);
    _inherit(A.__SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin_ViewportElementMixin, A.__SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin);
    _inherit(A._SingleChildViewportElement, A.__SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin_ViewportElementMixin);
    _inherit(A.__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin, B.RenderBox);
    _inherit(A._RenderSingleChildViewport, A.__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin);
    _mixinHard(A.__RenderSingleChildViewport_RenderBox_RenderObjectWithChildMixin, B.RenderObjectWithChildMixin);
    _mixin(A.__SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin, B.NotifiableElementMixin);
    _mixin(A.__SingleChildViewportElement_SingleChildRenderObjectElement_NotifiableElementMixin_ViewportElementMixin, A.ViewportElementMixin);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"ScrollViewKeyboardDismissBehavior":{"Enum":[]},"_SingleChildViewport":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"SingleChildScrollView":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_SingleChildViewportElement":{"RenderObjectElement":[],"NotifiableElementMixin":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"_RenderSingleChildViewport":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderAbstractViewport":[],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"}}'));
  var type$ = (function rtii() {
    var findType = B.findType;
    return {
      BoxConstraints: findType("BoxConstraints"),
      BuildContext: findType("BuildContext"),
      ClipRectLayer: findType("ClipRectLayer"),
      ContainerLayer: findType("ContainerLayer"),
      Directionality: findType("Directionality"),
      MediaQuery: findType("MediaQuery"),
      Offset: findType("Offset"),
      PipelineOwner: findType("PipelineOwner"),
      PrimaryScrollController: findType("PrimaryScrollController"),
      RenderBox: findType("RenderBox"),
      RenderObject: findType("RenderObject"),
      ViewportNotificationMixin: findType("ViewportNotificationMixin"),
      ViewportOffset: findType("ViewportOffset"),
      _RenderSingleChildViewport: findType("_RenderSingleChildViewport")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    D.ScrollViewKeyboardDismissBehavior_0 = new A.ScrollViewKeyboardDismissBehavior(0, "manual");
    D.ScrollViewKeyboardDismissBehavior_1 = new A.ScrollViewKeyboardDismissBehavior(1, "onDrag");
    D.List_empty28 = B._setArrayType(makeConstList([]), B.findType("JSArray<TargetPlatform>"));
    D.Map_empty10 = new B.ConstantStringMap(0, {}, D.List_empty28, B.findType("ConstantStringMap<TargetPlatform,Null>"));
    D.Set_empty = new B._UnmodifiableSet(D.Map_empty10, B.findType("_UnmodifiableSet<TargetPlatform>"));
    D.Size_360_690 = new B.Size(360, 690);
    D.Size_boY = new B.Size(1116.2790697674418, 627.9069767441861);
  })();
  (function staticFields() {
    $.AutoUi__instance = null;
    $.UiUtil__instance = null;
  })();
};

$__dart_deferred_initializers__["4fIxyTV0O3wNeEBfsEYYGGTSa1s="] = $__dart_deferred_initializers__.current
