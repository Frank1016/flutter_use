// Generated by dart2js (NullSafetyMode.sound, csp, deferred-serialization, intern-composite-values), the Dart to JavaScript compiler version: 2.19.6.
self.$__dart_deferred_initializers__ = self.$__dart_deferred_initializers__ || Object.create(null);
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A = {
    _MaterialStateColor$(_resolve) {
      return new A._MaterialStateColor(_resolve, J.get$value$z(_resolve.call$1(D.Set_empty0)));
    },
    MaterialStateColor: function MaterialStateColor() {
    },
    _MaterialStateColor: function _MaterialStateColor(t0, t1) {
      this._material_state$_resolve = t0;
      this.value = t1;
    },
    TextButton_styleFrom(alignment, animationDuration, backgroundColor, disabledBackgroundColor, disabledForegroundColor, disabledMouseCursor, elevation, enableFeedback, enabledMouseCursor, foregroundColor, maximumSize, minimumSize, padding, shadowColor, shape, splashFactory, tapTargetSize, textStyle, visualDensity) {
      var disabledForeground, foregroundColorProp, t1, backgroundColorProp, overlayColor, mouseCursor, t2, t3, t4, t5, t6, _null = null;
      if (disabledForegroundColor == null)
        disabledForeground = _null;
      else
        disabledForeground = disabledForegroundColor;
      foregroundColorProp = new A._TextButtonDefaultColor(foregroundColor, disabledForeground);
      t1 = backgroundColor == null;
      if (t1 && disabledBackgroundColor == null)
        backgroundColorProp = _null;
      else if (disabledBackgroundColor == null) {
        t1 = t1 ? _null : new C.MaterialStatePropertyAll(backgroundColor, type$.MaterialStatePropertyAll_nullable_Color);
        backgroundColorProp = t1;
      } else {
        t1 = new A._TextButtonDefaultColor(backgroundColor, disabledBackgroundColor);
        backgroundColorProp = t1;
      }
      overlayColor = new A._TextButtonDefaultOverlay(foregroundColor);
      if (enabledMouseCursor == null && disabledMouseCursor == null)
        mouseCursor = _null;
      else {
        enabledMouseCursor.toString;
        disabledMouseCursor.toString;
        mouseCursor = new A._TextButtonDefaultMouseCursor(enabledMouseCursor, disabledMouseCursor);
      }
      t1 = textStyle == null ? _null : new C.MaterialStatePropertyAll(textStyle, type$.MaterialStatePropertyAll_TextStyle);
      t2 = shadowColor == null ? _null : new C.MaterialStatePropertyAll(shadowColor, type$.MaterialStatePropertyAll_Color);
      t3 = elevation == null ? _null : new C.MaterialStatePropertyAll(elevation, type$.MaterialStatePropertyAll_double);
      t4 = minimumSize == null ? _null : new C.MaterialStatePropertyAll(minimumSize, type$.MaterialStatePropertyAll_Size);
      t5 = maximumSize == null ? _null : new C.MaterialStatePropertyAll(maximumSize, type$.MaterialStatePropertyAll_Size);
      t6 = shape == null ? _null : new C.MaterialStatePropertyAll(shape, type$.MaterialStatePropertyAll_OutlinedBorder);
      return B.ButtonStyle$(alignment, animationDuration, backgroundColorProp, t3, enableFeedback, _null, foregroundColorProp, _null, _null, t5, t4, mouseCursor, overlayColor, new C.MaterialStatePropertyAll(padding, type$.MaterialStatePropertyAll_EdgeInsetsGeometry), t2, t6, _null, splashFactory, _null, tapTargetSize, t1, visualDensity);
    },
    _TextButtonDefaultColor: function _TextButtonDefaultColor(t0, t1) {
      this.color = t0;
      this.disabled = t1;
    },
    _TextButtonDefaultOverlay: function _TextButtonDefaultOverlay(t0) {
      this.primary = t0;
    },
    _TextButtonDefaultMouseCursor: function _TextButtonDefaultMouseCursor(t0, t1) {
      this.enabledCursor = t0;
      this.disabledCursor = t1;
    },
    __TextButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable: function __TextButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable() {
    }
  },
  E, B, C, D, J;
  A = hunkHelpers.updateHolder(holdersList[52], A);
  E = holdersList[2];
  B = holdersList[0];
  C = holdersList[58];
  D = holdersList[88];
  J = holdersList[1];
  A.MaterialStateColor.prototype = {$isMaterialStateProperty: 1};
  A._MaterialStateColor.prototype = {
    resolve$1(states) {
      return this._material_state$_resolve.call$1(type$.Set_MaterialState._as(states));
    }
  };
  A._TextButtonDefaultColor.prototype = {
    resolve$1(states) {
      if (type$.Set_MaterialState._as(states).contains$1(0, E.MaterialState_6))
        return this.disabled;
      return this.color;
    },
    toString$0(_) {
      return "{disabled: " + B.S(this.disabled) + ", otherwise: " + B.S(this.color) + "}";
    }
  };
  A._TextButtonDefaultOverlay.prototype = {
    resolve$1(states) {
      var t1;
      type$.Set_MaterialState._as(states);
      if (states.contains$1(0, E.MaterialState_0)) {
        t1 = this.primary;
        return B.Color$fromARGB(10, t1.get$value(t1) >>> 16 & 255, t1.get$value(t1) >>> 8 & 255, t1.get$value(t1) & 255);
      }
      if (states.contains$1(0, E.MaterialState_1) || states.contains$1(0, E.MaterialState_2)) {
        t1 = this.primary;
        return B.Color$fromARGB(31, t1.get$value(t1) >>> 16 & 255, t1.get$value(t1) >>> 8 & 255, t1.get$value(t1) & 255);
      }
      return null;
    },
    toString$0(_) {
      var t1 = this.primary;
      return "{hovered: " + B.Color$fromARGB(10, t1.get$value(t1) >>> 16 & 255, t1.get$value(t1) >>> 8 & 255, t1.get$value(t1) & 255).toString$0(0) + ", focused,pressed: " + B.Color$fromARGB(31, t1.get$value(t1) >>> 16 & 255, t1.get$value(t1) >>> 8 & 255, t1.get$value(t1) & 255).toString$0(0) + ", otherwise: null}";
    }
  };
  A._TextButtonDefaultMouseCursor.prototype = {
    resolve$1(states) {
      if (type$.Set_MaterialState._as(states).contains$1(0, E.MaterialState_6))
        return this.disabledCursor;
      return this.enabledCursor;
    }
  };
  A.__TextButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable.prototype = {};
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A.MaterialStateColor, B.Color);
    _inherit(A._MaterialStateColor, A.MaterialStateColor);
    _inheritMany(C.MaterialStateProperty, [A._TextButtonDefaultColor, A._TextButtonDefaultOverlay, A.__TextButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable]);
    _inherit(A._TextButtonDefaultMouseCursor, A.__TextButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable);
    _mixin(A.__TextButtonDefaultMouseCursor_MaterialStateProperty_Diagnosticable, B.Diagnosticable);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"MaterialStateColor":{"Color":[],"MaterialStateProperty":["Color"]},"_MaterialStateColor":{"Color":[],"MaterialStateProperty":["Color"]},"_TextButtonDefaultColor":{"MaterialStateProperty":["Color?"]},"_TextButtonDefaultOverlay":{"MaterialStateProperty":["Color?"]},"_TextButtonDefaultMouseCursor":{"MaterialStateProperty":["MouseCursor0"]},"TextButtonTheme":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]}}'));
  var type$ = {
    MaterialStatePropertyAll_Color: B.findType("MaterialStatePropertyAll<Color>"),
    MaterialStatePropertyAll_EdgeInsetsGeometry: B.findType("MaterialStatePropertyAll<EdgeInsetsGeometry>"),
    MaterialStatePropertyAll_OutlinedBorder: B.findType("MaterialStatePropertyAll<OutlinedBorder>"),
    MaterialStatePropertyAll_Size: B.findType("MaterialStatePropertyAll<Size>"),
    MaterialStatePropertyAll_TextStyle: B.findType("MaterialStatePropertyAll<TextStyle>"),
    MaterialStatePropertyAll_double: B.findType("MaterialStatePropertyAll<double>"),
    MaterialStatePropertyAll_nullable_Color: B.findType("MaterialStatePropertyAll<Color?>"),
    Set_MaterialState: B.findType("Set<MaterialState>")
  };
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    D.List_empty29 = B._setArrayType(makeConstList([]), B.findType("JSArray<MaterialState>"));
    D.Map_empty11 = new B.ConstantStringMap(0, {}, D.List_empty29, B.findType("ConstantStringMap<MaterialState,Null>"));
    D.Set_empty0 = new B._UnmodifiableSet(D.Map_empty11, B.findType("_UnmodifiableSet<MaterialState>"));
  })();
};

$__dart_deferred_initializers__["oyDNWmlu5IosY6AEa1vkhGGgR6Q="] = $__dart_deferred_initializers__.current
