// Generated by dart2js (NullSafetyMode.sound, csp, deferred-serialization, intern-composite-values), the Dart to JavaScript compiler version: 2.19.6.
self.$__dart_deferred_initializers__ = self.$__dart_deferred_initializers__ || Object.create(null);
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A = {
    Future_any(futures, $T) {
      var t1, t2, _i,
        completer = new B._SyncCompleter(new B._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_SyncCompleter<0>")),
        onValue = new A.Future_any_onValue(completer, $T),
        onError = new A.Future_any_onError(completer);
      for (t1 = futures.length, t2 = type$.void, _i = 0; _i < futures.length; futures.length === t1 || (0, B.throwConcurrentModificationError)(futures), ++_i)
        futures[_i].then$1$2$onError(onValue, onError, t2);
      return completer.future;
    },
    _StreamHandlerTransformer$(handleData, $S, $T) {
      return new A._StreamHandlerTransformer(new A._StreamHandlerTransformer_closure(handleData, null, null, $T, $S), $S._eval$1("@<0>")._bind$1($T)._eval$1("_StreamHandlerTransformer<1,2>"));
    },
    Future_any_onValue: function Future_any_onValue(t0, t1) {
      this.completer = t0;
      this.T = t1;
    },
    Future_any_onError: function Future_any_onError(t0) {
      this.completer = t0;
    },
    _StreamSinkTransformer: function _StreamSinkTransformer() {
    },
    _HandlerEventSink: function _HandlerEventSink(t0, t1, t2, t3, t4) {
      var _ = this;
      _._async$_handleData = t0;
      _._async$_handleError = t1;
      _._handleDone = t2;
      _._async$_sink = t3;
      _.$ti = t4;
    },
    _StreamHandlerTransformer: function _StreamHandlerTransformer(t0, t1) {
      this._sinkMapper = t0;
      this.$ti = t1;
    },
    _StreamHandlerTransformer_closure: function _StreamHandlerTransformer_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.handleData = t0;
      _.handleError = t1;
      _.handleDone = t2;
      _.T = t3;
      _.S = t4;
    },
    _ByteCallbackSink: function _ByteCallbackSink(t0, t1) {
      this._convert$_callback = t0;
      this._buffer = t1;
      this._bufferIndex = 0;
    },
    DateTime_parse(formattedString) {
      var t1, t2, t3, years, month, day, hour, minute, second, milliAndMicroseconds, millisecond, tzSign, sign, hourDifference, isUtc, value, _null = null,
        match = $.$get$DateTime__parseFormat().firstMatch$1(formattedString);
      if (match != null) {
        t1 = new A.DateTime_parse_parseIntOrZero();
        t2 = match._match;
        if (1 >= t2.length)
          return B.ioore(t2, 1);
        t3 = t2[1];
        t3.toString;
        years = B.int_parse(t3, _null);
        if (2 >= t2.length)
          return B.ioore(t2, 2);
        t3 = t2[2];
        t3.toString;
        month = B.int_parse(t3, _null);
        if (3 >= t2.length)
          return B.ioore(t2, 3);
        t3 = t2[3];
        t3.toString;
        day = B.int_parse(t3, _null);
        if (4 >= t2.length)
          return B.ioore(t2, 4);
        hour = t1.call$1(t2[4]);
        if (5 >= t2.length)
          return B.ioore(t2, 5);
        minute = t1.call$1(t2[5]);
        if (6 >= t2.length)
          return B.ioore(t2, 6);
        second = t1.call$1(t2[6]);
        if (7 >= t2.length)
          return B.ioore(t2, 7);
        milliAndMicroseconds = new A.DateTime_parse_parseMilliAndMicroseconds().call$1(t2[7]);
        millisecond = C.JSInt_methods._tdivFast$1(milliAndMicroseconds, 1000);
        t3 = t2.length;
        if (8 >= t3)
          return B.ioore(t2, 8);
        if (t2[8] != null) {
          if (9 >= t3)
            return B.ioore(t2, 9);
          tzSign = t2[9];
          if (tzSign != null) {
            sign = tzSign === "-" ? -1 : 1;
            if (10 >= t3)
              return B.ioore(t2, 10);
            t3 = t2[10];
            t3.toString;
            hourDifference = B.int_parse(t3, _null);
            if (11 >= t2.length)
              return B.ioore(t2, 11);
            minute -= sign * (t1.call$1(t2[11]) + 60 * hourDifference);
          }
          isUtc = true;
        } else
          isUtc = false;
        value = A.Primitives_valueFromDecomposedDate(years, month, day, hour, minute, second, millisecond + C.JSNumber_methods.round$0(milliAndMicroseconds % 1000 / 1000), isUtc);
        if (value == null)
          throw B.wrapException(B.FormatException$("Time out of range", formattedString, _null));
        return B.DateTime$_withValue(value, isUtc);
      } else
        throw B.wrapException(B.FormatException$("Invalid date format", formattedString, _null));
    },
    DateTime_parse_parseIntOrZero: function DateTime_parse_parseIntOrZero() {
    },
    DateTime_parse_parseMilliAndMicroseconds: function DateTime_parse_parseMilliAndMicroseconds() {
    },
    CanonicalizedMap: function CanonicalizedMap() {
    },
    CanonicalizedMap_addAll_closure: function CanonicalizedMap_addAll_closure(t0) {
      this.$this = t0;
    },
    CanonicalizedMap_entries_closure: function CanonicalizedMap_entries_closure(t0) {
      this.$this = t0;
    },
    CanonicalizedMap_forEach_closure: function CanonicalizedMap_forEach_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    CanonicalizedMap_keys_closure: function CanonicalizedMap_keys_closure(t0) {
      this.$this = t0;
    },
    CanonicalizedMap_map_closure: function CanonicalizedMap_map_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.transform = t1;
      _.K2 = t2;
      _.V2 = t3;
    },
    CanonicalizedMap_putIfAbsent_closure: function CanonicalizedMap_putIfAbsent_closure(t0, t1, t2) {
      this.$this = t0;
      this.key = t1;
      this.ifAbsent = t2;
    },
    CanonicalizedMap_values_closure: function CanonicalizedMap_values_closure(t0) {
      this.$this = t0;
    },
    ResponseBody: function ResponseBody(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.stream = t0;
      _.headers = t1;
      _.statusCode = t2;
      _.statusMessage = t3;
      _.isRedirect = t4;
      _.extra = t5;
    },
    BrowserHttpClientAdapter: function BrowserHttpClientAdapter(t0) {
      this.xhrs = t0;
    },
    BrowserHttpClientAdapter_fetch_closure: function BrowserHttpClientAdapter_fetch_closure(t0) {
      this.xhr = t0;
    },
    BrowserHttpClientAdapter_fetch_closure0: function BrowserHttpClientAdapter_fetch_closure0(t0, t1) {
      this.xhr = t0;
      this.completer = t1;
    },
    BrowserHttpClientAdapter_fetch__closure: function BrowserHttpClientAdapter_fetch__closure() {
    },
    BrowserHttpClientAdapter_fetch_closure1: function BrowserHttpClientAdapter_fetch_closure1(t0, t1, t2, t3) {
      var _ = this;
      _.completer = t0;
      _.xhr = t1;
      _.options = t2;
      _.connectionTimeout = t3;
    },
    BrowserHttpClientAdapter_fetch_closure2: function BrowserHttpClientAdapter_fetch_closure2(t0, t1, t2, t3, t4) {
      var _ = this;
      _._box_0 = t0;
      _.options = t1;
      _.uploadStopwatch = t2;
      _.completer = t3;
      _.xhr = t4;
    },
    BrowserHttpClientAdapter_fetch_closure3: function BrowserHttpClientAdapter_fetch_closure3(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._box_0 = t0;
      _.options = t1;
      _.uploadStopwatch = t2;
      _.downloadStopwatch = t3;
      _.completer = t4;
      _.xhr = t5;
    },
    BrowserHttpClientAdapter_fetch_closure4: function BrowserHttpClientAdapter_fetch_closure4(t0, t1, t2) {
      this._box_0 = t0;
      this.completer = t1;
      this.options = t2;
    },
    BrowserHttpClientAdapter_fetch_closure5: function BrowserHttpClientAdapter_fetch_closure5(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.xhr = t1;
      _.completer = t2;
      _.options = t3;
    },
    BrowserHttpClientAdapter_fetch_closure6: function BrowserHttpClientAdapter_fetch_closure6(t0) {
      this.completer = t0;
    },
    BrowserHttpClientAdapter_fetch_closure7: function BrowserHttpClientAdapter_fetch_closure7(t0) {
      this.completer = t0;
    },
    BrowserHttpClientAdapter_fetch_closure8: function BrowserHttpClientAdapter_fetch_closure8(t0, t1) {
      this.$this = t0;
      this.xhr = t1;
    },
    CancelToken: function CancelToken(t0) {
      this._cancel_token$_completer = t0;
    },
    DioForBrowser: function DioForBrowser(t0, t1, t2, t3, t4) {
      var _ = this;
      _.DioMixin___DioMixin_options_A = t0;
      _.DioMixin__interceptors = t1;
      _.DioMixin___DioMixin_httpClientAdapter_A = t2;
      _.DioMixin_transformer = t3;
      _.DioMixin__closed = t4;
    },
    _DioForBrowser_Object_DioMixin: function _DioForBrowser_Object_DioMixin() {
    },
    _DioErrorTypeExtension_toPrettyDescription(_this) {
      switch (_this.index) {
        case 0:
          return "connection timeout";
        case 1:
          return "send timeout";
        case 2:
          return "receive timeout";
        case 3:
          return "bad certificate";
        case 4:
          return "bad response";
        case 5:
          return "request cancelled";
        case 6:
          return "connection error";
        case 7:
          return "unknown";
      }
    },
    DioError$connectionTimeout(requestOptions, timeout) {
      var t1 = timeout.toString$0(0);
      return new A.DioError(requestOptions, null, D.DioErrorType_0, null, null, "The request connection took longer than " + t1 + ". It was aborted.");
    },
    DioError$connectionError(reason, requestOptions) {
      return new A.DioError(requestOptions, null, D.DioErrorType_6, null, null, "The connection errored: " + reason);
    },
    DioErrorType: function DioErrorType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    DioError: function DioError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.requestOptions = t0;
      _.response = t1;
      _.type = t2;
      _.error = t3;
      _.stackTrace = t4;
      _.message = t5;
    },
    DioMixin_listenCancelForAsyncTask(cancelToken, future, $T) {
      var t1 = B._setArrayType([], $T._eval$1("JSArray<Future<0>>"));
      if (cancelToken != null)
        t1.push(cancelToken._cancel_token$_completer.future.then$1$1(new A.DioMixin_listenCancelForAsyncTask_closure(), $T));
      t1.push(future);
      return A.Future_any(t1, $T);
    },
    DioMixin_assureDioError(err, requestOptions, sourceStackTrace) {
      if (err instanceof A.DioError)
        return err;
      return new A.DioError(requestOptions, null, D.DioErrorType_7, err, sourceStackTrace === C.C__StringStackTrace ? null : sourceStackTrace, null);
    },
    DioMixin_assureResponse(response, requestOptions, $T) {
      var data, headers;
      if (!(response instanceof A.Response)) {
        $T._as(response);
        return A.Response$(response, C.Map_empty4, null, false, D.List_empty14, requestOptions, null, null, $T);
      } else if (!$T._eval$1("Response<0>")._is(response)) {
        data = $T._eval$1("0?")._as(response.data);
        headers = data instanceof A.ResponseBody ? A.Headers$fromMap(data.headers) : response.headers;
        return A.Response$(data, response.extra, headers, response.isRedirect, response.redirects, response.requestOptions, response.statusCode, response.statusMessage, $T);
      }
      return response;
    },
    DioMixin: function DioMixin() {
    },
    DioMixin_fetch_requestInterceptorWrapper: function DioMixin_fetch_requestInterceptorWrapper(t0) {
      this._box_1 = t0;
    },
    DioMixin_fetch_requestInterceptorWrapper_closure: function DioMixin_fetch_requestInterceptorWrapper_closure(t0, t1) {
      this._box_1 = t0;
      this.interceptor = t1;
    },
    DioMixin_fetch_requestInterceptorWrapper__closure: function DioMixin_fetch_requestInterceptorWrapper__closure(t0, t1) {
      this.interceptor = t0;
      this.state = t1;
    },
    DioMixin_fetch_responseInterceptorWrapper: function DioMixin_fetch_responseInterceptorWrapper(t0) {
      this._box_1 = t0;
    },
    DioMixin_fetch_responseInterceptorWrapper_closure: function DioMixin_fetch_responseInterceptorWrapper_closure(t0, t1) {
      this._box_1 = t0;
      this.interceptor = t1;
    },
    DioMixin_fetch_responseInterceptorWrapper__closure: function DioMixin_fetch_responseInterceptorWrapper__closure(t0, t1) {
      this.interceptor = t0;
      this.state = t1;
    },
    DioMixin_fetch_errorInterceptorWrapper: function DioMixin_fetch_errorInterceptorWrapper(t0) {
      this._box_1 = t0;
    },
    DioMixin_fetch_errorInterceptorWrapper_closure: function DioMixin_fetch_errorInterceptorWrapper_closure(t0, t1) {
      this._box_1 = t0;
      this.interceptor = t1;
    },
    DioMixin_fetch_errorInterceptorWrapper__closure: function DioMixin_fetch_errorInterceptorWrapper__closure(t0, t1) {
      this._box_0 = t0;
      this.interceptor = t1;
    },
    DioMixin_fetch_closure: function DioMixin_fetch_closure(t0) {
      this._box_1 = t0;
    },
    DioMixin_fetch_closure0: function DioMixin_fetch_closure0(t0, t1, t2) {
      this._box_1 = t0;
      this.$this = t1;
      this.T = t2;
    },
    DioMixin_fetch__closure: function DioMixin_fetch__closure(t0) {
      this.handler = t0;
    },
    DioMixin_fetch__closure0: function DioMixin_fetch__closure0(t0) {
      this.handler = t0;
    },
    DioMixin_fetch_closure1: function DioMixin_fetch_closure1(t0, t1) {
      this._box_1 = t0;
      this.T = t1;
    },
    DioMixin_fetch_closure2: function DioMixin_fetch_closure2(t0, t1) {
      this._box_1 = t0;
      this.T = t1;
    },
    DioMixin_listenCancelForAsyncTask_closure: function DioMixin_listenCancelForAsyncTask_closure() {
    },
    InterceptorResultType: function InterceptorResultType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    InterceptorState: function InterceptorState(t0, t1, t2) {
      this.data = t0;
      this.type = t1;
      this.$ti = t2;
    },
    _BaseHandler: function _BaseHandler() {
    },
    RequestInterceptorHandler: function RequestInterceptorHandler(t0) {
      this._dio_mixin$_completer = t0;
    },
    ResponseInterceptorHandler: function ResponseInterceptorHandler(t0) {
      this._dio_mixin$_completer = t0;
    },
    ErrorInterceptorHandler: function ErrorInterceptorHandler(t0) {
      this._dio_mixin$_completer = t0;
    },
    Interceptor0: function Interceptor0() {
    },
    Interceptors: function Interceptors(t0) {
      this._dio_mixin$_list = t0;
    },
    Headers$fromMap(map) {
      var t1 = type$.List_String;
      return new A.Headers(A.caseInsensitiveKeyMap(map.map$2$1(map, new A.Headers$fromMap_closure(), type$.String, t1), t1));
    },
    Headers: function Headers(t0) {
      this._headers$_map = t0;
    },
    Headers$fromMap_closure: function Headers$fromMap_closure() {
    },
    Headers_toString_closure: function Headers_toString_closure(t0) {
      this.stringBuffer = t0;
    },
    ImplyContentTypeInterceptor: function ImplyContentTypeInterceptor() {
    },
    LogInterceptor: function LogInterceptor() {
    },
    LogInterceptor_onRequest_closure: function LogInterceptor_onRequest_closure(t0) {
      this.$this = t0;
    },
    LogInterceptor__printResponse_closure: function LogInterceptor__printResponse_closure(t0) {
      this.$this = t0;
    },
    BaseOptions$(connectTimeout, headers, receiveTimeout, sendTimeout) {
      var _null = null,
        t1 = new A.BaseOptions($, $, _null, sendTimeout, receiveTimeout, _null, _null);
      t1._RequestConfig$15$contentType$extra$followRedirects$headers$listFormat$maxRedirects$method$persistentConnection$receiveDataWhenStatusError$receiveTimeout$requestEncoder$responseDecoder$responseType$sendTimeout$validateStatus(_null, _null, _null, headers, _null, _null, _null, _null, _null, receiveTimeout, _null, _null, D.ResponseType_0, sendTimeout, _null);
      t1.set$__OptionsMixin_queryParameters_A(type$.Map_String_dynamic._as(B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic)));
      t1.OptionsMixin___OptionsMixin_baseUrl_A = "";
      t1.set$connectTimeout(connectTimeout);
      return t1;
    },
    Options$() {
      return new A.Options();
    },
    RequestOptions$(baseUrl, cancelToken, connectTimeout, contentType, data, extra, followRedirects, headers, listFormat, maxRedirects, method, onReceiveProgress, onSendProgress, path, persistentConnection, queryParameters, receiveDataWhenStatusError, receiveTimeout, requestEncoder, responseDecoder, responseType, sendTimeout, validateStatus) {
      var t2,
        t1 = new A.RequestOptions(data, path, cancelToken, onReceiveProgress, onSendProgress, $, $, null, sendTimeout, receiveTimeout, requestEncoder, responseDecoder);
      t1._RequestConfig$15$contentType$extra$followRedirects$headers$listFormat$maxRedirects$method$persistentConnection$receiveDataWhenStatusError$receiveTimeout$requestEncoder$responseDecoder$responseType$sendTimeout$validateStatus(contentType, extra, followRedirects, headers, listFormat, maxRedirects, method, persistentConnection, receiveDataWhenStatusError, receiveTimeout, requestEncoder, responseDecoder, responseType, sendTimeout, validateStatus);
      t2 = queryParameters == null ? B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic) : queryParameters;
      t1.set$__OptionsMixin_queryParameters_A(type$.Map_String_dynamic._as(t2));
      t1.OptionsMixin___OptionsMixin_baseUrl_A = baseUrl == null ? "" : baseUrl;
      t1.set$connectTimeout(connectTimeout);
      return t1;
    },
    ResponseType: function ResponseType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    ListFormat: function ListFormat(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    BaseOptions: function BaseOptions(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.OptionsMixin___OptionsMixin_baseUrl_A = t0;
      _.OptionsMixin___OptionsMixin_queryParameters_A = t1;
      _.OptionsMixin__connectTimeout = t2;
      _.___RequestConfig__headers_A = _.___RequestConfig_method_A = $;
      _._sendTimeout = t3;
      _._receiveTimeout = t4;
      _._defaultContentType = null;
      _.___RequestConfig_persistentConnection_A = _.___RequestConfig_maxRedirects_A = _.___RequestConfig_followRedirects_A = _.___RequestConfig_extra_A = _.___RequestConfig_receiveDataWhenStatusError_A = _.___RequestConfig_validateStatus_A = _.___RequestConfig_responseType_A = $;
      _.requestEncoder = t5;
      _.responseDecoder = t6;
      _.___RequestConfig_listFormat_A = $;
    },
    OptionsMixin: function OptionsMixin() {
    },
    Options: function Options() {
    },
    RequestOptions: function RequestOptions(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.data = t0;
      _.path = t1;
      _.cancelToken = t2;
      _.onReceiveProgress = t3;
      _.onSendProgress = t4;
      _.OptionsMixin___OptionsMixin_baseUrl_A = t5;
      _.OptionsMixin___OptionsMixin_queryParameters_A = t6;
      _.OptionsMixin__connectTimeout = t7;
      _.___RequestConfig__headers_A = _.___RequestConfig_method_A = $;
      _._sendTimeout = t8;
      _._receiveTimeout = t9;
      _._defaultContentType = null;
      _.___RequestConfig_persistentConnection_A = _.___RequestConfig_maxRedirects_A = _.___RequestConfig_followRedirects_A = _.___RequestConfig_extra_A = _.___RequestConfig_receiveDataWhenStatusError_A = _.___RequestConfig_validateStatus_A = _.___RequestConfig_responseType_A = $;
      _.requestEncoder = t10;
      _.responseDecoder = t11;
      _.___RequestConfig_listFormat_A = $;
    },
    _RequestConfig: function _RequestConfig() {
    },
    _RequestConfig_closure: function _RequestConfig_closure() {
    },
    _BaseOptions__RequestConfig_OptionsMixin: function _BaseOptions__RequestConfig_OptionsMixin() {
    },
    _RequestOptions__RequestConfig_OptionsMixin: function _RequestOptions__RequestConfig_OptionsMixin() {
    },
    Response$(data, extra, headers, isRedirect, redirects, requestOptions, statusCode, statusMessage, $T) {
      var t1 = headers == null ? new A.Headers(A.caseInsensitiveKeyMap(null, type$.List_String)) : headers;
      return new A.Response(data, requestOptions, statusCode, statusMessage, isRedirect, redirects, extra, t1, $T._eval$1("Response<0>"));
    },
    Response: function Response(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.data = t0;
      _.requestOptions = t1;
      _.statusCode = t2;
      _.statusMessage = t3;
      _.isRedirect = t4;
      _.redirects = t5;
      _.extra = t6;
      _.headers = t7;
      _.$ti = t8;
    },
    Transformer_urlEncodeMap(map, listFormat) {
      return A.encodeMap(map, new A.Transformer_urlEncodeMap_closure(), listFormat);
    },
    Transformer_isJsonMimeType(contentType) {
      var mediaType, t1, t2;
      if (contentType == null)
        return false;
      mediaType = A.MediaType_MediaType$parse(contentType);
      t1 = mediaType.subtype;
      t2 = mediaType.type + "/" + t1;
      return t2 === "application/json" || t2 === "text/json" || C.JSString_methods.endsWith$1(t1, "+json");
    },
    Transformer: function Transformer() {
    },
    Transformer_urlEncodeMap_closure: function Transformer_urlEncodeMap_closure() {
    },
    _decodeJson(text) {
      B._asString(text);
      if (text.length < 51200)
        return C.C_JsonCodec.decode$2$reviver(0, text, null);
      return A.compute_web__compute$closure().call$2$2(I.convert__jsonDecode$closure(), text, type$.String, type$.dynamic);
    },
    BackgroundTransformer: function BackgroundTransformer(t0) {
      this.jsonDecodeCallback = t0;
    },
    SyncTransformer: function SyncTransformer() {
    },
    SyncTransformer_transformResponse_closure: function SyncTransformer_transformResponse_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.showDownloadProgress = t1;
      this.options = t2;
    },
    SyncTransformer_transformResponse_closure0: function SyncTransformer_transformResponse_closure0(t0, t1) {
      this._box_0 = t0;
      this.chunks = t1;
    },
    SyncTransformer_transformResponse_closure2: function SyncTransformer_transformResponse_closure2(t0) {
      this.completer = t0;
    },
    SyncTransformer_transformResponse_closure1: function SyncTransformer_transformResponse_closure1(t0) {
      this.completer = t0;
    },
    SyncTransformer_transformResponse_closure3: function SyncTransformer_transformResponse_closure3(t0) {
      this.subscription = t0;
    },
    encodeMap(data, handler, listFormat) {
      var t1 = {},
        urlData = new B.StringBuffer("");
      t1.first = true;
      new A.encodeMap_urlEncode(t1, listFormat, "%5B", "%5D", B.core_Uri_encodeQueryComponent$closure(), handler, urlData).call$2(data, "");
      t1 = urlData._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _getSeparatorChar(collectionFormat) {
      switch (collectionFormat.index) {
        case 0:
          return ",";
        case 1:
          return " ";
        case 2:
          return "\\t";
        case 3:
          return "|";
        default:
          return "";
      }
    },
    caseInsensitiveKeyMap(value, $V) {
      var map = B.LinkedHashMap_LinkedHashMap(new A.caseInsensitiveKeyMap_closure(), new A.caseInsensitiveKeyMap_closure0(), null, type$.String, $V);
      if (value != null && value._length !== 0)
        map.addAll$1(0, value);
      return map;
    },
    encodeMap_urlEncode: function encodeMap_urlEncode(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._box_0 = t0;
      _.listFormat = t1;
      _.leftBracket = t2;
      _.rightBracket = t3;
      _.encodeComponent = t4;
      _.handler = t5;
      _.urlData = t6;
    },
    encodeMap_urlEncode_closure: function encodeMap_urlEncode_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.path = t0;
      _.urlEncode = t1;
      _.encodeComponent = t2;
      _.leftBracket = t3;
      _.rightBracket = t4;
    },
    caseInsensitiveKeyMap_closure: function caseInsensitiveKeyMap_closure() {
    },
    caseInsensitiveKeyMap_closure0: function caseInsensitiveKeyMap_closure0() {
    },
    CupertinoSwitch: function CupertinoSwitch(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.value = t0;
      _.onChanged = t1;
      _.activeColor = t2;
      _.trackColor = t3;
      _.thumbColor = t4;
      _.key = t5;
    },
    _CupertinoSwitchState: function _CupertinoSwitchState(t0, t1, t2) {
      var _ = this;
      _.___CupertinoSwitchState__reaction_A = _.___CupertinoSwitchState__reactionController_A = _.___CupertinoSwitchState_position_A = _.___CupertinoSwitchState__positionController_A = _.___CupertinoSwitchState__drag_A = _.___CupertinoSwitchState__tap_A = $;
      _.needsPositionAnimation = false;
      _.TickerProviderStateMixin__tickers = t0;
      _.TickerProviderStateMixin__tickerModeNotifier = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _CupertinoSwitchState__handleDragEnd_closure: function _CupertinoSwitchState__handleDragEnd_closure(t0) {
      this.$this = t0;
    },
    _CupertinoSwitchRenderObjectWidget: function _CupertinoSwitchRenderObjectWidget(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.value = t0;
      _.activeColor = t1;
      _.trackColor = t2;
      _.thumbColor = t3;
      _.onChanged = t4;
      _.state = t5;
      _.textDirection = t6;
      _.key = t7;
    },
    _RenderCupertinoSwitch: function _RenderCupertinoSwitch(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _._switch$_state = t0;
      _._switch$_value = t1;
      _._switch$_activeColor = t2;
      _._switch$_trackColor = t3;
      _._thumbPainter = t4;
      _._onChanged = t5;
      _._switch$_textDirection = t6;
      _._clipRRectLayer = t7;
      _._additionalConstraints = t8;
      _.RenderObjectWithChildMixin__child = t9;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t10;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderCupertinoSwitch_paint_closure: function _RenderCupertinoSwitch_paint_closure(t0, t1) {
      this.$this = t0;
      this.thumbBounds = t1;
    },
    __CupertinoSwitchState_State_TickerProviderStateMixin: function __CupertinoSwitchState_State_TickerProviderStateMixin() {
    },
    CupertinoThumbPainter: function CupertinoThumbPainter(t0, t1) {
      this.color = t0;
      this.shadows = t1;
    },
    DecorationImage: function DecorationImage() {
    },
    DecorationImagePainter: function DecorationImagePainter(t0, t1) {
      var _ = this;
      _._details = t0;
      _._decoration_image$_onChanged = t1;
      _._decoration_image$_image = _._decoration_image$_imageStream = null;
    },
    SliverGridGeometry: function SliverGridGeometry(t0, t1, t2, t3) {
      var _ = this;
      _.scrollOffset = t0;
      _.crossAxisOffset = t1;
      _.mainAxisExtent = t2;
      _.crossAxisExtent = t3;
    },
    SliverGridLayout: function SliverGridLayout() {
    },
    SliverGridRegularTileLayout: function SliverGridRegularTileLayout(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.crossAxisCount = t0;
      _.mainAxisStride = t1;
      _.crossAxisStride = t2;
      _.childMainAxisExtent = t3;
      _.childCrossAxisExtent = t4;
      _.reverseCrossAxis = t5;
    },
    SliverGridDelegate: function SliverGridDelegate() {
    },
    SliverGridDelegateWithMaxCrossAxisExtent: function SliverGridDelegateWithMaxCrossAxisExtent() {
    },
    SliverGridParentData: function SliverGridParentData(t0, t1, t2) {
      var _ = this;
      _.index = _.crossAxisOffset = null;
      _._keptAlive = false;
      _.KeepAliveParentDataMixin_keepAlive = t0;
      _.ContainerParentDataMixin_previousSibling = t1;
      _.ContainerParentDataMixin_nextSibling = t2;
      _.layoutOffset = null;
    },
    RenderSliverGrid: function RenderSliverGrid(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._gridDelegate = t0;
      _._childManager = t1;
      _._keepAliveBucket = t2;
      _.__RenderSliverMultiBoxAdaptor__debugDanglingKeepAlives_A = $;
      _._debugChildIntegrityEnabled = true;
      _.ContainerRenderObjectMixin__childCount = t3;
      _.ContainerRenderObjectMixin__firstChild = t4;
      _.ContainerRenderObjectMixin__lastChild = t5;
      _._geometry = null;
      _._debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    NeverScrollableScrollPhysics: function NeverScrollableScrollPhysics(t0) {
      this.parent = t0;
    },
    GridView: function GridView(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _.gridDelegate = t0;
      _.childrenDelegate = t1;
      _.padding = t2;
      _.scrollDirection = t3;
      _.reverse = t4;
      _.controller = t5;
      _.primary = t6;
      _.physics = t7;
      _.shrinkWrap = t8;
      _.cacheExtent = t9;
      _.semanticChildCount = t10;
      _.dragStartBehavior = t11;
      _.keyboardDismissBehavior = t12;
      _.restorationId = t13;
      _.clipBehavior = t14;
      _.key = t15;
    },
    SliverGrid: function SliverGrid(t0, t1, t2) {
      this.gridDelegate = t0;
      this.delegate = t1;
      this.key = t2;
    },
    NetListBean: function NetListBean() {
      var _ = this;
      _.__NetListBean_url_A = _.__NetListBean_type_A = _.__NetListBean_title_A = _.__NetListBean_order_A = _.__NetListBean_isVisible_A = _.__NetListBean_imagePath_A = _.__NetListBean_id_A = _.__NetListBean_desc_A = $;
    },
    NetObjectBean: function NetObjectBean() {
      var _ = this;
      _.__NetObjectBean_total_A = _.__NetObjectBean_size_A = _.__NetObjectBean_pageCount_A = _.__NetObjectBean_over_A = _.__NetObjectBean_offset_A = _.__NetObjectBean_datas_A = _.__NetObjectBean_curPage_A = $;
    },
    NetObjectDatas: function NetObjectDatas() {
      var _ = this;
      _.__NetObjectDatas_type_A = _.__NetObjectDatas_title_A = _.__NetObjectDatas_tags_A = _.__NetObjectDatas_superChapterName_A = _.__NetObjectDatas_superChapterId_A = _.__NetObjectDatas_shareUser_A = _.__NetObjectDatas_shareDate_A = _.__NetObjectDatas_selfVisible_A = _.__NetObjectDatas_realSuperChapterId_A = _.__NetObjectDatas_publishTime_A = _.__NetObjectDatas_projectLink_A = _.__NetObjectDatas_prefix_A = _.__NetObjectDatas_origin_A = _.__NetObjectDatas_niceShareDate_A = _.__NetObjectDatas_niceDate_A = _.__NetObjectDatas_link_A = _.__NetObjectDatas_id_A = _.__NetObjectDatas_host_A = _.__NetObjectDatas_fresh_A = _.__NetObjectDatas_envelopePic_A = _.__NetObjectDatas_descMd_A = _.__NetObjectDatas_desc_A = _.__NetObjectDatas_courseId_A = _.__NetObjectDatas_collect_A = _.__NetObjectDatas_chapterName_A = _.__NetObjectDatas_chapterId_A = _.__NetObjectDatas_canEdit_A = _.__NetObjectDatas_author_A = _.__NetObjectDatas_audit_A = _.__NetObjectDatas_apkLink_A = $;
      _.__NetObjectDatas_zan_A = _.__NetObjectDatas_visible_A = _.__NetObjectDatas_userId_A = $;
    },
    JsonConvert__fromJsonSingle(json, $M) {
      var _null = null,
        type = B._rtiToString(B.createRuntimeType($M)._rti, _null);
      if (type === B._rtiToString(D.Type_NetListBean_Iit._rti, _null))
        return $M._as(A.$NetListBeanFromJson(json));
      if (type === B._rtiToString(D.Type_NetObjectBean_QxC._rti, _null))
        return $M._as(A.$NetObjectBeanFromJson(json));
      if (type === B._rtiToString(D.Type_NetObjectDatas_YWW._rti, _null))
        return $M._as(A.$NetObjectDatasFromJson(json));
      B.print(type + " not found");
      return _null;
    },
    JsonConvert__getListChildType(data, $M) {
      if ($M._is(B._setArrayType([], type$.JSArray_NetListBean)))
        return $M._as(J.map$1$1$ax(data, new A.JsonConvert__getListChildType_closure(), type$.NetListBean).toList$0(0));
      if ($M._is(B._setArrayType([], type$.JSArray_NetObjectBean)))
        return $M._as(J.map$1$1$ax(data, new A.JsonConvert__getListChildType_closure0(), type$.NetObjectBean).toList$0(0));
      if ($M._is(B._setArrayType([], type$.JSArray_NetObjectDatas)))
        return $M._as(J.map$1$1$ax(data, new A.JsonConvert__getListChildType_closure1(), type$.NetObjectDatas).toList$0(0));
      B.print(B._rtiToString(B.createRuntimeType($M)._rti, null) + " not found");
      return null;
    },
    JsonConvert_fromJsonAsT(json, $M) {
      if (json == null)
        return null;
      if (type$.List_dynamic._is(json))
        return A.JsonConvert__getListChildType(json, $M);
      else
        return A.JsonConvert__fromJsonSingle(type$.Map_String_dynamic._as(json), $M);
    },
    JsonConvert: function JsonConvert() {
    },
    JsonConvert_convertListNotNull_closure: function JsonConvert_convertListNotNull_closure(t0, t1) {
      this.$this = t0;
      this.T = t1;
    },
    JsonConvert__getListChildType_closure: function JsonConvert__getListChildType_closure() {
    },
    JsonConvert__getListChildType_closure0: function JsonConvert__getListChildType_closure0() {
    },
    JsonConvert__getListChildType_closure1: function JsonConvert__getListChildType_closure1() {
    },
    $NetObjectBeanFromJson(json) {
      var datas, offset, over, pageCount, size, total,
        netObjectBean = new A.NetObjectBean(),
        t1 = J.getInterceptor$asx(json),
        t2 = type$.int,
        curPage = $.$get$jsonConvert().convert$1$1(t1.$index(json, "curPage"), t2);
      if (curPage != null)
        netObjectBean.__NetObjectBean_curPage_A = curPage;
      datas = $.$get$jsonConvert().convertListNotNull$1$1(t1.$index(json, "datas"), type$.NetObjectDatas);
      if (datas != null)
        netObjectBean.set$__NetObjectBean_datas_A(type$.List_NetObjectDatas._as(datas));
      offset = $.$get$jsonConvert().convert$1$1(t1.$index(json, "offset"), t2);
      if (offset != null)
        netObjectBean.__NetObjectBean_offset_A = offset;
      over = $.$get$jsonConvert().convert$1$1(t1.$index(json, "over"), type$.bool);
      if (over != null)
        netObjectBean.__NetObjectBean_over_A = over;
      pageCount = $.$get$jsonConvert().convert$1$1(t1.$index(json, "pageCount"), t2);
      if (pageCount != null)
        netObjectBean.__NetObjectBean_pageCount_A = pageCount;
      size = $.$get$jsonConvert().convert$1$1(t1.$index(json, "size"), t2);
      if (size != null)
        netObjectBean.__NetObjectBean_size_A = size;
      total = $.$get$jsonConvert().convert$1$1(t1.$index(json, "total"), t2);
      if (total != null)
        netObjectBean.__NetObjectBean_total_A = total;
      return netObjectBean;
    },
    $NetObjectBeanToJson(entity) {
      var t2, t3,
        _s9_ = "pageCount",
        data = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = entity.__NetObjectBean_curPage_A;
      t1 === $ && B.throwLateFieldNI("curPage");
      data.$indexSet(0, "curPage", t1);
      t1 = entity.__NetObjectBean_datas_A;
      t1 === $ && B.throwLateFieldNI("datas");
      t2 = B._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Map<String,@>>");
      data.$indexSet(0, "datas", B.List_List$of(new B.MappedListIterable(t1, t2._eval$1("Map<String,@>(1)")._as(new A.$NetObjectBeanToJson_closure()), t3), true, t3._eval$1("ListIterable.E")));
      t3 = entity.__NetObjectBean_offset_A;
      t3 === $ && B.throwLateFieldNI("offset");
      data.$indexSet(0, "offset", t3);
      t3 = entity.__NetObjectBean_over_A;
      t3 === $ && B.throwLateFieldNI("over");
      data.$indexSet(0, "over", t3);
      t3 = entity.__NetObjectBean_pageCount_A;
      t3 === $ && B.throwLateFieldNI(_s9_);
      data.$indexSet(0, _s9_, t3);
      t3 = entity.__NetObjectBean_size_A;
      t3 === $ && B.throwLateFieldNI("size");
      data.$indexSet(0, "size", t3);
      t3 = entity.__NetObjectBean_total_A;
      t3 === $ && B.throwLateFieldNI("total");
      data.$indexSet(0, "total", t3);
      return data;
    },
    $NetObjectDatasFromJson(json) {
      var t3, audit, author, t4, canEdit, chapterId, chapterName, collect, courseId, desc, descMd, envelopePic, fresh, host, id, link, niceDate, niceShareDate, origin, prefix, projectLink, publishTime, realSuperChapterId, selfVisible, shareDate, shareUser, superChapterId, superChapterName, tags, title, type, userId, visible, zan,
        netObjectDatas = new A.NetObjectDatas(),
        t1 = J.getInterceptor$asx(json),
        t2 = type$.String,
        apkLink = $.$get$jsonConvert().convert$1$1(t1.$index(json, "apkLink"), t2);
      if (apkLink != null)
        netObjectDatas.__NetObjectDatas_apkLink_A = apkLink;
      t3 = type$.int;
      audit = $.$get$jsonConvert().convert$1$1(t1.$index(json, "audit"), t3);
      if (audit != null)
        netObjectDatas.__NetObjectDatas_audit_A = audit;
      author = $.$get$jsonConvert().convert$1$1(t1.$index(json, "author"), t2);
      if (author != null)
        netObjectDatas.__NetObjectDatas_author_A = author;
      t4 = type$.bool;
      canEdit = $.$get$jsonConvert().convert$1$1(t1.$index(json, "canEdit"), t4);
      if (canEdit != null)
        netObjectDatas.__NetObjectDatas_canEdit_A = canEdit;
      chapterId = $.$get$jsonConvert().convert$1$1(t1.$index(json, "chapterId"), t3);
      if (chapterId != null)
        netObjectDatas.__NetObjectDatas_chapterId_A = chapterId;
      chapterName = $.$get$jsonConvert().convert$1$1(t1.$index(json, "chapterName"), t2);
      if (chapterName != null)
        netObjectDatas.__NetObjectDatas_chapterName_A = chapterName;
      collect = $.$get$jsonConvert().convert$1$1(t1.$index(json, "collect"), t4);
      if (collect != null)
        netObjectDatas.__NetObjectDatas_collect_A = collect;
      courseId = $.$get$jsonConvert().convert$1$1(t1.$index(json, "courseId"), t3);
      if (courseId != null)
        netObjectDatas.__NetObjectDatas_courseId_A = courseId;
      desc = $.$get$jsonConvert().convert$1$1(t1.$index(json, "desc"), t2);
      if (desc != null)
        netObjectDatas.__NetObjectDatas_desc_A = desc;
      descMd = $.$get$jsonConvert().convert$1$1(t1.$index(json, "descMd"), t2);
      if (descMd != null)
        netObjectDatas.__NetObjectDatas_descMd_A = descMd;
      envelopePic = $.$get$jsonConvert().convert$1$1(t1.$index(json, "envelopePic"), t2);
      if (envelopePic != null)
        netObjectDatas.__NetObjectDatas_envelopePic_A = envelopePic;
      fresh = $.$get$jsonConvert().convert$1$1(t1.$index(json, "fresh"), t4);
      if (fresh != null)
        netObjectDatas.__NetObjectDatas_fresh_A = fresh;
      host = $.$get$jsonConvert().convert$1$1(t1.$index(json, "host"), t2);
      if (host != null)
        netObjectDatas.__NetObjectDatas_host_A = host;
      id = $.$get$jsonConvert().convert$1$1(t1.$index(json, "id"), t3);
      if (id != null)
        netObjectDatas.__NetObjectDatas_id_A = id;
      link = $.$get$jsonConvert().convert$1$1(t1.$index(json, "link"), t2);
      if (link != null)
        netObjectDatas.__NetObjectDatas_link_A = link;
      niceDate = $.$get$jsonConvert().convert$1$1(t1.$index(json, "niceDate"), t2);
      if (niceDate != null)
        netObjectDatas.__NetObjectDatas_niceDate_A = niceDate;
      niceShareDate = $.$get$jsonConvert().convert$1$1(t1.$index(json, "niceShareDate"), t2);
      if (niceShareDate != null)
        netObjectDatas.__NetObjectDatas_niceShareDate_A = niceShareDate;
      origin = $.$get$jsonConvert().convert$1$1(t1.$index(json, "origin"), t2);
      if (origin != null)
        netObjectDatas.__NetObjectDatas_origin_A = origin;
      prefix = $.$get$jsonConvert().convert$1$1(t1.$index(json, "prefix"), t2);
      if (prefix != null)
        netObjectDatas.__NetObjectDatas_prefix_A = prefix;
      projectLink = $.$get$jsonConvert().convert$1$1(t1.$index(json, "projectLink"), t2);
      if (projectLink != null)
        netObjectDatas.__NetObjectDatas_projectLink_A = projectLink;
      publishTime = $.$get$jsonConvert().convert$1$1(t1.$index(json, "publishTime"), t3);
      if (publishTime != null)
        netObjectDatas.__NetObjectDatas_publishTime_A = publishTime;
      realSuperChapterId = $.$get$jsonConvert().convert$1$1(t1.$index(json, "realSuperChapterId"), t3);
      if (realSuperChapterId != null)
        netObjectDatas.__NetObjectDatas_realSuperChapterId_A = realSuperChapterId;
      selfVisible = $.$get$jsonConvert().convert$1$1(t1.$index(json, "selfVisible"), t3);
      if (selfVisible != null)
        netObjectDatas.__NetObjectDatas_selfVisible_A = selfVisible;
      shareDate = $.$get$jsonConvert().convert$1$1(t1.$index(json, "shareDate"), t3);
      if (shareDate != null)
        netObjectDatas.__NetObjectDatas_shareDate_A = shareDate;
      shareUser = $.$get$jsonConvert().convert$1$1(t1.$index(json, "shareUser"), t2);
      if (shareUser != null)
        netObjectDatas.__NetObjectDatas_shareUser_A = shareUser;
      superChapterId = $.$get$jsonConvert().convert$1$1(t1.$index(json, "superChapterId"), t3);
      if (superChapterId != null)
        netObjectDatas.__NetObjectDatas_superChapterId_A = superChapterId;
      superChapterName = $.$get$jsonConvert().convert$1$1(t1.$index(json, "superChapterName"), t2);
      if (superChapterName != null)
        netObjectDatas.__NetObjectDatas_superChapterName_A = superChapterName;
      tags = $.$get$jsonConvert().convertListNotNull$1$1(t1.$index(json, "tags"), type$.dynamic);
      if (tags != null)
        netObjectDatas.__NetObjectDatas_tags_A = tags;
      title = $.$get$jsonConvert().convert$1$1(t1.$index(json, "title"), t2);
      if (title != null)
        netObjectDatas.__NetObjectDatas_title_A = title;
      type = $.$get$jsonConvert().convert$1$1(t1.$index(json, "type"), t3);
      if (type != null)
        netObjectDatas.__NetObjectDatas_type_A = type;
      userId = $.$get$jsonConvert().convert$1$1(t1.$index(json, "userId"), t3);
      if (userId != null)
        netObjectDatas.__NetObjectDatas_userId_A = userId;
      visible = $.$get$jsonConvert().convert$1$1(t1.$index(json, "visible"), t3);
      if (visible != null)
        netObjectDatas.__NetObjectDatas_visible_A = visible;
      zan = $.$get$jsonConvert().convert$1$1(t1.$index(json, "zan"), t3);
      if (zan != null)
        netObjectDatas.__NetObjectDatas_zan_A = zan;
      return netObjectDatas;
    },
    $NetObjectDatasToJson(entity) {
      var _s9_ = "chapterId",
        _s11_ = "chapterName",
        _s8_ = "courseId",
        _s11_0 = "envelopePic",
        _s8_0 = "niceDate",
        _s13_ = "niceShareDate",
        _s11_1 = "projectLink",
        _s11_2 = "publishTime",
        _s18_ = "realSuperChapterId",
        _s11_3 = "selfVisible",
        _s9_0 = "shareDate",
        _s9_1 = "shareUser",
        _s14_ = "superChapterId",
        _s16_ = "superChapterName",
        data = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = entity.__NetObjectDatas_apkLink_A;
      t1 === $ && B.throwLateFieldNI("apkLink");
      data.$indexSet(0, "apkLink", t1);
      t1 = entity.__NetObjectDatas_audit_A;
      t1 === $ && B.throwLateFieldNI("audit");
      data.$indexSet(0, "audit", t1);
      t1 = entity.__NetObjectDatas_author_A;
      t1 === $ && B.throwLateFieldNI("author");
      data.$indexSet(0, "author", t1);
      t1 = entity.__NetObjectDatas_canEdit_A;
      t1 === $ && B.throwLateFieldNI("canEdit");
      data.$indexSet(0, "canEdit", t1);
      t1 = entity.__NetObjectDatas_chapterId_A;
      t1 === $ && B.throwLateFieldNI(_s9_);
      data.$indexSet(0, _s9_, t1);
      t1 = entity.__NetObjectDatas_chapterName_A;
      t1 === $ && B.throwLateFieldNI(_s11_);
      data.$indexSet(0, _s11_, t1);
      t1 = entity.__NetObjectDatas_collect_A;
      t1 === $ && B.throwLateFieldNI("collect");
      data.$indexSet(0, "collect", t1);
      t1 = entity.__NetObjectDatas_courseId_A;
      t1 === $ && B.throwLateFieldNI(_s8_);
      data.$indexSet(0, _s8_, t1);
      t1 = entity.__NetObjectDatas_desc_A;
      t1 === $ && B.throwLateFieldNI("desc");
      data.$indexSet(0, "desc", t1);
      t1 = entity.__NetObjectDatas_descMd_A;
      t1 === $ && B.throwLateFieldNI("descMd");
      data.$indexSet(0, "descMd", t1);
      t1 = entity.__NetObjectDatas_envelopePic_A;
      t1 === $ && B.throwLateFieldNI(_s11_0);
      data.$indexSet(0, _s11_0, t1);
      t1 = entity.__NetObjectDatas_fresh_A;
      t1 === $ && B.throwLateFieldNI("fresh");
      data.$indexSet(0, "fresh", t1);
      t1 = entity.__NetObjectDatas_host_A;
      t1 === $ && B.throwLateFieldNI("host");
      data.$indexSet(0, "host", t1);
      t1 = entity.__NetObjectDatas_id_A;
      t1 === $ && B.throwLateFieldNI("id");
      data.$indexSet(0, "id", t1);
      t1 = entity.__NetObjectDatas_link_A;
      t1 === $ && B.throwLateFieldNI("link");
      data.$indexSet(0, "link", t1);
      t1 = entity.__NetObjectDatas_niceDate_A;
      t1 === $ && B.throwLateFieldNI(_s8_0);
      data.$indexSet(0, _s8_0, t1);
      t1 = entity.__NetObjectDatas_niceShareDate_A;
      t1 === $ && B.throwLateFieldNI(_s13_);
      data.$indexSet(0, _s13_, t1);
      t1 = entity.__NetObjectDatas_origin_A;
      t1 === $ && B.throwLateFieldNI("origin");
      data.$indexSet(0, "origin", t1);
      t1 = entity.__NetObjectDatas_prefix_A;
      t1 === $ && B.throwLateFieldNI("prefix");
      data.$indexSet(0, "prefix", t1);
      t1 = entity.__NetObjectDatas_projectLink_A;
      t1 === $ && B.throwLateFieldNI(_s11_1);
      data.$indexSet(0, _s11_1, t1);
      t1 = entity.__NetObjectDatas_publishTime_A;
      t1 === $ && B.throwLateFieldNI(_s11_2);
      data.$indexSet(0, _s11_2, t1);
      t1 = entity.__NetObjectDatas_realSuperChapterId_A;
      t1 === $ && B.throwLateFieldNI(_s18_);
      data.$indexSet(0, _s18_, t1);
      t1 = entity.__NetObjectDatas_selfVisible_A;
      t1 === $ && B.throwLateFieldNI(_s11_3);
      data.$indexSet(0, _s11_3, t1);
      t1 = entity.__NetObjectDatas_shareDate_A;
      t1 === $ && B.throwLateFieldNI(_s9_0);
      data.$indexSet(0, _s9_0, t1);
      t1 = entity.__NetObjectDatas_shareUser_A;
      t1 === $ && B.throwLateFieldNI(_s9_1);
      data.$indexSet(0, _s9_1, t1);
      t1 = entity.__NetObjectDatas_superChapterId_A;
      t1 === $ && B.throwLateFieldNI(_s14_);
      data.$indexSet(0, _s14_, t1);
      t1 = entity.__NetObjectDatas_superChapterName_A;
      t1 === $ && B.throwLateFieldNI(_s16_);
      data.$indexSet(0, _s16_, t1);
      t1 = entity.__NetObjectDatas_tags_A;
      t1 === $ && B.throwLateFieldNI("tags");
      data.$indexSet(0, "tags", t1);
      t1 = entity.__NetObjectDatas_title_A;
      t1 === $ && B.throwLateFieldNI("title");
      data.$indexSet(0, "title", t1);
      t1 = entity.__NetObjectDatas_type_A;
      t1 === $ && B.throwLateFieldNI("type");
      data.$indexSet(0, "type", t1);
      t1 = entity.__NetObjectDatas_userId_A;
      t1 === $ && B.throwLateFieldNI("userId");
      data.$indexSet(0, "userId", t1);
      t1 = entity.__NetObjectDatas_visible_A;
      t1 === $ && B.throwLateFieldNI("visible");
      data.$indexSet(0, "visible", t1);
      t1 = entity.__NetObjectDatas_zan_A;
      t1 === $ && B.throwLateFieldNI("zan");
      data.$indexSet(0, "zan", t1);
      return data;
    },
    $NetObjectBeanToJson_closure: function $NetObjectBeanToJson_closure() {
    },
    testHttp() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, t2, list, t1, $async$temp1;
      var $async$testHttp = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.NetUtil__instance;
              if (t1 == null)
                t1 = $.NetUtil__instance = A.NetUtil$_internal();
              type$.nullable_List_Interceptor._as(null);
              t1 = t1.dio;
              t2 = t1.DioMixin___DioMixin_options_A;
              t2 === $ && B.throwLateFieldNI("options");
              t2.OptionsMixin___OptionsMixin_baseUrl_A = "";
              t2.set$connectTimeout(B.Duration$(0, 20000, 0));
              t1 = t1.DioMixin___DioMixin_options_A;
              t2 = B.Duration$(0, 20000, 0);
              if (t2._duration < 0)
                B.throwExpression(B.StateError$("sendTimeout should be positive"));
              t1._sendTimeout = t2;
              t2 = B.Duration$(0, 20000, 0);
              if (t2._duration < 0)
                B.throwExpression(B.StateError$("reveiveTimeout should be positive"));
              t1._receiveTimeout = t2;
              $.NetConfig_proxyEnable = false;
              $.NetConfig_proxyIp = "192.168.2.237";
              $.NetConfig_proxyPort = "8888";
              t1 = $.NetUtil__instance;
              if (t1 == null)
                t1 = $.NetUtil__instance = A.NetUtil$_internal();
              t1.addInterceptor$1(new A.ResponseInterceptor());
              t1 = $.NetUtil__instance;
              if (t1 == null)
                t1 = $.NetUtil__instance = A.NetUtil$_internal();
              t1.addInterceptor$1($.$get$Http_loadingInterceptor());
              $.$get$Log__logger().log$4(D.Level_1, "\u6d4b\u8bd5Http", null, null);
              t1 = type$.String;
              $async$temp1 = type$.Map_String_dynamic;
              $async$goto = 3;
              return B._asyncAwait(A.Http_get("https://www.wanandroid.com/article/list/0/json", B.LinkedHashMap_LinkedHashMap$_literal(["cid", "60"], t1, t1)), $async$testHttp);
            case 3:
              // returning from await.
              t1 = $async$temp1._as($async$result);
              t2 = A.$NetObjectBeanFromJson(t1).__NetObjectBean_datas_A;
              t2 === $ && B.throwLateFieldNI("datas");
              if (0 >= t2.length) {
                $async$returnValue = B.ioore(t2, 0);
                // goto return
                $async$goto = 1;
                break;
              }
              t2 = t2[0].__NetObjectDatas_title_A;
              t2 === $ && B.throwLateFieldNI("title");
              L.showToast(t2);
              $.$get$Log__logger().log$4(D.Level_2, t1, null, null);
              $async$temp1 = type$.List_dynamic;
              $async$goto = 4;
              return B._asyncAwait(A.Http_get("https://www.wanandroid.com/banner/json", null), $async$testHttp);
            case 4:
              // returning from await.
              t1 = $async$temp1._as($async$result);
              list = J.map$1$1$ax(t1, new A.testHttp_closure(), type$.NetListBean).toList$0(0);
              if (0 >= list.length) {
                $async$returnValue = B.ioore(list, 0);
                // goto return
                $async$goto = 1;
                break;
              }
              t2 = list[0].__NetListBean_title_A;
              t2 === $ && B.throwLateFieldNI("title");
              L.showToast(t2);
              $.$get$Log__logger().log$4(D.Level_2, t1, null, null);
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$testHttp, $async$completer);
    },
    Http_get(path, queryParameters) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue;
      var $async$Http_get = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return B._asyncAwait(A.Http_request(path, null, true, D.HttpMethod_0, null, queryParameters), $async$Http_get);
            case 3:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$Http_get, $async$completer);
    },
    Http_request(path, cancelToken, isLoading, method, options, queryParameters) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, t1;
      var $async$Http_request = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $.$get$Http_loadingInterceptor().isLoading = true;
              t1 = $.NetUtil__instance;
              if (t1 == null)
                t1 = $.NetUtil__instance = A.NetUtil$_internal();
              $async$goto = 3;
              return B._asyncAwait(t1.request$1$8$cancelToken$data$method$onReceiveProgress$onSendProgress$options$queryParameters(0, path, cancelToken, null, method, null, null, options, queryParameters, type$.dynamic), $async$Http_request);
            case 3:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$Http_request, $async$completer);
    },
    testHttp_closure: function testHttp_closure() {
    },
    ResponseInterceptor: function ResponseInterceptor() {
    },
    LoadingInterceptor: function LoadingInterceptor() {
      this.isLoading = true;
    },
    AppException_AppException$init(error) {
      var errCode, e, t1, t2, errCode0, exception;
      switch (error.type.index) {
        case 5:
          return new A.AppException("\u8bf7\u6c42\u53d6\u6d88", -1);
        case 0:
          return new A.AppException("\u8fde\u63a5\u8d85\u65f6", -1);
        case 1:
          return new A.AppException("\u8bf7\u6c42\u8d85\u65f6", -1);
        case 2:
          return new A.AppException("\u54cd\u5e94\u8d85\u65f6", -1);
        case 4:
          try {
            t1 = error.response;
            t2 = t1 == null;
            errCode0 = t2 ? null : t1.statusCode;
            errCode = errCode0 == null ? -1 : errCode0;
            switch (errCode) {
              case 400:
                return new A.AppException("\u8bf7\u6c42\u8bed\u6cd5\u9519\u8bef", errCode);
              case 401:
                return new A.AppException("\u6ca1\u6709\u6743\u9650", errCode);
              case 403:
                return new A.AppException("\u670d\u52a1\u5668\u62d2\u7edd\u6267\u884c", errCode);
              case 404:
                return new A.AppException("\u65e0\u6cd5\u8fde\u63a5\u670d\u52a1\u5668", errCode);
              case 405:
                return new A.AppException("\u8bf7\u6c42\u65b9\u6cd5\u88ab\u7981\u6b62", errCode);
              case 500:
                return new A.AppException("\u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef", errCode);
              case 502:
                return new A.AppException("\u65e0\u6548\u7684\u8bf7\u6c42", errCode);
              case 503:
                return new A.AppException("\u670d\u52a1\u5668\u6302\u4e86", errCode);
              case 505:
                return new A.AppException("\u4e0d\u652f\u6301HTTP\u534f\u8bae\u8bf7\u6c42", errCode);
              default:
                t1 = t2 ? null : t1.statusMessage;
                if (t1 == null)
                  t1 = "\u672a\u77e5\u9519\u8bef";
                return new A.AppException(t1, errCode);
            }
          } catch (exception) {
            e = B.unwrapException(exception);
            t1 = J.toString$0$(e);
            return new A.AppException("\u672a\u77e5\u9519\u8bef\uff1a" + B.S(t1), -1);
          }
          break;
        default:
          return new A.AppException(error.message, -1);
      }
    },
    ErrorInterceptor: function ErrorInterceptor() {
    },
    AppException: function AppException(t0, t1) {
      this.message = t0;
      this.code = t1;
    },
    NetUtil$_internal() {
      var _null = null,
        t1 = new A.DioForBrowser($, new A.Interceptors(B._setArrayType([D.C_ImplyContentTypeInterceptor], type$.JSArray_nullable_Interceptor)), $, new A.BackgroundTransformer(A.background_transformer___decodeJson$closure()), false),
        t2 = A.BaseOptions$(_null, _null, _null, _null);
      t1.DioMixin___DioMixin_options_A = t2;
      t1.DioMixin___DioMixin_httpClientAdapter_A = new A.BrowserHttpClientAdapter(B.LinkedHashSet_LinkedHashSet$_empty(type$.HttpRequest));
      t1 = new A.NetUtil(t1, new A.CancelToken(new B._AsyncCompleter(new B._Future($.Zone__current, type$._Future_DioError), type$._AsyncCompleter_DioError)));
      t1.NetUtil$_internal$0();
      return t1;
    },
    HttpMethod: function HttpMethod(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    NetUtil: function NetUtil(t0, t1) {
      this.dio = t0;
      this._cancelToken = t1;
    },
    NetUtil_request_closure: function NetUtil_request_closure(t0, t1) {
      this.completer = t0;
      this.T = t1;
    },
    NetUtil_request_closure0: function NetUtil_request_closure0(t0) {
      this.completer = t0;
    },
    NetUtil_request_closure1: function NetUtil_request_closure1() {
    },
    AutoDisposeLogic: function AutoDisposeLogic(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.count = t0;
      _.ListNotifierMixin__updaters = t1;
      _.ListNotifierMixin__updatersGroupIds = t2;
      _.GetLifeCycleBase_onStart = t3;
      _.GetLifeCycleBase_onDelete = t4;
      _.GetLifeCycleBase__initialized = t5;
      _.GetLifeCycleBase__isClosed = t6;
    },
    AutoDisposePage: function AutoDisposePage(t0, t1) {
      this.logic = t0;
      this.key = t1;
    },
    AutoDisposePage_build_closure: function AutoDisposePage_build_closure(t0) {
      this.$this = t0;
    },
    AutoDisposePage_build_closure0: function AutoDisposePage_build_closure0(t0) {
      this.$this = t0;
    },
    ExampleLogic: function ExampleLogic(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.state = t0;
      _.ListNotifierMixin__updaters = t1;
      _.ListNotifierMixin__updatersGroupIds = t2;
      _.GetLifeCycleBase_onStart = t3;
      _.GetLifeCycleBase_onDelete = t4;
      _.GetLifeCycleBase__initialized = t5;
      _.GetLifeCycleBase__isClosed = t6;
    },
    ExampleLogic_toFun_closure: function ExampleLogic_toFun_closure() {
    },
    ExampleState: function ExampleState() {
      this.__ExampleState_trees_A = $;
    },
    ExamplePage: function ExamplePage(t0) {
      this.key = t0;
    },
    ExamplePage_build_closure: function ExamplePage_build_closure(t0, t1) {
      this.logic = t0;
      this.context = t1;
    },
    FunctionLogic: function FunctionLogic(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.state = t0;
      _.ListNotifierMixin__updaters = t1;
      _.ListNotifierMixin__updatersGroupIds = t2;
      _.GetLifeCycleBase_onStart = t3;
      _.GetLifeCycleBase_onDelete = t4;
      _.GetLifeCycleBase__initialized = t5;
      _.GetLifeCycleBase__isClosed = t6;
    },
    FunctionState: function FunctionState() {
      this.__FunctionState_items_A = $;
    },
    FunctionPage: function FunctionPage(t0) {
      this.key = t0;
    },
    FunctionPage_build_closure: function FunctionPage_build_closure(t0, t1) {
      this.logic = t0;
      this.context = t1;
    },
    FunctionCard: function FunctionCard(t0, t1, t2) {
      this.data = t0;
      this.onItem = t1;
      this.key = t2;
    },
    FunctionCard_build_closure: function FunctionCard_build_closure(t0) {
      this.$this = t0;
    },
    FunctionCard_build__closure: function FunctionCard_build__closure(t0, t1) {
      this.$this = t0;
      this.item = t1;
    },
    MainLogic: function MainLogic(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.state = t0;
      _.ListNotifierMixin__updaters = t1;
      _.ListNotifierMixin__updatersGroupIds = t2;
      _.GetLifeCycleBase_onStart = t3;
      _.GetLifeCycleBase_onDelete = t4;
      _.GetLifeCycleBase__initialized = t5;
      _.GetLifeCycleBase__isClosed = t6;
    },
    MainState: function MainState() {
      var _ = this;
      _.__MainState_pageController_A = _.__MainState_pageList_A = _.__MainState_sideItems_A = _.__MainState_isScale_A = _.__MainState_isUnfold_A = _.__MainState_selectedIndex_A = $;
    },
    MainPage$() {
      var t3, _null = null,
        t1 = $.$get$Get(),
        t2 = new A.MainState();
      t2.__MainState_selectedIndex_A = 0;
      t2.__MainState_isScale_A = t2.__MainState_isUnfold_A = false;
      t2.set$__MainState_pageList_A(type$.List_Widget._as(B._setArrayType([D.KeepAlivePage_FunctionPage_null_null, D.KeepAlivePage_ExamplePage_null_null, D.KeepAlivePage_SettingPage_null_null], type$.JSArray_Widget)));
      t2.set$__MainState_sideItems_A(type$.List_BtnInfo._as(B._setArrayType([new E.BtnInfo("\u529f\u80fd", _null, _null, D.Icon_k45, _null, false, _null), new E.BtnInfo("\u8303\u4f8b", _null, _null, D.Icon_qfm, _null, false, _null), new E.BtnInfo("\u8bbe\u7f6e", _null, _null, D.Icon_dkq, _null, false, _null)], type$.JSArray_BtnInfo)));
      t2.__MainState_pageController_A = F.PageController$(0, true, 1);
      t3 = type$.InternalFinalCallback_void;
      t3 = new A.MainLogic(t2, B._setArrayType([], type$.JSArray_of_nullable_void_Function), B.HashMap_HashMap(_null, _null, _null, type$.nullable_Object, type$.List_of_void_Function), new B.InternalFinalCallback(t3), new B.InternalFinalCallback(t3), false, false);
      t3.$$configureLifeCycle$0();
      t2 = type$.MainLogic;
      t3 = K.Inst_put(t1, t3, t2);
      t1 = $.GetInstance__getInstance;
      return new A.MainPage(t3, (t1 == null ? $.GetInstance__getInstance = C.C_GetInstance : t1).find$1$1$tag(0, _null, t2).state, _null);
    },
    MainPage: function MainPage(t0, t1, t2) {
      this.logic = t0;
      this.state = t1;
      this.key = t2;
    },
    MainPage_build_closure: function MainPage_build_closure(t0) {
      this.$this = t0;
    },
    MainPage_build_closure0: function MainPage_build_closure0(t0) {
      this.$this = t0;
    },
    MainPage_build_closure1: function MainPage_build_closure1(t0) {
      this.$this = t0;
    },
    _SideNavigation: function _SideNavigation(t0, t1, t2, t3) {
      var _ = this;
      _.data = t0;
      _.onItem = t1;
      _.onScale = t2;
      _.key = t3;
    },
    _SideNavigation__buildItems_closure: function _SideNavigation__buildItems_closure(t0, t1, t2) {
      this.$this = t0;
      this.activeColor = t1;
      this.normalColor = t2;
    },
    _SideNavigation__buildItems__closure: function _SideNavigation__buildItems__closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.index = t1;
      _.activeColor = t2;
      _.item = t3;
      _.normalColor = t4;
    },
    _SideNavigation__buildItems___closure: function _SideNavigation__buildItems___closure(t0, t1) {
      this.$this = t0;
      this.index = t1;
    },
    _SideNavigation__buildScale_closure: function _SideNavigation__buildScale_closure(t0) {
      this.$this = t0;
    },
    SettingLogic: function SettingLogic(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.state = t0;
      _.ListNotifierMixin__updaters = t1;
      _.ListNotifierMixin__updatersGroupIds = t2;
      _.GetLifeCycleBase_onStart = t3;
      _.GetLifeCycleBase_onDelete = t4;
      _.GetLifeCycleBase__initialized = t5;
      _.GetLifeCycleBase__isClosed = t6;
    },
    SettingState: function SettingState() {
    },
    SettingPage: function SettingPage(t0) {
      this.key = t0;
    },
    SettingPage_build_closure: function SettingPage_build_closure() {
    },
    CaseInsensitiveMap$from(other, $V) {
      var t1 = new A.CaseInsensitiveMap(new A.CaseInsensitiveMap$from_closure(), B.LinkedHashMap_LinkedHashMap$_empty(type$.String, $V._eval$1("MapEntry<String,0>")), $V._eval$1("CaseInsensitiveMap<0>"));
      t1.addAll$1(0, other);
      return t1;
    },
    CaseInsensitiveMap: function CaseInsensitiveMap(t0, t1, t2) {
      this._canonicalize = t0;
      this._base = t1;
      this.$ti = t2;
    },
    CaseInsensitiveMap$from_closure: function CaseInsensitiveMap$from_closure() {
    },
    MediaType_MediaType$parse(mediaType) {
      return A.wrapFormatException("media type", mediaType, new A.MediaType_MediaType$parse_closure(mediaType), type$.MediaType);
    },
    MediaType: function MediaType(t0, t1, t2) {
      this.type = t0;
      this.subtype = t1;
      this.parameters = t2;
    },
    MediaType_MediaType$parse_closure: function MediaType_MediaType$parse_closure(t0) {
      this.mediaType = t0;
    },
    MediaType_toString_closure: function MediaType_toString_closure(t0) {
      this.buffer = t0;
    },
    MediaType_toString__closure: function MediaType_toString__closure() {
    },
    expectQuotedString(scanner) {
      var string;
      scanner.expect$2$name($.$get$_quotedString(), "quoted string");
      string = scanner.get$lastMatch().$index(0, 0);
      return B.stringReplaceAllFuncUnchecked(C.JSString_methods.substring$2(string, 1, string.length - 1), type$.Pattern._as($.$get$_quotedPair()), type$.nullable_String_Function_Match._as(type$.String_Function_Match._as(new A.expectQuotedString_closure())), type$.nullable_String_Function_String._as(null));
    },
    expectQuotedString_closure: function expectQuotedString_closure() {
    },
    DevelopmentFilter: function DevelopmentFilter() {
      this.level = null;
    },
    LogFilter: function LogFilter() {
    },
    LogOutput: function LogOutput() {
    },
    LogPrinter: function LogPrinter() {
    },
    Level: function Level(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Logger: function Logger(t0, t1, t2) {
      var _ = this;
      _._logger$_filter = t0;
      _._printer = t1;
      _._output = t2;
      _._logger$_active = true;
    },
    ConsoleOutput: function ConsoleOutput() {
    },
    PrettyPrinter$() {
      var t1 = new A.PrettyPrinter();
      t1.PrettyPrinter$9$colors$errorMethodCount$excludeBox$lineLength$methodCount$noBoxingByDefault$printEmojis$printTime$stackTraceBeginIndex(true, 8, D.Map_empty7, 120, 2, false, true, false, 0);
      return t1;
    },
    PrettyPrinter: function PrettyPrinter() {
      var _ = this;
      _.__PrettyPrinter_includeBox_F = $;
      _._bottomBorder = _._middleBorder = _._topBorder = "";
    },
    PrettyPrinter_closure: function PrettyPrinter_closure(t0) {
      this.$this = t0;
    },
    _parseUri(uri) {
      if (type$.Uri._is(uri))
        return uri;
      throw B.wrapException(B.ArgumentError$value(uri, "uri", "Value must be a String or a Uri"));
    },
    _validateArgList(method, args) {
      var numArgs, i, numArgs0, message, t1, t2, t3, t4;
      for (numArgs = args.length, i = 1; i < numArgs; ++i) {
        if (args[i] == null || args[i - 1] != null)
          continue;
        for (; numArgs >= 1; numArgs = numArgs0) {
          numArgs0 = numArgs - 1;
          if (args[numArgs0] != null)
            break;
        }
        message = new B.StringBuffer("");
        t1 = "" + (method + "(");
        message._contents = t1;
        t2 = B._arrayInstanceType(args);
        t3 = t2._eval$1("SubListIterable<1>");
        t4 = new B.SubListIterable(args, 0, numArgs, t3);
        t4.SubListIterable$3(args, 0, numArgs, t2._precomputed1);
        t3 = t1 + new B.MappedListIterable(t4, t3._eval$1("String(ListIterable.E)")._as(new A._validateArgList_closure()), t3._eval$1("MappedListIterable<ListIterable.E,String>")).join$1(0, ", ");
        message._contents = t3;
        message._contents = t3 + ("): part " + (i - 1) + " was null, but part " + i + " was not.");
        throw B.wrapException(B.ArgumentError$(message.toString$0(0), null));
      }
    },
    Context: function Context(t0, t1) {
      this.style = t0;
      this._context$_current = t1;
    },
    Context_joinAll_closure: function Context_joinAll_closure() {
    },
    Context_split_closure: function Context_split_closure() {
    },
    _validateArgList_closure: function _validateArgList_closure() {
    },
    InternalStyle: function InternalStyle() {
    },
    ParsedPath_ParsedPath$parse(path, style) {
      var t1, parts, separators, start, i,
        root = style.getRoot$1(path);
      style.isRootRelative$1(path);
      if (root != null)
        path = C.JSString_methods.substring$1(path, root.length);
      t1 = type$.JSArray_String;
      parts = B._setArrayType([], t1);
      separators = B._setArrayType([], t1);
      t1 = path.length;
      if (t1 !== 0 && style.isSeparator$1(C.JSString_methods._codeUnitAt$1(path, 0))) {
        if (0 >= t1)
          return B.ioore(path, 0);
        C.JSArray_methods.add$1(separators, path[0]);
        start = 1;
      } else {
        C.JSArray_methods.add$1(separators, "");
        start = 0;
      }
      for (i = start; i < t1; ++i)
        if (style.isSeparator$1(C.JSString_methods._codeUnitAt$1(path, i))) {
          C.JSArray_methods.add$1(parts, C.JSString_methods.substring$2(path, start, i));
          C.JSArray_methods.add$1(separators, path[i]);
          start = i + 1;
        }
      if (start < t1) {
        C.JSArray_methods.add$1(parts, C.JSString_methods.substring$1(path, start));
        C.JSArray_methods.add$1(separators, "");
      }
      return new A.ParsedPath(style, root, parts, separators);
    },
    ParsedPath: function ParsedPath(t0, t1, t2, t3) {
      var _ = this;
      _.style = t0;
      _.root = t1;
      _.parts = t2;
      _.separators = t3;
    },
    PathException$(message) {
      return new A.PathException(message);
    },
    PathException: function PathException(t0) {
      this.message = t0;
    },
    Style__getPlatformStyle() {
      if (F.Uri_base().get$scheme() !== "file")
        return $.$get$Style_url();
      var t1 = F.Uri_base();
      if (!C.JSString_methods.endsWith$1(t1.get$path(t1), "/"))
        return $.$get$Style_url();
      if (B._Uri__Uri("a/b", null).toFilePath$0() === "a\\b")
        return $.$get$Style_windows();
      return $.$get$Style_posix();
    },
    Style: function Style() {
    },
    PosixStyle: function PosixStyle(t0, t1, t2) {
      this.separatorPattern = t0;
      this.needsSeparatorPattern = t1;
      this.rootPattern = t2;
    },
    UrlStyle: function UrlStyle(t0, t1, t2, t3) {
      var _ = this;
      _.separatorPattern = t0;
      _.needsSeparatorPattern = t1;
      _.rootPattern = t2;
      _.relativeRootPattern = t3;
    },
    WindowsStyle: function WindowsStyle(t0, t1, t2, t3) {
      var _ = this;
      _.separatorPattern = t0;
      _.needsSeparatorPattern = t1;
      _.rootPattern = t2;
      _.relativeRootPattern = t3;
    },
    FileLocation$_(file, offset) {
      if (offset < 0)
        B.throwExpression(B.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (offset > file._decodedChars.length)
        B.throwExpression(B.RangeError$("Offset " + offset + string$._must_ + file.get$length(file) + "."));
      return new A.FileLocation(file, offset);
    },
    SourceFile: function SourceFile(t0, t1, t2) {
      var _ = this;
      _.url = t0;
      _._lineStarts = t1;
      _._decodedChars = t2;
      _._cachedLine = null;
    },
    FileLocation: function FileLocation(t0, t1) {
      this.file = t0;
      this.offset = t1;
    },
    _FileSpan: function _FileSpan(t0, t1, t2) {
      this.file = t0;
      this._file$_start = t1;
      this._file$_end = t2;
    },
    Highlighter$(span, color) {
      var t1 = A.Highlighter__collateLines(B._setArrayType([A._Highlight$(span, true)], type$.JSArray__Highlight)),
        t2 = new A.Highlighter_closure(color).call$0(),
        t3 = C.JSInt_methods.toString$0(C.JSArray_methods.get$last(t1).number + 1),
        t4 = A.Highlighter__contiguous(t1) ? 0 : 3,
        t5 = B._arrayInstanceType(t1);
      return new A.Highlighter(t1, t2, null, 1 + Math.max(t3.length, t4), new B.MappedListIterable(t1, t5._eval$1("int(1)")._as(new A.Highlighter$__closure()), t5._eval$1("MappedListIterable<1,int>")).reduce$1(0, D.CONSTANT), !A.isAllTheSame(new B.MappedListIterable(t1, t5._eval$1("Object?(1)")._as(new A.Highlighter$__closure0()), t5._eval$1("MappedListIterable<1,Object?>"))), new B.StringBuffer(""));
    },
    Highlighter__contiguous(lines) {
      var i, thisLine, nextLine;
      for (i = 0; i < lines.length - 1;) {
        thisLine = lines[i];
        ++i;
        nextLine = lines[i];
        if (thisLine.number + 1 !== nextLine.number && J.$eq$(thisLine.url, nextLine.url))
          return false;
      }
      return true;
    },
    Highlighter__collateLines(highlights) {
      var t1, t2, t3,
        highlightsByUrl = A.groupBy(highlights, new A.Highlighter__collateLines_closure(), type$._Highlight, type$.Object);
      for (t1 = highlightsByUrl.get$values(highlightsByUrl), t2 = B._instanceType(t1), t2 = t2._eval$1("@<1>")._bind$1(t2._rest[1]), t1 = new B.MappedIterator(J.get$iterator$ax(t1.__internal$_iterable), t1._f, t2._eval$1("MappedIterator<1,2>")), t2 = t2._rest[1]; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        J.sort$1$ax(t3, new A.Highlighter__collateLines_closure0());
      }
      t1 = highlightsByUrl.get$entries(highlightsByUrl);
      t2 = B._instanceType(t1);
      t3 = t2._eval$1("ExpandIterable<Iterable.E,_Line>");
      return B.List_List$of(new B.ExpandIterable(t1, t2._eval$1("Iterable<_Line>(Iterable.E)")._as(new A.Highlighter__collateLines_closure1()), t3), true, t3._eval$1("Iterable.E"));
    },
    _Highlight$(span, primary) {
      var t1 = new A._Highlight_closure(span).call$0();
      return new A._Highlight(t1, true, null);
    },
    _Highlight__normalizeNewlines(span) {
      var t1, endOffset, i, t2, t3, t4,
        text = span.get$text(span);
      if (!C.JSString_methods.contains$1(text, "\r\n"))
        return span;
      t1 = span.get$end(span);
      endOffset = t1.get$offset(t1);
      for (t1 = text.length - 1, i = 0; i < t1; ++i)
        if (C.JSString_methods._codeUnitAt$1(text, i) === 13 && C.JSString_methods._codeUnitAt$1(text, i + 1) === 10)
          --endOffset;
      t1 = span.get$start(span);
      t2 = span.get$sourceUrl();
      t3 = span.get$end(span);
      t3 = t3.get$line(t3);
      t2 = A.SourceLocation$(endOffset, span.get$end(span).get$column(), t3, t2);
      t3 = B.stringReplaceAllUnchecked(text, "\r\n", "\n");
      t4 = span.get$context(span);
      return A.SourceSpanWithContext$(t1, t2, t3, B.stringReplaceAllUnchecked(t4, "\r\n", "\n"));
    },
    _Highlight__normalizeTrailingNewline(span) {
      var context, text, start, end, t1, t2, t3;
      if (!C.JSString_methods.endsWith$1(span.get$context(span), "\n"))
        return span;
      if (C.JSString_methods.endsWith$1(span.get$text(span), "\n\n"))
        return span;
      context = C.JSString_methods.substring$2(span.get$context(span), 0, span.get$context(span).length - 1);
      text = span.get$text(span);
      start = span.get$start(span);
      end = span.get$end(span);
      if (C.JSString_methods.endsWith$1(span.get$text(span), "\n")) {
        t1 = A.findLineStart(span.get$context(span), span.get$text(span), span.get$start(span).get$column());
        t1.toString;
        t1 = t1 + span.get$start(span).get$column() + span.get$length(span) === span.get$context(span).length;
      } else
        t1 = false;
      if (t1) {
        text = C.JSString_methods.substring$2(span.get$text(span), 0, span.get$text(span).length - 1);
        if (text.length === 0)
          end = start;
        else {
          t1 = span.get$end(span);
          t1 = t1.get$offset(t1);
          t2 = span.get$sourceUrl();
          t3 = span.get$end(span);
          t3 = t3.get$line(t3);
          end = A.SourceLocation$(t1 - 1, A._Highlight__lastLineLength(context), t3 - 1, t2);
          t1 = span.get$start(span);
          t1 = t1.get$offset(t1);
          t2 = span.get$end(span);
          start = t1 === t2.get$offset(t2) ? end : span.get$start(span);
        }
      }
      return A.SourceSpanWithContext$(start, end, text, context);
    },
    _Highlight__normalizeEndOfLine(span) {
      var t1, t2, text, t3, t4;
      if (span.get$end(span).get$column() !== 0)
        return span;
      t1 = span.get$end(span);
      t1 = t1.get$line(t1);
      t2 = span.get$start(span);
      if (t1 === t2.get$line(t2))
        return span;
      text = C.JSString_methods.substring$2(span.get$text(span), 0, span.get$text(span).length - 1);
      t1 = span.get$start(span);
      t2 = span.get$end(span);
      t2 = t2.get$offset(t2);
      t3 = span.get$sourceUrl();
      t4 = span.get$end(span);
      t4 = t4.get$line(t4);
      t3 = A.SourceLocation$(t2 - 1, text.length - C.JSString_methods.lastIndexOf$1(text, "\n") - 1, t4 - 1, t3);
      return A.SourceSpanWithContext$(t1, t3, text, C.JSString_methods.endsWith$1(span.get$context(span), "\n") ? C.JSString_methods.substring$2(span.get$context(span), 0, span.get$context(span).length - 1) : span.get$context(span));
    },
    _Highlight__lastLineLength(text) {
      var t1 = text.length;
      if (t1 === 0)
        return 0;
      else if (C.JSString_methods.codeUnitAt$1(text, t1 - 1) === 10)
        return t1 === 1 ? 0 : t1 - C.JSString_methods.lastIndexOf$2(text, "\n", t1 - 2) - 1;
      else
        return t1 - C.JSString_methods.lastIndexOf$1(text, "\n") - 1;
    },
    Highlighter: function Highlighter(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._lines = t0;
      _._highlighter$_primaryColor = t1;
      _._secondaryColor = t2;
      _._paddingBeforeSidebar = t3;
      _._maxMultilineSpans = t4;
      _._multipleFiles = t5;
      _._highlighter$_buffer = t6;
    },
    Highlighter_closure: function Highlighter_closure(t0) {
      this.color = t0;
    },
    Highlighter$__closure: function Highlighter$__closure() {
    },
    Highlighter$___closure: function Highlighter$___closure() {
    },
    Highlighter$__closure0: function Highlighter$__closure0() {
    },
    Highlighter__collateLines_closure: function Highlighter__collateLines_closure() {
    },
    Highlighter__collateLines_closure0: function Highlighter__collateLines_closure0() {
    },
    Highlighter__collateLines_closure1: function Highlighter__collateLines_closure1() {
    },
    Highlighter__collateLines__closure: function Highlighter__collateLines__closure(t0) {
      this.line = t0;
    },
    Highlighter_highlight_closure: function Highlighter_highlight_closure() {
    },
    Highlighter__writeFileStart_closure: function Highlighter__writeFileStart_closure(t0) {
      this.$this = t0;
    },
    Highlighter__writeMultilineHighlights_closure: function Highlighter__writeMultilineHighlights_closure(t0, t1, t2) {
      this.$this = t0;
      this.startLine = t1;
      this.line = t2;
    },
    Highlighter__writeMultilineHighlights_closure0: function Highlighter__writeMultilineHighlights_closure0(t0, t1) {
      this.$this = t0;
      this.highlight = t1;
    },
    Highlighter__writeMultilineHighlights_closure1: function Highlighter__writeMultilineHighlights_closure1(t0) {
      this.$this = t0;
    },
    Highlighter__writeMultilineHighlights_closure2: function Highlighter__writeMultilineHighlights_closure2(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.current = t2;
      _.startLine = t3;
      _.line = t4;
      _.highlight = t5;
      _.endLine = t6;
    },
    Highlighter__writeMultilineHighlights__closure: function Highlighter__writeMultilineHighlights__closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Highlighter__writeMultilineHighlights__closure0: function Highlighter__writeMultilineHighlights__closure0(t0, t1) {
      this.$this = t0;
      this.vertical = t1;
    },
    Highlighter__writeHighlightedText_closure: function Highlighter__writeHighlightedText_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.text = t1;
      _.startColumn = t2;
      _.endColumn = t3;
    },
    Highlighter__writeIndicator_closure: function Highlighter__writeIndicator_closure(t0, t1, t2) {
      this.$this = t0;
      this.line = t1;
      this.highlight = t2;
    },
    Highlighter__writeIndicator_closure0: function Highlighter__writeIndicator_closure0(t0, t1, t2) {
      this.$this = t0;
      this.line = t1;
      this.highlight = t2;
    },
    Highlighter__writeIndicator_closure1: function Highlighter__writeIndicator_closure1(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.coversWholeLine = t1;
      _.line = t2;
      _.highlight = t3;
    },
    Highlighter__writeSidebar_closure: function Highlighter__writeSidebar_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.end = t2;
    },
    _Highlight: function _Highlight(t0, t1, t2) {
      this.span = t0;
      this.isPrimary = t1;
      this.label = t2;
    },
    _Highlight_closure: function _Highlight_closure(t0) {
      this.span = t0;
    },
    _Line: function _Line(t0, t1, t2, t3) {
      var _ = this;
      _.text = t0;
      _.number = t1;
      _.url = t2;
      _.highlights = t3;
    },
    SourceLocation$(offset, column, line, sourceUrl) {
      if (offset < 0)
        B.throwExpression(B.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (line < 0)
        B.throwExpression(B.RangeError$("Line may not be negative, was " + line + "."));
      else if (column < 0)
        B.throwExpression(B.RangeError$("Column may not be negative, was " + column + "."));
      return new A.SourceLocation(sourceUrl, offset, line, column);
    },
    SourceLocation: function SourceLocation(t0, t1, t2, t3) {
      var _ = this;
      _.sourceUrl = t0;
      _.offset = t1;
      _.line = t2;
      _.column = t3;
    },
    SourceLocationMixin: function SourceLocationMixin() {
    },
    SourceSpanBase: function SourceSpanBase() {
    },
    SourceSpanFormatException$(message, span, source) {
      return new A.SourceSpanFormatException(source, message, span);
    },
    SourceSpanException: function SourceSpanException() {
    },
    SourceSpanFormatException: function SourceSpanFormatException(t0, t1, t2) {
      this.source = t0;
      this._span_exception$_message = t1;
      this._span = t2;
    },
    SourceSpanMixin: function SourceSpanMixin() {
    },
    SourceSpanWithContext$(start, end, text, _context) {
      var t1 = new A.SourceSpanWithContext(_context, start, end, text);
      t1.SourceSpanBase$3(start, end, text);
      if (!C.JSString_methods.contains$1(_context, text))
        B.throwExpression(B.ArgumentError$('The context line "' + _context + '" must contain "' + text + '".', null));
      if (A.findLineStart(_context, text, start.get$column()) == null)
        B.throwExpression(B.ArgumentError$('The span text "' + text + '" must start at column ' + (start.get$column() + 1) + ' in a line within "' + _context + '".', null));
      return t1;
    },
    SourceSpanWithContext: function SourceSpanWithContext(t0, t1, t2, t3) {
      var _ = this;
      _._span_with_context$_context = t0;
      _.start = t1;
      _.end = t2;
      _.text = t3;
    },
    StringScannerException: function StringScannerException(t0, t1, t2) {
      this.source = t0;
      this._span_exception$_message = t1;
      this._span = t2;
    },
    StringScanner0: function StringScanner0(t0, t1) {
      var _ = this;
      _.sourceUrl = t0;
      _.string = t1;
      _._string_scanner0$_position = 0;
      _._string_scanner0$_lastMatchPosition = _._string_scanner0$_lastMatch = null;
    },
    RenderVisibilityDetectorBase__handleTimer() {
      $.RenderVisibilityDetectorBase__timer = null;
      $.SchedulerBinding__instance.scheduleTask$1$2(A.render_visibility_detector_RenderVisibilityDetectorBase__processCallbacks$closure(), C.Priority_200000, type$.void);
    },
    RenderVisibilityDetectorBase__processCallbacks() {
      var t1, t2, callback;
      for (t1 = $.RenderVisibilityDetectorBase__updates, t1 = t1.get$values(t1), t2 = B._instanceType(t1), t2 = t2._eval$1("@<1>")._bind$1(t2._rest[1]), t1 = new B.MappedIterator(J.get$iterator$ax(t1.__internal$_iterable), t1._f, t2._eval$1("MappedIterator<1,2>")), t2 = t2._rest[1]; t1.moveNext$0();) {
        callback = t1.__internal$_current;
        (callback == null ? t2._as(callback) : callback).call$0();
      }
      $.RenderVisibilityDetectorBase__updates.clear$0(0);
    },
    RenderVisibilityDetectorBase: function RenderVisibilityDetectorBase() {
    },
    RenderVisibilityDetectorBase__scheduleUpdate_closure: function RenderVisibilityDetectorBase__scheduleUpdate_closure(t0, t1) {
      this.$this = t0;
      this.layer = t1;
    },
    RenderVisibilityDetectorBase__scheduleUpdate_closure0: function RenderVisibilityDetectorBase__scheduleUpdate_closure0() {
    },
    _RenderVisibilityDetector_RenderProxyBox_RenderVisibilityDetectorBase_paint_closure: function _RenderVisibilityDetector_RenderProxyBox_RenderVisibilityDetectorBase_paint_closure(t0) {
      this.$this = t0;
    },
    RenderVisibilityDetector: function RenderVisibilityDetector(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.key = t0;
      _.RenderVisibilityDetectorBase__compositionCallbackCanceller = t1;
      _.RenderVisibilityDetectorBase__onVisibilityChanged = t2;
      _.RenderVisibilityDetectorBase__debugScheduleUpdateCount = t3;
      _.RenderVisibilityDetectorBase__lastPaintTransform = t4;
      _.RenderVisibilityDetectorBase__lastPaintClipBounds = t5;
      _.RenderVisibilityDetectorBase__disposed = t6;
      _.RenderObjectWithChildMixin__child = t7;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t8;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderVisibilityDetector_RenderProxyBox_RenderVisibilityDetectorBase: function _RenderVisibilityDetector_RenderProxyBox_RenderVisibilityDetectorBase() {
    },
    _floatNear(f1, f2) {
      var absDiff = Math.abs(f1 - f2);
      return absDiff <= 0.01 || absDiff / Math.max(Math.abs(f1), Math.abs(f2)) <= 0.01;
    },
    VisibilityDetector: function VisibilityDetector(t0, t1, t2) {
      this.onVisibilityChanged = t0;
      this.child = t1;
      this.key = t2;
    },
    VisibilityInfo: function VisibilityInfo(t0, t1, t2) {
      this.key = t0;
      this.size = t1;
      this.visibleBounds = t2;
    },
    VisibilityDetectorController: function VisibilityDetectorController(t0) {
      this.updateInterval = t0;
    },
    Primitives_valueFromDecomposedDate(years, month, day, hours, minutes, seconds, milliseconds, isUtc) {
      var value,
        jsMonth = month - 1;
      if (0 <= years && years < 100) {
        years += 400;
        jsMonth -= 4800;
      }
      value = isUtc ? Date.UTC(years, jsMonth, day, hours, minutes, seconds, milliseconds) : new Date(years, jsMonth, day, hours, minutes, seconds, milliseconds).valueOf();
      if (isNaN(value) || value < -864e13 || value > 864e13)
        return null;
      return value;
    },
    groupBy(values, key, $S, $T) {
      var t1, _i, element, t2, t3,
        map = B.LinkedHashMap_LinkedHashMap$_empty($T, $S._eval$1("List<0>"));
      for (t1 = $S._eval$1("JSArray<0>"), _i = 0; _i < 1; ++_i) {
        element = values[_i];
        t2 = key.call$1(element);
        t3 = map.$index(0, t2);
        if (t3 == null) {
          t3 = B._setArrayType([], t1);
          map.$indexSet(0, t2, t3);
          t2 = t3;
        } else
          t2 = t3;
        J.add$1$ax(t2, element);
      }
      return map;
    },
    compute0(callback, message, debugLabel, $Q, $R) {
      return A.compute$body0($R._eval$1("@<0>")._bind$1($Q)._eval$1("1/(2)")._as(callback), $Q._as(message), debugLabel, $Q, $R, $R);
    },
    compute$body0(callback, message, debugLabel, $Q, $R, $async$type) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter($async$type),
        $async$returnValue;
      var $async$compute0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return B._asyncAwait(null, $async$compute0);
            case 3:
              // returning from await.
              $async$returnValue = callback.call$1(message);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$compute0, $async$completer);
    },
    HapticFeedback_lightImpact() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void);
      var $async$HapticFeedback_lightImpact = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return B._asyncAwait(C.OptionalMethodChannel_cWd.invokeMethod$1$2("HapticFeedback.vibrate", "HapticFeedbackType.lightImpact", type$.void), $async$HapticFeedback_lightImpact);
            case 2:
              // returning from await.
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$HapticFeedback_lightImpact, $async$completer);
    },
    InitConfig_initApp(context) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.dynamic),
        t1;
      var $async$InitConfig_initApp = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.AutoUi__instance;
              (t1 == null ? $.AutoUi__instance = new M.AutoUi() : t1).init$0();
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$InitConfig_initApp, $async$completer);
    },
    $NetListBeanFromJson(json) {
      var t3, id, imagePath, isVisible, order, title, type, url,
        netListBean = new A.NetListBean(),
        t1 = J.getInterceptor$asx(json),
        t2 = type$.String,
        desc = $.$get$jsonConvert().convert$1$1(t1.$index(json, "desc"), t2);
      if (desc != null)
        netListBean.__NetListBean_desc_A = desc;
      t3 = type$.double;
      id = $.$get$jsonConvert().convert$1$1(t1.$index(json, "id"), t3);
      if (id != null)
        netListBean.__NetListBean_id_A = id;
      imagePath = $.$get$jsonConvert().convert$1$1(t1.$index(json, "imagePath"), t2);
      if (imagePath != null)
        netListBean.__NetListBean_imagePath_A = imagePath;
      isVisible = $.$get$jsonConvert().convert$1$1(t1.$index(json, "isVisible"), t3);
      if (isVisible != null)
        netListBean.__NetListBean_isVisible_A = isVisible;
      order = $.$get$jsonConvert().convert$1$1(t1.$index(json, "order"), t3);
      if (order != null)
        netListBean.__NetListBean_order_A = order;
      title = $.$get$jsonConvert().convert$1$1(t1.$index(json, "title"), t2);
      if (title != null)
        netListBean.__NetListBean_title_A = title;
      type = $.$get$jsonConvert().convert$1$1(t1.$index(json, "type"), t3);
      if (type != null)
        netListBean.__NetListBean_type_A = type;
      url = $.$get$jsonConvert().convert$1$1(t1.$index(json, "url"), t2);
      if (url != null)
        netListBean.__NetListBean_url_A = url;
      return netListBean;
    },
    wrapFormatException($name, value, body, $T) {
      var error, error0, t1, exception;
      try {
        t1 = body.call$0();
        return t1;
      } catch (exception) {
        t1 = B.unwrapException(exception);
        if (t1 instanceof A.SourceSpanFormatException) {
          error = t1;
          throw B.wrapException(A.SourceSpanFormatException$("Invalid " + $name + ": " + error._span_exception$_message, error._span, J.get$source$z(error)));
        } else if (type$.FormatException._is(t1)) {
          error0 = t1;
          throw B.wrapException(B.FormatException$("Invalid " + $name + ' "' + value + '": ' + J.get$message$z(error0), J.get$source$z(error0), J.get$offset$x(error0)));
        } else
          throw exception;
      }
    },
    current() {
      var exception, t1, path, lastIndex, uri = null;
      try {
        uri = F.Uri_base();
      } catch (exception) {
        if (type$.Exception._is(B.unwrapException(exception))) {
          t1 = $._current;
          if (t1 != null)
            return t1;
          throw exception;
        } else
          throw exception;
      }
      if (J.$eq$(uri, $._currentUriBase)) {
        t1 = $._current;
        t1.toString;
        return t1;
      }
      $._currentUriBase = uri;
      if ($.$get$Style_platform() == $.$get$Style_url())
        t1 = $._current = uri.resolve$1(".").toString$0(0);
      else {
        path = uri.toFilePath$0();
        lastIndex = path.length - 1;
        t1 = $._current = lastIndex === 0 ? path : C.JSString_methods.substring$2(path, 0, lastIndex);
      }
      return t1;
    },
    isAlphabetic(char) {
      var t1;
      if (!(char >= 65 && char <= 90))
        t1 = char >= 97 && char <= 122;
      else
        t1 = true;
      return t1;
    },
    isDriveLetter(path, index) {
      var t1 = path.length,
        t2 = index + 2;
      if (t1 < t2)
        return false;
      if (!A.isAlphabetic(C.JSString_methods.codeUnitAt$1(path, index)))
        return false;
      if (C.JSString_methods.codeUnitAt$1(path, index + 1) !== 58)
        return false;
      if (t1 === t2)
        return true;
      return C.JSString_methods.codeUnitAt$1(path, t2) === 47;
    },
    isAllTheSame(iter) {
      var firstValue, t1, t2, value;
      if (iter.get$length(iter) === 0)
        return true;
      firstValue = iter.get$first(iter);
      for (t1 = B.SubListIterable$(iter, 1, null, iter.$ti._eval$1("ListIterable.E")), t2 = t1.$ti, t1 = new B.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
        value = t1.__internal$_current;
        if (!J.$eq$(value == null ? t2._as(value) : value, firstValue))
          return false;
      }
      return true;
    },
    replaceFirstNull(list, element, $E) {
      var index = C.JSArray_methods.indexOf$1(list, null);
      if (index < 0)
        throw B.wrapException(B.ArgumentError$(B.S(list) + " contains no null elements.", null));
      C.JSArray_methods.$indexSet(list, index, element);
    },
    replaceWithNull(list, element, $E) {
      var index = C.JSArray_methods.indexOf$1(list, element);
      if (index < 0)
        throw B.wrapException(B.ArgumentError$(B.S(list) + " contains no elements matching " + element.toString$0(0) + ".", null));
      C.JSArray_methods.$indexSet(list, index, null);
    },
    countCodeUnits(string, codeUnit) {
      var t1, t2, count, t3;
      for (t1 = new B.CodeUnits(string), t2 = type$.CodeUnits, t1 = new B.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListMixin.E>")), t2 = t2._eval$1("ListMixin.E"), count = 0; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if ((t3 == null ? t2._as(t3) : t3) === codeUnit)
          ++count;
      }
      return count;
    },
    findLineStart(context, text, column) {
      var beginningOfLine, index, lineStart;
      if (text.length === 0)
        for (beginningOfLine = 0; true;) {
          index = C.JSString_methods.indexOf$2(context, "\n", beginningOfLine);
          if (index === -1)
            return context.length - beginningOfLine >= column ? beginningOfLine : null;
          if (index - beginningOfLine >= column)
            return beginningOfLine;
          beginningOfLine = index + 1;
        }
      index = C.JSString_methods.indexOf$1(context, text);
      for (; index !== -1;) {
        lineStart = index === 0 ? 0 : C.JSString_methods.lastIndexOf$2(context, "\n", index - 1) + 1;
        if (column === index - lineStart)
          return lineStart;
        index = C.JSString_methods.indexOf$2(context, text, index + 1);
      }
      return null;
    }
  },
  B, J, C, D, N, H, F, O, S, P, T, E, K, U, I, G, V, Q, L, W, X, R, Y, Z, M, A_;
  A = hunkHelpers.updateHolder(holdersList[3], A);
  B = holdersList[0];
  J = holdersList[1];
  C = holdersList[2];
  D = holdersList[87];
  N = holdersList[84];
  H = holdersList[77];
  F = holdersList[43];
  O = holdersList[58];
  S = holdersList[57];
  P = holdersList[31];
  T = holdersList[59];
  E = holdersList[42];
  K = holdersList[56];
  U = holdersList[36];
  I = holdersList[38];
  G = holdersList[81];
  V = holdersList[86];
  Q = holdersList[48];
  L = holdersList[37];
  W = holdersList[79];
  X = holdersList[54];
  R = holdersList[78];
  Y = holdersList[34];
  Z = holdersList[74];
  M = holdersList[49];
  A_ = holdersList[47];
  A._StreamSinkTransformer.prototype = {
    bind$1(stream) {
      var t1 = this.$ti;
      return new B._BoundSinkStream(this._sinkMapper, t1._eval$1("Stream<1>")._as(stream), t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("_BoundSinkStream<1,2>"));
    }
  };
  A._HandlerEventSink.prototype = {
    add$1(_, data) {
      var sink;
      this.$ti._precomputed1._as(data);
      sink = this._async$_sink;
      if (sink == null)
        throw B.wrapException(B.StateError$("Sink is closed"));
      this._async$_handleData.call$2(data, sink);
    },
    addError$2(error, stackTrace) {
      var sink;
      B.checkNotNullable(error, "error", type$.Object);
      sink = this._async$_sink;
      if (sink == null)
        throw B.wrapException(B.StateError$("Sink is closed"));
      sink.addError$2(error, stackTrace);
    },
    close$0(_) {
      var t1,
        sink = this._async$_sink;
      if (sink == null)
        return;
      this.set$_async$_sink(null);
      t1 = sink._async$_sink;
      if ((t1._state & 2) !== 0)
        B.throwExpression(B.StateError$("Stream is already closed"));
      t1.super$_BufferingStreamSubscription$_close();
    },
    set$_async$_sink(_sink) {
      this._async$_sink = this.$ti._eval$1("EventSink<2>?")._as(_sink);
    },
    $isEventSink: 1
  };
  A._StreamHandlerTransformer.prototype = {
    bind$1(stream) {
      return this.super$_StreamSinkTransformer$bind(this.$ti._eval$1("Stream<1>")._as(stream));
    }
  };
  A._ByteCallbackSink.prototype = {
    add$1(_, chunk) {
      var t1, t2, t3, v, grown, _this = this;
      type$.Iterable_int._as(chunk);
      t1 = _this._buffer;
      t2 = _this._bufferIndex;
      t3 = J.getInterceptor$asx(chunk);
      if (t3.get$length(chunk) > t1.length - t2) {
        t1 = _this._buffer;
        v = t3.get$length(chunk) + t1.length - 1;
        v |= C.JSInt_methods._shrOtherPositive$1(v, 1);
        v |= v >>> 2;
        v |= v >>> 4;
        v |= v >>> 8;
        grown = new Uint8Array((((v | v >>> 16) >>> 0) + 1) * 2);
        t1 = _this._buffer;
        C.NativeUint8List_methods.setRange$3(grown, 0, t1.length, t1);
        _this.set$_buffer(grown);
      }
      t1 = _this._buffer;
      t2 = _this._bufferIndex;
      C.NativeUint8List_methods.setRange$3(t1, t2, t2 + t3.get$length(chunk), chunk);
      _this._bufferIndex = _this._bufferIndex + t3.get$length(chunk);
    },
    close$0(_) {
      this._convert$_callback.call$1(C.NativeUint8List_methods.sublist$2(this._buffer, 0, this._bufferIndex));
    },
    set$_buffer(_buffer) {
      this._buffer = type$.List_int._as(_buffer);
    }
  };
  A.CanonicalizedMap.prototype = {
    $index(_, key) {
      var pair, _this = this;
      if (!_this._isValidKey$1(key))
        return null;
      pair = _this._base.$index(0, _this._canonicalize.call$1(_this.$ti._eval$1("CanonicalizedMap.K")._as(key)));
      return pair == null ? null : pair.get$value(pair);
    },
    $indexSet(_, key, value) {
      var t2, _this = this,
        t1 = _this.$ti;
      t1._eval$1("CanonicalizedMap.K")._as(key);
      t2 = t1._eval$1("CanonicalizedMap.V");
      t2._as(value);
      if (!_this._isValidKey$1(key))
        return;
      _this._base.$indexSet(0, _this._canonicalize.call$1(key), new B.MapEntry(key, value, t1._eval$1("@<CanonicalizedMap.K>")._bind$1(t2)._eval$1("MapEntry<1,2>")));
    },
    addAll$1(_, other) {
      this.$ti._eval$1("Map<CanonicalizedMap.K,CanonicalizedMap.V>")._as(other).forEach$1(0, new A.CanonicalizedMap_addAll_closure(this));
    },
    cast$2$0(_, K2, V2) {
      var t1 = this._base;
      return t1.cast$2$0(t1, K2, V2);
    },
    containsKey$1(_, key) {
      var _this = this;
      if (!_this._isValidKey$1(key))
        return false;
      return _this._base.containsKey$1(0, _this._canonicalize.call$1(_this.$ti._eval$1("CanonicalizedMap.K")._as(key)));
    },
    get$entries(_) {
      var t1 = this._base;
      return t1.get$entries(t1).map$1$1(0, new A.CanonicalizedMap_entries_closure(this), this.$ti._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>"));
    },
    forEach$1(_, f) {
      this._base.forEach$1(0, new A.CanonicalizedMap_forEach_closure(this, this.$ti._eval$1("~(CanonicalizedMap.K,CanonicalizedMap.V)")._as(f)));
    },
    get$isEmpty(_) {
      return this._base._length === 0;
    },
    get$isNotEmpty(_) {
      return this._base._length !== 0;
    },
    get$keys(_) {
      var t2, t3,
        t1 = this._base;
      t1 = t1.get$values(t1);
      t2 = this.$ti._eval$1("CanonicalizedMap.K");
      t3 = B._instanceType(t1);
      return B.MappedIterable_MappedIterable(t1, t3._bind$1(t2)._eval$1("1(Iterable.E)")._as(new A.CanonicalizedMap_keys_closure(this)), t3._eval$1("Iterable.E"), t2);
    },
    get$length(_) {
      return this._base._length;
    },
    map$2$1(_, transform, K2, V2) {
      var t1 = this._base;
      return t1.map$2$1(t1, new A.CanonicalizedMap_map_closure(this, this.$ti._bind$1(K2)._bind$1(V2)._eval$1("MapEntry<1,2>(CanonicalizedMap.K,CanonicalizedMap.V)")._as(transform), K2, V2), K2, V2);
    },
    putIfAbsent$2(_, key, ifAbsent) {
      var _this = this,
        t1 = _this.$ti;
      t1._eval$1("CanonicalizedMap.K")._as(key);
      t1._eval$1("CanonicalizedMap.V()")._as(ifAbsent);
      return J.get$value$z(_this._base.putIfAbsent$2(0, _this._canonicalize.call$1(key), new A.CanonicalizedMap_putIfAbsent_closure(_this, key, ifAbsent)));
    },
    remove$1(_, key) {
      var pair, _this = this;
      if (!_this._isValidKey$1(key))
        return null;
      pair = _this._base.remove$1(0, _this._canonicalize.call$1(_this.$ti._eval$1("CanonicalizedMap.K")._as(key)));
      return pair == null ? null : pair.get$value(pair);
    },
    get$values(_) {
      var t2, t3,
        t1 = this._base;
      t1 = t1.get$values(t1);
      t2 = this.$ti._eval$1("CanonicalizedMap.V");
      t3 = B._instanceType(t1);
      return B.MappedIterable_MappedIterable(t1, t3._bind$1(t2)._eval$1("1(Iterable.E)")._as(new A.CanonicalizedMap_values_closure(this)), t3._eval$1("Iterable.E"), t2);
    },
    toString$0(_) {
      return B.MapBase_mapToString(this);
    },
    _isValidKey$1(key) {
      var t1;
      if (this.$ti._eval$1("CanonicalizedMap.K")._is(key))
        t1 = true;
      else
        t1 = false;
      return t1;
    },
    $isMap: 1
  };
  A.ResponseBody.prototype = {
    set$headers(_, headers) {
      this.headers = type$.Map_of_String_and_List_String._as(headers);
    }
  };
  A.BrowserHttpClientAdapter.prototype = {
    fetch$3(_, options, requestStream, cancelFuture) {
      return this.fetch$body$BrowserHttpClientAdapter(0, options, type$.nullable_Stream_Uint8List._as(requestStream), cancelFuture);
    },
    fetch$body$BrowserHttpClientAdapter(_, options, requestStream, cancelFuture) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.ResponseBody),
        $async$returnValue, $async$self = this, t2, withCredentialsOption, connectTimeout, receiveTimeout, completer, t3, t4, t5, connectionTimeout, uploadStopwatch, t6, t7, t8, sink, t1, xhr, $async$temp1;
      var $async$fetch$3 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              xhr = new XMLHttpRequest();
              $async$self.xhrs.add$1(0, xhr);
              t2 = options.___RequestConfig_method_A;
              t2 === $ && B.throwLateFieldNI("method");
              C.HttpRequest_methods.open$2(xhr, t2, options.get$uri().toString$0(0));
              xhr.responseType = "arraybuffer";
              t2 = options.___RequestConfig_extra_A;
              t2 === $ && B.throwLateFieldNI("extra");
              withCredentialsOption = t2.$index(0, "withCredentials");
              if (withCredentialsOption != null)
                C.HttpRequest_methods.set$withCredentials(xhr, J.$eq$(withCredentialsOption, true));
              else
                C.HttpRequest_methods.set$withCredentials(xhr, false);
              t2 = options.___RequestConfig__headers_A;
              t2 === $ && B.throwLateFieldNI("_headers");
              t2.remove$1(0, "content-length");
              options.___RequestConfig__headers_A.forEach$1(0, new A.BrowserHttpClientAdapter_fetch_closure(xhr));
              connectTimeout = options.OptionsMixin__connectTimeout;
              receiveTimeout = options._receiveTimeout;
              if (connectTimeout != null && receiveTimeout != null && receiveTimeout._duration > 0) {
                type$.Duration._as(receiveTimeout);
                C.HttpRequest_methods.set$timeout(xhr, C.JSInt_methods._tdivFast$1(connectTimeout._duration + receiveTimeout._duration, 1000));
              }
              t2 = new B._Future($.Zone__current, type$._Future_ResponseBody);
              completer = new B._AsyncCompleter(t2, type$._AsyncCompleter_ResponseBody);
              t3 = type$._EventStream_ProgressEvent;
              t4 = new B._EventStream(xhr, "load", false, t3);
              t5 = type$.Null;
              t4.get$first(t4).then$1$1(new A.BrowserHttpClientAdapter_fetch_closure0(xhr, completer), t5);
              t1.connectTimeoutTimer = null;
              connectionTimeout = options.OptionsMixin__connectTimeout;
              if (connectionTimeout != null)
                t1.connectTimeoutTimer = B.Timer_Timer(connectionTimeout, new A.BrowserHttpClientAdapter_fetch_closure1(completer, xhr, options, connectionTimeout));
              uploadStopwatch = new B.Stopwatch();
              $.$get$Stopwatch__frequency();
              t4 = xhr.upload;
              t6 = type$.nullable_void_Function_ProgressEvent;
              t7 = t6._as(new A.BrowserHttpClientAdapter_fetch_closure2(t1, options, uploadStopwatch, completer, xhr));
              type$.nullable_void_Function._as(null);
              t8 = type$.ProgressEvent;
              B._EventStreamSubscription$(t4, "progress", t7, false, t8);
              B._EventStreamSubscription$(xhr, "progress", t6._as(new A.BrowserHttpClientAdapter_fetch_closure3(t1, options, uploadStopwatch, new B.Stopwatch(), completer, xhr)), false, t8);
              t3 = new B._EventStream(xhr, "error", false, t3);
              t3.get$first(t3).then$1$1(new A.BrowserHttpClientAdapter_fetch_closure4(t1, completer, options), t5);
              if (cancelFuture != null)
                cancelFuture.then$1$1(new A.BrowserHttpClientAdapter_fetch_closure5(t1, xhr, completer, options), t5);
              $async$goto = requestStream != null ? 3 : 5;
              break;
            case 3:
              // then
              t1 = new B._Future($.Zone__current, type$._Future_Uint8List);
              completer = new B._AsyncCompleter(t1, type$._AsyncCompleter_Uint8List);
              sink = new A._ByteCallbackSink(new A.BrowserHttpClientAdapter_fetch_closure6(completer), new Uint8Array(1024));
              requestStream.listen$4$cancelOnError$onDone$onError(type$.void_Function_List_int._as(sink.get$add(sink)), true, sink.get$close(sink), new A.BrowserHttpClientAdapter_fetch_closure7(completer));
              $async$temp1 = xhr;
              $async$goto = 6;
              return B._asyncAwait(t1, $async$fetch$3);
            case 6:
              // returning from await.
              $async$temp1.send($async$result);
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              xhr.send();
            case 4:
              // join
              $async$returnValue = t2.whenComplete$1(new A.BrowserHttpClientAdapter_fetch_closure8($async$self, xhr));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$fetch$3, $async$completer);
    },
    $isHttpClientAdapter: 1
  };
  A.CancelToken.prototype = {};
  A.DioForBrowser.prototype = {$isDio: 1};
  A._DioForBrowser_Object_DioMixin.prototype = {};
  A.DioErrorType.prototype = {
    _enumToString$0() {
      return "DioErrorType." + this._core$_name;
    }
  };
  A.DioError.prototype = {
    toString$0(_) {
      var msg = "DioError [" + B.S(A._DioErrorTypeExtension_toPrettyDescription(this.type)) + "]: " + B.S(this.message),
        t1 = this.error;
      return t1 != null ? msg + ("\nError: " + B.S(t1)) : msg;
    },
    $isException: 1
  };
  A.DioMixin.prototype = {
    request$1$7$cancelToken$data$onReceiveProgress$onSendProgress$options$queryParameters(_, path, cancelToken, data, onReceiveProgress, onSendProgress, options, queryParameters, $T) {
      var t1;
      type$.nullable_Map_String_dynamic._as(queryParameters);
      t1 = type$.nullable_void_Function_int_int;
      t1._as(onSendProgress);
      return this.request$body$DioMixin(0, path, cancelToken, data, t1._as(onReceiveProgress), onSendProgress, options, queryParameters, $T, $T._eval$1("Response<0>"));
    },
    request$body$DioMixin(_, path, cancelToken, data, onReceiveProgress, onSendProgress, options, queryParameters, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, t2, t3, query, t4, headers, contentType, extra, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, requestOptions, t1;
      var $async$request$1$7$cancelToken$data$onReceiveProgress$onSendProgress$options$queryParameters = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.DioMixin___DioMixin_options_A;
              t1 === $ && B.throwLateFieldNI("options");
              t2 = type$.nullable_void_Function_int_int;
              t2._as(onReceiveProgress);
              t2._as(onSendProgress);
              type$.nullable_Map_String_dynamic._as(queryParameters);
              t2 = type$.String;
              t3 = type$.dynamic;
              query = B.LinkedHashMap_LinkedHashMap$_empty(t2, t3);
              t4 = t1.OptionsMixin___OptionsMixin_queryParameters_A;
              t4 === $ && B.throwLateFieldNI("queryParameters");
              query.addAll$1(0, t4);
              if (queryParameters != null)
                query.addAll$1(0, queryParameters);
              t4 = t1.___RequestConfig__headers_A;
              t4 === $ && B.throwLateFieldNI("_headers");
              headers = A.caseInsensitiveKeyMap(t4, t3);
              contentType = B._asStringQ(headers.$index(0, "content-type"));
              t4 = t1.___RequestConfig_extra_A;
              t4 === $ && B.throwLateFieldNI("extra");
              extra = B.LinkedHashMap_LinkedHashMap$from(t4, t2, t3);
              t2 = t1.___RequestConfig_method_A;
              t2 === $ && B.throwLateFieldNI("method");
              t3 = t1.OptionsMixin___OptionsMixin_baseUrl_A;
              t3 === $ && B.throwLateFieldNI("baseUrl");
              t4 = t1.OptionsMixin__connectTimeout;
              t5 = t1._sendTimeout;
              t6 = t1._receiveTimeout;
              t7 = t1.___RequestConfig_responseType_A;
              t7 === $ && B.throwLateFieldNI("responseType");
              t8 = t1.___RequestConfig_validateStatus_A;
              t8 === $ && B.throwLateFieldNI("validateStatus");
              t9 = t1.___RequestConfig_receiveDataWhenStatusError_A;
              t9 === $ && B.throwLateFieldNI("receiveDataWhenStatusError");
              t10 = t1.___RequestConfig_followRedirects_A;
              t10 === $ && B.throwLateFieldNI("followRedirects");
              t11 = t1.___RequestConfig_maxRedirects_A;
              t11 === $ && B.throwLateFieldNI("maxRedirects");
              t12 = t1.___RequestConfig_persistentConnection_A;
              t12 === $ && B.throwLateFieldNI("persistentConnection");
              t13 = t1.___RequestConfig_listFormat_A;
              t13 === $ && B.throwLateFieldNI("listFormat");
              t14 = contentType == null ? null : contentType;
              if (t14 == null)
                t14 = B._asStringQ(t1.___RequestConfig__headers_A.$index(0, "content-type"));
              requestOptions = A.RequestOptions$(t3, cancelToken, t4, t14, data, extra, t10, headers, t13, t11, t2.toUpperCase(), onReceiveProgress, onSendProgress, path, t12, query, t9, t6, t1.requestEncoder, t1.responseDecoder, t7, t5, t8);
              requestOptions.set$onReceiveProgress(onReceiveProgress);
              requestOptions.set$onSendProgress(onSendProgress);
              requestOptions.cancelToken = cancelToken;
              if ($async$self.DioMixin__closed)
                throw B.wrapException(A.DioError$connectionError("Dio can't establish a new connection after it was closed.", requestOptions));
              $async$returnValue = $async$self.fetch$1$1(0, requestOptions, $T);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$request$1$7$cancelToken$data$onReceiveProgress$onSendProgress$options$queryParameters, $async$completer);
    },
    fetch$1$1(_, requestOptions, $T) {
      return this.fetch$body$DioMixin(0, requestOptions, $T, $T._eval$1("Response<0>"));
    },
    fetch$body$DioMixin(_, requestOptions, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, t1, requestInterceptorWrapper, responseInterceptorWrapper, errorInterceptorWrapper, future, t2, t3, t4, t5, t6, fun, _box_1;
      var $async$fetch$1$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _box_1 = {};
              _box_1.requestOptions = requestOptions;
              if (B.createRuntimeType($T) !== C.Type_dynamic_0Rz) {
                t1 = requestOptions.___RequestConfig_responseType_A;
                t1 === $ && B.throwLateFieldNI("responseType");
                t1 = !(t1 === D.ResponseType_3 || t1 === D.ResponseType_1);
              } else
                t1 = false;
              if (t1)
                if (B.createRuntimeType($T) === C.Type_String_k8F)
                  requestOptions.___RequestConfig_responseType_A = D.ResponseType_2;
                else
                  requestOptions.___RequestConfig_responseType_A = D.ResponseType_0;
              requestInterceptorWrapper = new A.DioMixin_fetch_requestInterceptorWrapper(_box_1);
              responseInterceptorWrapper = new A.DioMixin_fetch_responseInterceptorWrapper(_box_1);
              errorInterceptorWrapper = new A.DioMixin_fetch_errorInterceptorWrapper(_box_1);
              t1 = type$.dynamic;
              future = B.Future_Future(new A.DioMixin_fetch_closure(_box_1), t1);
              for (t2 = $async$self.DioMixin__interceptors, t3 = B._instanceType(t2), t4 = t3._eval$1("ListIterator<ListMixin.E>"), t5 = new B.ListIterator(t2, t2.get$length(t2), t4), t3 = t3._eval$1("ListMixin.E"); t5.moveNext$0();) {
                t6 = t5.__internal$_current;
                fun = (t6 == null ? t3._as(t6) : t6).get$onRequest();
                future = future.then$1$1(requestInterceptorWrapper.call$1(fun), t1);
              }
              future = future.then$1$1(requestInterceptorWrapper.call$1(new A.DioMixin_fetch_closure0(_box_1, $async$self, $T)), t1);
              for (t5 = new B.ListIterator(t2, t2.get$length(t2), t4); t5.moveNext$0();) {
                t6 = t5.__internal$_current;
                fun = (t6 == null ? t3._as(t6) : t6).get$onResponse();
                future = future.then$1$1(responseInterceptorWrapper.call$1(fun), t1);
              }
              for (t1 = new B.ListIterator(t2, t2.get$length(t2), t4); t1.moveNext$0();) {
                t2 = t1.__internal$_current;
                if (t2 == null)
                  t2 = t3._as(t2);
                fun = t2.get$onError(t2);
                future = future.catchError$1(errorInterceptorWrapper.call$1(fun));
              }
              $async$returnValue = future.then$1$1(new A.DioMixin_fetch_closure1(_box_1, $T), $T._eval$1("Response<0>")).catchError$1(new A.DioMixin_fetch_closure2(_box_1, $T));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$fetch$1$1, $async$completer);
    },
    _dispatchRequest$1$1(reqOpt, $T) {
      return this._dispatchRequest$body$DioMixin(reqOpt, $T);
    },
    _dispatchRequest$body$DioMixin(reqOpt, $T) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.Response_dynamic),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, stream, headers, ret, statusOk, forceConvert, contentType, e, stackTrace, t1, t2, t3, t4, forceConvert0, exception, cancelToken, responseBody, $async$exception, $async$temp1, $async$temp2;
      var $async$_dispatchRequest$1$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              cancelToken = reqOpt.cancelToken;
              responseBody = null;
              $async$handler = 4;
              $async$goto = 7;
              return B._asyncAwait($async$self._transformData$1(reqOpt), $async$_dispatchRequest$1$1);
            case 7:
              // returning from await.
              stream = $async$result;
              t1 = $async$self.DioMixin___DioMixin_httpClientAdapter_A;
              t1 === $ && B.throwLateFieldNI("httpClientAdapter");
              t2 = cancelToken;
              t2 = t2 == null ? null : t2._cancel_token$_completer.future;
              $async$goto = 8;
              return B._asyncAwait(t1.fetch$3(0, reqOpt, stream, t2), $async$_dispatchRequest$1$1);
            case 8:
              // returning from await.
              responseBody = $async$result;
              headers = A.Headers$fromMap(responseBody.headers);
              J.set$headers$x(responseBody, headers._headers$_map);
              responseBody.toString;
              t1 = B._setArrayType([], type$.JSArray_RedirectRecord);
              t2 = responseBody.isRedirect;
              t3 = responseBody.statusCode;
              t4 = responseBody.statusMessage;
              ret = A.Response$(null, responseBody.extra, headers, t2, t1, reqOpt, t3, t4, type$.dynamic);
              statusOk = reqOpt.validateStatus$1(responseBody.statusCode);
              if (!B.boolConversionCheck(statusOk)) {
                t1 = reqOpt.___RequestConfig_receiveDataWhenStatusError_A;
                t1 === $ && B.throwLateFieldNI("receiveDataWhenStatusError");
              } else
                t1 = true;
              $async$goto = t1 ? 9 : 11;
              break;
            case 9:
              // then
              if (!(B.createRuntimeType($T) === C.Type_dynamic_0Rz || B.createRuntimeType($T) === C.Type_String_k8F)) {
                t1 = reqOpt.___RequestConfig_responseType_A;
                t1 === $ && B.throwLateFieldNI("responseType");
                forceConvert0 = !(t1 === D.ResponseType_3 || t1 === D.ResponseType_1);
              } else
                forceConvert0 = false;
              forceConvert = forceConvert0;
              contentType = null;
              if (B.boolConversionCheck(forceConvert)) {
                contentType = J.value$1$z(headers, "content-type");
                J.$set$2$z(headers, "content-type", "application/json");
              }
              $async$temp1 = J;
              $async$temp2 = ret;
              $async$goto = 12;
              return B._asyncAwait($async$self.DioMixin_transformer.transformResponse$2(reqOpt, responseBody), $async$_dispatchRequest$1$1);
            case 12:
              // returning from await.
              $async$temp1.set$data$x($async$temp2, $async$result);
              if (B.boolConversionCheck(forceConvert))
                J.$set$2$z(headers, "content-type", contentType);
              // goto join
              $async$goto = 10;
              break;
            case 11:
              // else
              $async$goto = 13;
              return B._asyncAwait(responseBody.stream.listen$1(null).cancel$0(0), $async$_dispatchRequest$1$1);
            case 13:
              // returning from await.
            case 10:
              // join
              if (B.boolConversionCheck(statusOk)) {
                $async$returnValue = ret;
                // goto return
                $async$goto = 1;
                break;
              } else {
                t1 = responseBody.statusCode;
                throw B.wrapException(new A.DioError(reqOpt, ret, D.DioErrorType_4, null, null, "The request returned an invalid status code of " + t1 + "."));
              }
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              e = B.unwrapException($async$exception);
              stackTrace = B.getTraceFromException($async$exception);
              t1 = A.DioMixin_assureDioError(e, reqOpt, stackTrace);
              throw B.wrapException(t1);
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return B._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return B._asyncStartSync($async$_dispatchRequest$1$1, $async$completer);
    },
    _isValidToken$1(token) {
      var t1, t2, t3;
      for (t1 = new B.CodeUnits(token), t2 = type$.CodeUnits, t1 = new B.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListMixin.E>")), t2 = t2._eval$1("ListMixin.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        if (t3 >= 128 || C.JSString_methods.codeUnitAt$1("                                 ! #$%&'  *+ -. 0123456789       ABCDEFGHIJKLMNOPQRSTUVWXYZ   ^_`abcdefghijklmnopqrstuvwxyz | ~ ", t3) === 32)
          return false;
      }
      return true;
    },
    _transformData$1(options) {
      return this._transformData$body$DioMixin(options);
    },
    _transformData$body$DioMixin(options) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.nullable_Stream_Uint8List),
        $async$returnValue, $async$self = this, t1;
      var $async$_transformData$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = options.___RequestConfig_method_A;
              t1 === $ && B.throwLateFieldNI("method");
              if (!$async$self._isValidToken$1(t1))
                throw B.wrapException(B.ArgumentError$value(options.get$method(options), "method", null));
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$_transformData$1, $async$completer);
    }
  };
  A.InterceptorResultType.prototype = {
    _enumToString$0() {
      return "InterceptorResultType." + this._core$_name;
    }
  };
  A.InterceptorState.prototype = {
    get$data(receiver) {
      return this.data;
    }
  };
  A._BaseHandler.prototype = {};
  A.RequestInterceptorHandler.prototype = {
    next$1(_, requestOptions) {
      this._dio_mixin$_completer.complete$1(0, new A.InterceptorState(requestOptions, D.InterceptorResultType_0, type$.InterceptorState_RequestOptions));
    }
  };
  A.ResponseInterceptorHandler.prototype = {
    next$1(_, response) {
      this._dio_mixin$_completer.complete$1(0, new A.InterceptorState(response, D.InterceptorResultType_0, type$.InterceptorState_Response_dynamic));
    }
  };
  A.ErrorInterceptorHandler.prototype = {
    next$1(_, err) {
      this._dio_mixin$_completer.completeError$2(new A.InterceptorState(err, D.InterceptorResultType_0, type$.InterceptorState_DioError), err.stackTrace);
    }
  };
  A.Interceptor0.prototype = {
    onRequest$2(options, handler) {
      handler.next$1(0, options);
    },
    onResponse$2(response, handler) {
      handler.next$1(0, response);
    },
    onError$2(_, err, handler) {
      handler.next$1(0, err);
    }
  };
  A.Interceptors.prototype = {
    get$length(_) {
      return this._dio_mixin$_list.length;
    },
    set$length(_, newLength) {
      C.JSArray_methods.set$length(this._dio_mixin$_list, newLength);
    },
    $index(_, index) {
      var t1;
      B._asInt(index);
      t1 = this._dio_mixin$_list;
      if (!(index >= 0 && index < t1.length))
        return B.ioore(t1, index);
      t1 = t1[index];
      t1.toString;
      return t1;
    },
    $indexSet(_, index, value) {
      var t1;
      B._asInt(index);
      type$.Interceptor._as(value);
      t1 = this._dio_mixin$_list;
      if (t1.length === index)
        C.JSArray_methods.add$1(t1, value);
      else
        C.JSArray_methods.$indexSet(t1, index, value);
    }
  };
  A.Headers.prototype = {
    $index(_, $name) {
      return this._headers$_map.$index(0, C.JSString_methods.trim$0(B._asString($name)).toLowerCase());
    },
    value$1(_, $name) {
      var t2,
        t1 = this._headers$_map.$index(0, C.JSString_methods.trim$0($name).toLowerCase());
      if (t1 == null)
        return null;
      t2 = J.getInterceptor$asx(t1);
      if (t2.get$length(t1) === 1)
        return t2.get$first(t1);
      throw B.wrapException(B.Exception_Exception('"' + $name + '" header has more than one value, please use Headers[name]'));
    },
    $set$2(_, $name, value) {
      if (value == null)
        return;
      this._headers$_map.$indexSet(0, C.JSString_methods.trim$0($name).toLowerCase(), B._setArrayType([C.JSString_methods.trim$0(value)], type$.JSArray_String));
    },
    forEach$1(_, f) {
      var t1, t2, t3, t4;
      type$.void_Function_2_String_and_List_String._as(f);
      for (t1 = this._headers$_map, t2 = B.LinkedHashMapKeyIterator$(t1, t1._modifications, B._instanceType(t1)._precomputed1); t2.moveNext$0();) {
        t3 = t2.__js_helper$_current;
        t4 = t1.$index(0, C.JSString_methods.trim$0(t3).toLowerCase());
        t4.toString;
        f.call$2(t3, t4);
      }
    },
    toString$0(_) {
      var t1,
        stringBuffer = new B.StringBuffer("");
      this._headers$_map.forEach$1(0, new A.Headers_toString_closure(stringBuffer));
      t1 = stringBuffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.ImplyContentTypeInterceptor.prototype = {
    onRequest$2(options, handler) {
      handler.next$1(0, options);
    }
  };
  A.LogInterceptor.prototype = {
    onRequest$2(options, handler) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.dynamic),
        $async$self = this, t1;
      var $async$onRequest$2 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              B.print("*** Request ***");
              B.print("uri: " + options.get$uri().toString$0(0));
              t1 = options.___RequestConfig_method_A;
              t1 === $ && B.throwLateFieldNI("method");
              B.print("method: " + t1);
              t1 = options.___RequestConfig_responseType_A;
              t1 === $ && B.throwLateFieldNI("responseType");
              B.print("responseType: " + t1._enumToString$0());
              t1 = options.___RequestConfig_followRedirects_A;
              t1 === $ && B.throwLateFieldNI("followRedirects");
              B.print("followRedirects: " + t1);
              t1 = options.___RequestConfig_persistentConnection_A;
              t1 === $ && B.throwLateFieldNI("persistentConnection");
              B.print("persistentConnection: " + t1);
              B.print("connectTimeout: " + B.S(options.OptionsMixin__connectTimeout));
              B.print("sendTimeout: " + B.S(options._sendTimeout));
              B.print("receiveTimeout: " + B.S(options._receiveTimeout));
              t1 = options.___RequestConfig_receiveDataWhenStatusError_A;
              t1 === $ && B.throwLateFieldNI("receiveDataWhenStatusError");
              B.print("receiveDataWhenStatusError: " + t1);
              t1 = options.___RequestConfig_extra_A;
              t1 === $ && B.throwLateFieldNI("extra");
              B.print("extra: " + t1.toString$0(0));
              B.print("headers:");
              t1 = options.___RequestConfig__headers_A;
              t1 === $ && B.throwLateFieldNI("_headers");
              t1.forEach$1(0, new A.LogInterceptor_onRequest_closure($async$self));
              B.print("");
              handler.next$1(0, options);
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$onRequest$2, $async$completer);
    },
    onResponse$2(response, handler) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.dynamic),
        $async$self = this;
      var $async$onResponse$2 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              B.print("*** Response ***");
              $async$self._printResponse$1(response);
              handler.next$1(0, response);
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$onResponse$2, $async$completer);
    },
    onError$2(_, err, handler) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.dynamic),
        $async$self = this, t1;
      var $async$onError$2 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              B.print("*** DioError ***:");
              B.print("uri: " + err.requestOptions.get$uri().toString$0(0));
              B.print(err.toString$0(0));
              t1 = err.response;
              if (t1 != null)
                $async$self._printResponse$1(t1);
              B.print("");
              handler.next$1(0, err);
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$onError$2, $async$completer);
    },
    _printResponse$1(response) {
      var t1 = response.requestOptions;
      B.print("uri: " + t1.get$uri().toString$0(0));
      B.print("statusCode: " + B.S(response.statusCode));
      if (response.isRedirect) {
        t1 = t1.get$uri();
        B.print("redirect: " + t1.toString$0(0));
      }
      B.print("headers:");
      response.headers.forEach$1(0, new A.LogInterceptor__printResponse_closure(this));
      B.print("");
    }
  };
  A.ResponseType.prototype = {
    _enumToString$0() {
      return "ResponseType." + this._core$_name;
    }
  };
  A.ListFormat.prototype = {
    _enumToString$0() {
      return "ListFormat." + this._core$_name;
    }
  };
  A.BaseOptions.prototype = {};
  A.OptionsMixin.prototype = {
    set$connectTimeout(value) {
      if (value != null && value._duration < 0)
        throw B.wrapException(B.StateError$("connectTimeout should be positive"));
      this.OptionsMixin__connectTimeout = value;
    },
    set$__OptionsMixin_queryParameters_A(__OptionsMixin_queryParameters_A) {
      this.OptionsMixin___OptionsMixin_queryParameters_A = type$.Map_String_dynamic._as(__OptionsMixin_queryParameters_A);
    }
  };
  A.Options.prototype = {};
  A.RequestOptions.prototype = {
    get$uri() {
      var t1, s, t2, query, _this = this,
        url = _this.path;
      if (!C.JSString_methods.startsWith$1(url, B.RegExp_RegExp("https?:", true))) {
        t1 = _this.OptionsMixin___OptionsMixin_baseUrl_A;
        t1 === $ && B.throwLateFieldNI("baseUrl");
        url = t1 + url;
        s = url.split(":/");
        t1 = s.length;
        if (t1 === 2) {
          if (0 >= t1)
            return B.ioore(s, 0);
          t2 = B.S(s[0]);
          if (1 >= t1)
            return B.ioore(s, 1);
          t1 = s[1];
          url = t2 + ":/" + B.stringReplaceAllUnchecked(t1, "//", "/");
        }
      }
      t1 = _this.OptionsMixin___OptionsMixin_queryParameters_A;
      t1 === $ && B.throwLateFieldNI("queryParameters");
      t2 = _this.___RequestConfig_listFormat_A;
      t2 === $ && B.throwLateFieldNI("listFormat");
      query = A.Transformer_urlEncodeMap(t1, t2);
      if (query.length !== 0)
        url += (C.JSString_methods.contains$1(url, "?") ? "&" : "?") + query;
      return B.Uri_parse(url, 0, null).normalizePath$0();
    },
    set$onReceiveProgress(onReceiveProgress) {
      this.onReceiveProgress = type$.nullable_void_Function_int_int._as(onReceiveProgress);
    },
    set$onSendProgress(onSendProgress) {
      this.onSendProgress = type$.nullable_void_Function_int_int._as(onSendProgress);
    },
    get$data(receiver) {
      return this.data;
    }
  };
  A._RequestConfig.prototype = {
    _RequestConfig$15$contentType$extra$followRedirects$headers$listFormat$maxRedirects$method$persistentConnection$receiveDataWhenStatusError$receiveTimeout$requestEncoder$responseDecoder$responseType$sendTimeout$validateStatus(contentType, extra, followRedirects, headers, listFormat, maxRedirects, method, persistentConnection, receiveDataWhenStatusError, receiveTimeout, requestEncoder, responseDecoder, responseType, sendTimeout, validateStatus) {
      var t3, contentTypeInHeader, _this = this,
        _s12_ = "content-type",
        t1 = type$.dynamic,
        t2 = type$.Map_String_dynamic;
      _this.set$___RequestConfig__headers_A(t2._as(A.caseInsensitiveKeyMap(type$.nullable_Map_String_dynamic._as(headers), t1)));
      t3 = _this.___RequestConfig__headers_A;
      t3 === $ && B.throwLateFieldNI("_headers");
      if (!t3.containsKey$1(0, _s12_) && _this._defaultContentType != null)
        _this.___RequestConfig__headers_A.$indexSet(0, _s12_, _this._defaultContentType);
      contentTypeInHeader = _this.___RequestConfig__headers_A.containsKey$1(0, _s12_);
      _this.___RequestConfig_method_A = method == null ? "GET" : method;
      _this.___RequestConfig_listFormat_A = listFormat == null ? D.ListFormat_4 : listFormat;
      _this.set$___RequestConfig_extra_A(t2._as(extra == null ? B.LinkedHashMap_LinkedHashMap$_empty(type$.String, t1) : extra));
      _this.___RequestConfig_followRedirects_A = followRedirects !== false;
      _this.___RequestConfig_maxRedirects_A = maxRedirects == null ? 5 : maxRedirects;
      _this.___RequestConfig_persistentConnection_A = persistentConnection !== false;
      _this.___RequestConfig_receiveDataWhenStatusError_A = receiveDataWhenStatusError !== false;
      t1 = validateStatus == null ? new A._RequestConfig_closure() : validateStatus;
      _this.set$___RequestConfig_validateStatus_A(type$.bool_Function_nullable_int._as(t1));
      _this.___RequestConfig_responseType_A = responseType == null ? D.ResponseType_0 : responseType;
      if (!contentTypeInHeader)
        _this.set$contentType(0, contentType);
    },
    get$method(_) {
      var t1 = this.___RequestConfig_method_A;
      t1 === $ && B.throwLateFieldNI("method");
      return t1;
    },
    set$contentType(_, contentType) {
      var t1,
        _s8_ = "_headers",
        _s12_ = "content-type",
        newContentType = contentType == null ? null : C.JSString_methods.trim$0(contentType);
      this._defaultContentType = newContentType;
      t1 = this.___RequestConfig__headers_A;
      if (newContentType != null) {
        t1 === $ && B.throwLateFieldNI(_s8_);
        t1.$indexSet(0, _s12_, newContentType);
      } else {
        t1 === $ && B.throwLateFieldNI(_s8_);
        t1.remove$1(0, _s12_);
      }
    },
    get$validateStatus() {
      var t1 = this.___RequestConfig_validateStatus_A;
      t1 === $ && B.throwLateFieldNI("validateStatus");
      return t1;
    },
    set$___RequestConfig__headers_A(___RequestConfig__headers_A) {
      this.___RequestConfig__headers_A = type$.Map_String_dynamic._as(___RequestConfig__headers_A);
    },
    set$___RequestConfig_validateStatus_A(___RequestConfig_validateStatus_A) {
      this.___RequestConfig_validateStatus_A = type$.bool_Function_nullable_int._as(___RequestConfig_validateStatus_A);
    },
    set$___RequestConfig_extra_A(___RequestConfig_extra_A) {
      this.___RequestConfig_extra_A = type$.Map_String_dynamic._as(___RequestConfig_extra_A);
    },
    validateStatus$1(arg0) {
      return this.get$validateStatus().call$1(arg0);
    }
  };
  A._BaseOptions__RequestConfig_OptionsMixin.prototype = {};
  A._RequestOptions__RequestConfig_OptionsMixin.prototype = {};
  A.Response.prototype = {
    toString$0(_) {
      var t1 = this.data;
      if (type$.Map_dynamic_dynamic._is(t1))
        return C.C_JsonCodec.encode$1(t1);
      return J.toString$0$(t1);
    },
    set$data(_, data) {
      this.data = this.$ti._eval$1("1?")._as(data);
    },
    get$data(receiver) {
      return this.data;
    }
  };
  A.Transformer.prototype = {};
  A.BackgroundTransformer.prototype = {};
  A.SyncTransformer.prototype = {
    transformResponse$2(options, response) {
      return this.transformResponse$body$SyncTransformer(options, response);
    },
    transformResponse$body$SyncTransformer(options, response) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, completer, t2, t3, stream, chunks, subscription, responseBytes, chunkOffset, _i, chunk, responseBody, _box_0, t1;
      var $async$transformResponse$2 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _box_0 = {};
              t1 = options.___RequestConfig_responseType_A;
              t1 === $ && B.throwLateFieldNI("responseType");
              if (t1 === D.ResponseType_1) {
                $async$returnValue = response;
                // goto return
                $async$goto = 1;
                break;
              }
              _box_0.received = _box_0.length = 0;
              t1 = new B._Future($.Zone__current, type$._Future_dynamic);
              completer = new B._AsyncCompleter(t1, type$._AsyncCompleter_dynamic);
              t2 = response.stream;
              t3 = type$.Uint8List;
              stream = B._instanceType(t2)._eval$1("StreamTransformer<Stream.T,Uint8List>")._as(A._StreamHandlerTransformer$(new A.SyncTransformer_transformResponse_closure(_box_0, false, options), t3, t3)).bind$1(t2);
              chunks = B._setArrayType([], type$.JSArray_Uint8List);
              _box_0.finalSize = 0;
              subscription = stream.listen$4$cancelOnError$onDone$onError(new A.SyncTransformer_transformResponse_closure0(_box_0, chunks), true, new A.SyncTransformer_transformResponse_closure1(completer), new A.SyncTransformer_transformResponse_closure2(completer));
              t2 = options.cancelToken;
              if (t2 != null)
                t2._cancel_token$_completer.future.then$1$1(new A.SyncTransformer_transformResponse_closure3(subscription), type$.void);
              $async$goto = 3;
              return B._asyncAwait(t1, $async$transformResponse$2);
            case 3:
              // returning from await.
              t1 = _box_0.finalSize;
              responseBytes = new Uint8Array(t1);
              for (t1 = chunks.length, chunkOffset = 0, _i = 0; _i < chunks.length; chunks.length === t1 || (0, B.throwConcurrentModificationError)(chunks), ++_i) {
                chunk = chunks[_i];
                C.NativeUint8List_methods.setAll$2(responseBytes, chunkOffset, chunk);
                chunkOffset += chunk.length;
              }
              if (options.___RequestConfig_responseType_A === D.ResponseType_3) {
                $async$returnValue = responseBytes;
                // goto return
                $async$goto = 1;
                break;
              }
              responseBody = !C.NativeUint8List_methods.get$isEmpty(responseBytes) ? C.C_Utf8Codec.decode$2$allowMalformed(0, responseBytes, true) : null;
              if (responseBody != null)
                if (responseBody.length !== 0)
                  if (options.___RequestConfig_responseType_A === D.ResponseType_0) {
                    t1 = response.headers.$index(0, "content-type");
                    t1 = A.Transformer_isJsonMimeType(t1 == null ? null : J.get$first$ax(t1));
                  } else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
              if (t1) {
                $async$returnValue = $async$self.jsonDecodeCallback.call$1(responseBody);
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = responseBody;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$transformResponse$2, $async$completer);
    }
  };
  A.CupertinoSwitch.prototype = {
    createState$0() {
      return new A._CupertinoSwitchState(null, null, C._StateLifecycle_0);
    }
  };
  A._CupertinoSwitchState.prototype = {
    initState$0() {
      var t1, t2, _this = this, _null = null;
      _this.super$State$initState();
      t1 = B.TapGestureRecognizer$(_null, _null);
      t1.set$onTapDown(_this.get$_switch$_handleTapDown());
      t1.set$onTapUp(_this.get$_switch$_handleTapUp());
      t1.set$onTap(_this.get$_switch$_handleTap());
      t1.set$onTapCancel(_this.get$_switch$_handleTapCancel());
      _this.___CupertinoSwitchState__tap_A = t1;
      t1 = B.HorizontalDragGestureRecognizer$(_null, _null);
      t1.set$onStart(0, _this.get$_switch$_handleDragStart());
      t1.set$onUpdate(_this.get$_switch$_handleDragUpdate());
      t1.set$onEnd(0, _this.get$_switch$_handleDragEnd());
      t2 = _this._widget;
      t2.toString;
      t1.dragStartBehavior = C.DragStartBehavior_1;
      _this.___CupertinoSwitchState__drag_A = t1;
      t1 = B.AnimationController$(_null, C.Duration_200000, _null, t2.value ? 1 : 0, _this);
      _this.___CupertinoSwitchState__positionController_A = t1;
      _this.___CupertinoSwitchState_position_A = B.CurvedAnimation$(C.C__Linear, t1, _null);
      t1 = B.AnimationController$(_null, C.Duration_300000, _null, _null, _this);
      _this.___CupertinoSwitchState__reactionController_A = t1;
      _this.set$___CupertinoSwitchState__reaction_A(type$.Animation_double._as(B.CurvedAnimation$(C.Cubic_JUR0, t1, _null)));
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, _this = this;
      type$.CupertinoSwitch._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = _this.___CupertinoSwitchState__drag_A;
      t1 === $ && B.throwLateFieldNI("_drag");
      t2 = _this._widget;
      t2.toString;
      t1.dragStartBehavior = C.DragStartBehavior_1;
      t1 = _this.needsPositionAnimation;
      if (t1 || oldWidget.value !== t2.value)
        _this._resumePositionAnimation$1$isLinear(t1);
    },
    _resumePositionAnimation$1$isLinear(isLinear) {
      var t1, t2, _this = this,
        _s19_ = "_positionController";
      _this.needsPositionAnimation = false;
      t1 = _this.___CupertinoSwitchState_position_A;
      t1 === $ && B.throwLateFieldNI("position");
      t1.curve = isLinear ? C.C__Linear : C.Cubic_JUR0;
      t1.reverseCurve = isLinear ? C.C__Linear : new B.FlippedCurve(C.Cubic_JUR0);
      t1 = _this._widget.value;
      t2 = _this.___CupertinoSwitchState__positionController_A;
      if (t1) {
        t2 === $ && B.throwLateFieldNI(_s19_);
        t2.forward$0(0);
      } else {
        t2 === $ && B.throwLateFieldNI(_s19_);
        t2.reverse$0(0);
      }
    },
    _resumePositionAnimation$0() {
      return this._resumePositionAnimation$1$isLinear(true);
    },
    _switch$_handleTapDown$1(details) {
      var t1;
      this._widget.toString;
      this.needsPositionAnimation = false;
      t1 = this.___CupertinoSwitchState__reactionController_A;
      t1 === $ && B.throwLateFieldNI("_reactionController");
      t1.forward$0(0);
    },
    _switch$_handleTap$0() {
      var t1 = this._widget;
      t1.onChanged.call$1(!t1.value);
      this._emitVibration$0();
    },
    _switch$_handleTapUp$1(details) {
      var t1;
      this._widget.toString;
      this.needsPositionAnimation = false;
      t1 = this.___CupertinoSwitchState__reactionController_A;
      t1 === $ && B.throwLateFieldNI("_reactionController");
      t1.reverse$0(0);
    },
    _switch$_handleTapCancel$0() {
      this._widget.toString;
      var t1 = this.___CupertinoSwitchState__reactionController_A;
      t1 === $ && B.throwLateFieldNI("_reactionController");
      t1.reverse$0(0);
    },
    _switch$_handleDragStart$1(details) {
      var t1, _this = this;
      _this._widget.toString;
      _this.needsPositionAnimation = false;
      t1 = _this.___CupertinoSwitchState__reactionController_A;
      t1 === $ && B.throwLateFieldNI("_reactionController");
      t1.forward$0(0);
      _this._emitVibration$0();
    },
    _switch$_handleDragUpdate$1(details) {
      var t1, delta, t2, _this = this,
        _s19_ = "_positionController";
      _this._widget.toString;
      t1 = _this.___CupertinoSwitchState_position_A;
      t1 === $ && B.throwLateFieldNI("position");
      t1.reverseCurve = t1.curve = C.C__Linear;
      t1 = details.primaryDelta;
      t1.toString;
      delta = t1 / 20;
      t1 = _this._framework$_element.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      switch (t1.textDirection.index) {
        case 0:
          t1 = _this.___CupertinoSwitchState__positionController_A;
          t1 === $ && B.throwLateFieldNI(_s19_);
          t2 = t1.__AnimationController__value_A;
          t2 === $ && B.throwLateFieldNI("_value");
          t1.set$value(0, t2 - delta);
          break;
        case 1:
          t1 = _this.___CupertinoSwitchState__positionController_A;
          t1 === $ && B.throwLateFieldNI(_s19_);
          t2 = t1.__AnimationController__value_A;
          t2 === $ && B.throwLateFieldNI("_value");
          t1.set$value(0, t2 + delta);
          break;
      }
    },
    _switch$_handleDragEnd$1(details) {
      var t1, t2, t3, _this = this;
      _this.setState$1(new A._CupertinoSwitchState__handleDragEnd_closure(_this));
      t1 = _this.___CupertinoSwitchState_position_A;
      t1 === $ && B.throwLateFieldNI("position");
      t1 = t1.get$value(t1);
      t2 = _this._widget;
      t3 = t2.value;
      if (t1 >= 0.5 !== t3)
        t2.onChanged.call$1(!t3);
      t1 = _this.___CupertinoSwitchState__reactionController_A;
      t1 === $ && B.throwLateFieldNI("_reactionController");
      t1.reverse$0(0);
    },
    _emitVibration$0() {
      switch (B.defaultTargetPlatform().index) {
        case 2:
          A.HapticFeedback_lightImpact();
          break;
        case 0:
        case 1:
        case 3:
        case 4:
        case 5:
          break;
      }
    },
    build$1(context) {
      var t1, t2, t3, t4, t5, t6, _this = this, _null = null;
      if (_this.needsPositionAnimation)
        _this._resumePositionAnimation$0();
      t1 = _this._widget;
      t2 = t1.value;
      t3 = t1.activeColor;
      t4 = t1.trackColor;
      t5 = t1.thumbColor;
      t1 = t1.onChanged;
      t6 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t6.toString;
      return B.MouseRegion$(B.Opacity$(new A._CupertinoSwitchRenderObjectWidget(t2, t3, t4, t5, t1, _this, t6.textDirection, _null), 1), C.SystemMouseCursor_click, _null, _null, _null, _null);
    },
    dispose$0() {
      var _this = this,
        t1 = _this.___CupertinoSwitchState__tap_A;
      t1 === $ && B.throwLateFieldNI("_tap");
      t1._stopTimer$0();
      t1.super$OneSequenceGestureRecognizer$dispose();
      t1 = _this.___CupertinoSwitchState__drag_A;
      t1 === $ && B.throwLateFieldNI("_drag");
      t1._velocityTrackers.clear$0(0);
      t1.super$OneSequenceGestureRecognizer$dispose();
      t1 = _this.___CupertinoSwitchState__positionController_A;
      t1 === $ && B.throwLateFieldNI("_positionController");
      t1.dispose$0();
      t1 = _this.___CupertinoSwitchState__reactionController_A;
      t1 === $ && B.throwLateFieldNI("_reactionController");
      t1.dispose$0();
      _this.super$__CupertinoSwitchState_State_TickerProviderStateMixin$dispose();
    },
    set$___CupertinoSwitchState__reaction_A(___CupertinoSwitchState__reaction_A) {
      this.___CupertinoSwitchState__reaction_A = type$.Animation_double._as(___CupertinoSwitchState__reaction_A);
    },
    $isTickerProvider: 1
  };
  A._CupertinoSwitchRenderObjectWidget.prototype = {
    createRenderObject$1(context) {
      var t3, t4, _this = this,
        t1 = _this.state,
        t2 = new A._RenderCupertinoSwitch(t1, _this.value, _this.activeColor, _this.trackColor, new A.CupertinoThumbPainter(_this.thumbColor, D.List_CQc), _this.onChanged, _this.textDirection, B.LayerHandle$(type$.ClipRRectLayer), D.BoxConstraints_59_59_39_39, null, B.LayerHandle$(type$.ContainerLayer));
      t2.RenderObject$0();
      t2.set$child(null);
      t3 = t1.___CupertinoSwitchState_position_A;
      t3 === $ && B.throwLateFieldNI("position");
      t4 = type$.void_Function._as(t2.get$markNeedsPaint());
      t3.parent.addListener$1(0, t4);
      t1 = t1.___CupertinoSwitchState__reaction_A;
      t1 === $ && B.throwLateFieldNI("_reaction");
      t1.parent.addListener$1(0, t4);
      return t2;
    },
    updateRenderObject$2(context, renderObject) {
      var _this = this;
      type$._RenderCupertinoSwitch._as(renderObject);
      renderObject.set$value(0, _this.value);
      renderObject.set$activeColor(_this.activeColor);
      renderObject.set$trackColor(_this.trackColor);
      renderObject.set$thumbColor(_this.thumbColor);
      renderObject.set$onChanged(_this.onChanged);
      renderObject.set$textDirection(_this.textDirection);
    }
  };
  A._RenderCupertinoSwitch.prototype = {
    set$value(_, value) {
      if (value === this._switch$_value)
        return;
      this._switch$_value = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$activeColor(value) {
      if (value.$eq(0, this._switch$_activeColor))
        return;
      this._switch$_activeColor = value;
      this.markNeedsPaint$0();
    },
    set$trackColor(value) {
      if (value.$eq(0, this._switch$_trackColor))
        return;
      this._switch$_trackColor = value;
      this.markNeedsPaint$0();
    },
    set$thumbColor(value) {
      if (value.$eq(0, this._thumbPainter.color))
        return;
      this._thumbPainter = new A.CupertinoThumbPainter(value, D.List_CQc);
      this.markNeedsPaint$0();
    },
    set$onChanged(value) {
      type$.nullable_void_Function_bool._as(value);
      if (J.$eq$(value, this._onChanged))
        return;
      this.set$_onChanged(value);
    },
    set$textDirection(value) {
      if (this._switch$_textDirection === value)
        return;
      this._switch$_textDirection = value;
      this.markNeedsPaint$0();
    },
    hitTestSelf$1(position) {
      return true;
    },
    handleEvent$2($event, entry) {
      var t1, t2;
      type$.BoxHitTestEntry._as(entry);
      if (type$.PointerDownEvent._is($event) && true) {
        t1 = this._switch$_state;
        t2 = t1.___CupertinoSwitchState__drag_A;
        t2 === $ && B.throwLateFieldNI("_drag");
        t2.addPointer$1($event);
        t1 = t1.___CupertinoSwitchState__tap_A;
        t1 === $ && B.throwLateFieldNI("_tap");
        t1.addPointer$1($event);
      }
    },
    describeSemanticsConfiguration$1(config) {
      var t1;
      this.super$RenderObject$describeSemanticsConfiguration(config);
      config.set$onTap(this._switch$_state.get$_switch$_handleTap());
      config._setFlag$2(C.SemanticsFlag_64, true);
      config._setFlag$2(C.SemanticsFlag_128, true);
      t1 = this._switch$_value;
      config._setFlag$2(C.SemanticsFlag_65536, true);
      config._setFlag$2(C.SemanticsFlag_131072, t1);
    },
    paint$2(context, offset) {
      var currentValue, currentReactionValue, visualPosition, paint, t3, trackRRect, currentThumbExtension, t4, thumbCenterY, thumbBounds, _this = this,
        canvas = context.get$canvas(context),
        t1 = _this._switch$_state,
        t2 = t1.___CupertinoSwitchState_position_A;
      t2 === $ && B.throwLateFieldNI("position");
      currentValue = t2.get$value(t2);
      t1 = t1.___CupertinoSwitchState__reaction_A;
      t1 === $ && B.throwLateFieldNI("_reaction");
      currentReactionValue = t1.get$value(t1);
      switch (_this._switch$_textDirection.index) {
        case 0:
          visualPosition = 1 - currentValue;
          break;
        case 1:
          visualPosition = currentValue;
          break;
        default:
          visualPosition = null;
      }
      paint = $.$get$_renderer().createPaint$0();
      t1 = B.Color_lerp(_this._switch$_trackColor, _this._switch$_activeColor, currentValue);
      t1.toString;
      paint.set$color(0, t1);
      t1 = _this._size;
      t2 = offset._dx + (t1._dx - 51) / 2;
      t3 = offset._dy;
      t1 = t3 + (t1._dy - 31) / 2;
      trackRRect = B.RRect$fromRectAndRadius(new B.Rect(t2, t1, t2 + 51, t1 + 31), D.Radius_2Vk);
      canvas.drawRRect$2(trackRRect, paint);
      currentThumbExtension = 7 * currentReactionValue;
      t1 = t2 + 15.5;
      t2 += 35.5;
      t4 = B.lerpDouble(t1 - 14, t2 - 14 - currentThumbExtension, visualPosition);
      t4.toString;
      t2 = B.lerpDouble(t1 + 14 + currentThumbExtension, t2 + 14, visualPosition);
      t2.toString;
      thumbCenterY = t3 + _this._size._dy / 2;
      thumbBounds = new B.Rect(t4, thumbCenterY - 14, t2, thumbCenterY + 14);
      t2 = _this._clipRRectLayer;
      t4 = _this.__RenderObject__needsCompositing_A;
      t4 === $ && B.throwLateFieldNI("_needsCompositing");
      t2.set$layer(0, context.pushClipRRect$6$oldLayer(t4, C.Offset_0_0, thumbBounds, trackRRect, new A._RenderCupertinoSwitch_paint_closure(_this, thumbBounds), t2._layer));
    },
    dispose$0() {
      this._clipRRectLayer.set$layer(0, null);
      this.super$RenderObject$dispose();
    },
    set$_onChanged(_onChanged) {
      this._onChanged = type$.nullable_void_Function_bool._as(_onChanged);
    }
  };
  A.__CupertinoSwitchState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    }
  };
  A.CupertinoThumbPainter.prototype = {
    paint$2(canvas, rect) {
      var _i, shadow, t2, result, t3,
        t1 = rect.get$shortestSide() / 2,
        rrect = B.RRect$fromRectAndRadius(rect, new B.Radius(t1, t1));
      for (t1 = this.shadows, _i = 0; _i < 2; ++_i) {
        shadow = t1[_i];
        t2 = rrect.shift$1(shadow.offset);
        result = $.$get$_renderer().createPaint$0();
        result.set$color(0, shadow.color);
        t3 = shadow.blurRadius;
        t3 = t3 > 0 ? t3 * 0.57735 + 0.5 : 0;
        result.set$maskFilter(new B.MaskFilter(shadow.blurStyle, t3));
        canvas.drawRRect$2(t2, result);
      }
      t1 = rrect.inflate$1(0.5);
      t2 = $.$get$_renderer();
      t3 = t2.createPaint$0();
      t3.set$color(0, N.Color_167772160);
      canvas.drawRRect$2(t1, t3);
      t2 = t2.createPaint$0();
      t2.set$color(0, this.color);
      canvas.drawRRect$2(rrect, t2);
    }
  };
  A.DecorationImage.prototype = {
    createPainter$1(onChanged) {
      return new A.DecorationImagePainter(this, type$.void_Function._as(onChanged));
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== B.getRuntimeType(this))
        return false;
      if (other instanceof A.DecorationImage)
        if (D.NetworkImage_Sdp.$eq(0, D.NetworkImage_Sdp))
          if (C.Alignment_0_0.$eq(0, C.Alignment_0_0))
            t1 = true;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return B.Object_hash(D.NetworkImage_Sdp, null, H.BoxFit_2, C.Alignment_0_0, null, H.ImageRepeat_3, false, 1, 1, C.FilterQuality_1, false, false, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = B._setArrayType([D.NetworkImage_Sdp.toString$0(0)], type$.JSArray_String),
        t2 = true;
      if (t2)
        t1.push(H.BoxFit_2.toString$0(0));
      t1.push(C.Alignment_0_0.toString$0(0));
      t1.push("scale 1");
      t1.push("opacity 1");
      t1.push(C.FilterQuality_1.toString$0(0));
      return "DecorationImage(" + C.JSArray_methods.join$1(t1, ", ") + ")";
    }
  };
  A.DecorationImagePainter.prototype = {
    paint$4(canvas, rect, clipPath, configuration) {
      var t2, t3, t4, listener, _this = this, _null = null,
        newImageStream = D.NetworkImage_Sdp.resolve$1(configuration),
        t1 = newImageStream._image_stream$_completer;
      if (t1 == null)
        t1 = newImageStream;
      t2 = _this._decoration_image$_imageStream;
      t3 = t2 == null;
      if (t3)
        t4 = _null;
      else {
        t4 = t2._image_stream$_completer;
        if (t4 == null)
          t4 = t2;
      }
      if (t1 !== t4) {
        listener = new B.ImageStreamListener(_this.get$_handleImage(), _null, _null);
        if (!t3)
          t2.removeListener$1(0, listener);
        _this._decoration_image$_imageStream = newImageStream;
        newImageStream.addListener$1(0, listener);
      }
      if (_this._decoration_image$_image == null)
        return;
      t1 = clipPath != null;
      if (t1) {
        canvas.save$0(0);
        canvas.clipPath$1(0, clipPath);
      }
      t2 = _this._decoration_image$_image;
      t3 = t2.image;
      F.paintImage(C.Alignment_0_0, canvas, _null, _null, t2.debugLabel, C.FilterQuality_1, H.BoxFit_2, false, t3, false, false, 1, rect, H.ImageRepeat_3, t2.scale);
      if (t1)
        canvas.restore$0(0);
    },
    _handleImage$2(value, synchronousCall) {
      var t1, _this = this;
      type$.ImageInfo._as(value);
      B._asBool(synchronousCall);
      if (J.$eq$(_this._decoration_image$_image, value))
        return;
      t1 = _this._decoration_image$_image;
      if (t1 != null)
        if (value.image.isCloneOf$1(t1.image))
          t1 = value.debugLabel == t1.debugLabel;
        else
          t1 = false;
      else
        t1 = false;
      if (t1) {
        value.image.dispose$0();
        return;
      }
      t1 = _this._decoration_image$_image;
      if (t1 != null)
        t1.image.dispose$0();
      _this._decoration_image$_image = value;
      if (!synchronousCall)
        _this._decoration_image$_onChanged.call$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this._decoration_image$_imageStream;
      if (t1 != null)
        t1.removeListener$1(0, new B.ImageStreamListener(_this.get$_handleImage(), null, null));
      t1 = _this._decoration_image$_image;
      if (t1 != null)
        t1.image.dispose$0();
      _this._decoration_image$_image = null;
    },
    toString$0(_) {
      return "DecorationImagePainter(stream: " + B.S(this._decoration_image$_imageStream) + ", image: " + B.S(this._decoration_image$_image) + ") for " + this._details.toString$0(0);
    }
  };
  A.SliverGridGeometry.prototype = {
    getBoxConstraints$1(constraints) {
      var t1 = this.mainAxisExtent;
      return constraints.asBoxConstraints$3$crossAxisExtent$maxExtent$minExtent(this.crossAxisExtent, t1, t1);
    },
    toString$0(_) {
      var _this = this;
      return "SliverGridGeometry(" + C.JSArray_methods.join$1(B._setArrayType(["scrollOffset: " + B.S(_this.scrollOffset), "crossAxisOffset: " + B.S(_this.crossAxisOffset), "mainAxisExtent: " + B.S(_this.mainAxisExtent), "crossAxisExtent: " + B.S(_this.crossAxisExtent)], type$.JSArray_String), ", ") + ")";
    }
  };
  A.SliverGridLayout.prototype = {};
  A.SliverGridRegularTileLayout.prototype = {
    getMaxChildIndexForScrollOffset$1(scrollOffset) {
      var t1 = this.mainAxisStride;
      if (t1 > 0)
        return Math.max(0, this.crossAxisCount * C.JSNumber_methods.ceil$0(scrollOffset / t1) - 1);
      return 0;
    },
    _getOffsetFromStartInCrossAxis$1(crossAxisStart) {
      var t1, t2, _this = this;
      if (_this.reverseCrossAxis) {
        t1 = _this.crossAxisStride;
        t2 = _this.childCrossAxisExtent;
        return _this.crossAxisCount * t1 - crossAxisStart - t2 - (t1 - t2);
      }
      return crossAxisStart;
    },
    getGeometryForChildIndex$1(index) {
      var _this = this,
        t1 = _this.crossAxisCount,
        t2 = C.JSInt_methods.$mod(index, t1);
      return new A.SliverGridGeometry(C.JSInt_methods.$tdiv(index, t1) * _this.mainAxisStride, _this._getOffsetFromStartInCrossAxis$1(t2 * _this.crossAxisStride), _this.childMainAxisExtent, _this.childCrossAxisExtent);
    },
    computeMaxScrollOffset$1(childCount) {
      var t1 = this.mainAxisStride;
      return t1 * (C.JSInt_methods.$tdiv(childCount - 1, this.crossAxisCount) + 1) - (t1 - this.childMainAxisExtent);
    }
  };
  A.SliverGridDelegate.prototype = {};
  A.SliverGridDelegateWithMaxCrossAxisExtent.prototype = {
    getLayout$1(constraints) {
      var t1 = constraints.crossAxisExtent,
        crossAxisCount = Math.max(1, C.JSNumber_methods.ceil$0(t1 / 420)),
        childCrossAxisExtent = Math.max(0, t1 - 20 * (crossAxisCount - 1)) / crossAxisCount,
        childMainAxisExtent = childCrossAxisExtent / 2;
      return new A.SliverGridRegularTileLayout(crossAxisCount, childMainAxisExtent + 30, childCrossAxisExtent + 20, childMainAxisExtent, childCrossAxisExtent, B.axisDirectionIsReversed(constraints.crossAxisDirection));
    }
  };
  A.SliverGridParentData.prototype = {
    toString$0(_) {
      return "crossAxisOffset=" + B.S(this.crossAxisOffset) + "; " + this.super$SliverMultiBoxAdaptorParentData$toString(0);
    }
  };
  A.RenderSliverGrid.prototype = {
    setupParentData$1(child) {
      if (!(child.parentData instanceof A.SliverGridParentData))
        child.parentData = new A.SliverGridParentData(false, null, null);
    },
    set$gridDelegate(value) {
      var t1, _this = this;
      if (_this._gridDelegate === value)
        return;
      if (B.getRuntimeType(value) === B.getRuntimeType(_this._gridDelegate))
        t1 = false;
      else
        t1 = true;
      if (t1)
        _this.markNeedsLayout$0();
      _this._gridDelegate = value;
    },
    childCrossAxisPosition$1(child) {
      var t1 = child.parentData;
      t1.toString;
      t1 = type$.SliverGridParentData._as(t1).crossAxisOffset;
      t1.toString;
      return t1;
    },
    performLayout$0() {
      var t2, scrollOffset, targetEndScrollOffset, layout, t3, firstIndex, targetLastIndex, t4, t5, t6, leadingGarbage, firstChildGridGeometry, max, leadingScrollOffset, trailingScrollOffset, index, trailingChildWithLayout, gridGeometry, child, t7, t8, t9, t10, t11, estimatedTotalExtent, paintExtent, cacheExtent, _this = this, _null = null,
        constraints = type$.SliverConstraints._as(B.RenderObject.prototype.get$constraints.call(_this)),
        t1 = _this._childManager;
      t1._didUnderflow = false;
      t2 = constraints.scrollOffset;
      scrollOffset = t2 + constraints.cacheOrigin;
      targetEndScrollOffset = scrollOffset + constraints.remainingCacheExtent;
      layout = _this._gridDelegate.getLayout$1(constraints);
      t3 = layout.mainAxisStride;
      firstIndex = t3 > 1e-10 ? layout.crossAxisCount * C.JSNumber_methods.$tdiv(scrollOffset, t3) : 0;
      targetLastIndex = isFinite(targetEndScrollOffset) ? layout.getMaxChildIndexForScrollOffset$1(targetEndScrollOffset) : _null;
      t3 = _this.ContainerRenderObjectMixin__firstChild;
      if (t3 != null) {
        t4 = type$.RenderBox;
        t3 = t4._as(t3).parentData;
        t3.toString;
        t5 = type$.SliverMultiBoxAdaptorParentData;
        t3 = t5._as(t3).index;
        t3.toString;
        t6 = _this.ContainerRenderObjectMixin__lastChild;
        t6.toString;
        t6 = t4._as(t6).parentData;
        t6.toString;
        t6 = t5._as(t6).index;
        t6.toString;
        leadingGarbage = C.JSInt_methods.clamp$2(firstIndex - t3, 0, _this.ContainerRenderObjectMixin__childCount);
        _this.collectGarbage$2(leadingGarbage, targetLastIndex == null ? 0 : C.JSInt_methods.clamp$2(t6 - targetLastIndex, 0, _this.ContainerRenderObjectMixin__childCount));
      } else
        _this.collectGarbage$2(0, 0);
      firstChildGridGeometry = layout.getGeometryForChildIndex$1(firstIndex);
      if (_this.ContainerRenderObjectMixin__firstChild == null)
        if (!_this.addInitialChild$2$index$layoutOffset(firstIndex, firstChildGridGeometry.scrollOffset)) {
          max = layout.computeMaxScrollOffset$1(t1.get$childCount());
          _this._geometry = F.SliverGeometry$(_null, false, _null, _null, max, 0, 0, max, _null);
          t1.didFinishLayout$0();
          return;
        }
      leadingScrollOffset = firstChildGridGeometry.scrollOffset;
      trailingScrollOffset = leadingScrollOffset + firstChildGridGeometry.mainAxisExtent;
      t3 = _this.ContainerRenderObjectMixin__firstChild;
      t3.toString;
      t4 = type$.RenderBox;
      t3 = t4._as(t3).parentData;
      t3.toString;
      t5 = type$.SliverMultiBoxAdaptorParentData;
      t3 = t5._as(t3).index;
      t3.toString;
      index = t3 - 1;
      t3 = type$.SliverGridParentData;
      trailingChildWithLayout = _null;
      for (; index >= firstIndex; --index) {
        gridGeometry = layout.getGeometryForChildIndex$1(index);
        t6 = gridGeometry.mainAxisExtent;
        child = _this.insertAndLayoutLeadingChild$1(constraints.asBoxConstraints$3$crossAxisExtent$maxExtent$minExtent(gridGeometry.crossAxisExtent, t6, t6));
        t7 = child.parentData;
        t7.toString;
        t3._as(t7);
        t8 = gridGeometry.scrollOffset;
        t7.layoutOffset = t8;
        t7.crossAxisOffset = gridGeometry.crossAxisOffset;
        if (trailingChildWithLayout == null)
          trailingChildWithLayout = child;
        trailingScrollOffset = Math.max(trailingScrollOffset, t8 + t6);
      }
      if (trailingChildWithLayout == null) {
        t6 = _this.ContainerRenderObjectMixin__firstChild;
        t6.toString;
        t6.layout$1(firstChildGridGeometry.getBoxConstraints$1(constraints));
        trailingChildWithLayout = _this.ContainerRenderObjectMixin__firstChild;
        t6 = trailingChildWithLayout.parentData;
        t6.toString;
        t3._as(t6);
        t6.layoutOffset = leadingScrollOffset;
        t6.crossAxisOffset = firstChildGridGeometry.crossAxisOffset;
      }
      t6 = trailingChildWithLayout.parentData;
      t6.toString;
      t6 = t5._as(t6).index;
      t6.toString;
      index = t6 + 1;
      t6 = B._instanceType(_this);
      t7 = t6._eval$1("ContainerRenderObjectMixin.0");
      t6 = t6._eval$1("ContainerRenderObjectMixin.1");
      t8 = targetLastIndex != null;
      while (true) {
        if (!(!t8 || index <= targetLastIndex))
          break;
        gridGeometry = layout.getGeometryForChildIndex$1(index);
        t9 = gridGeometry.mainAxisExtent;
        t10 = constraints.asBoxConstraints$3$crossAxisExtent$maxExtent$minExtent(gridGeometry.crossAxisExtent, t9, t9);
        t11 = t7._as(trailingChildWithLayout).parentData;
        t11.toString;
        child = t6._as(t11).ContainerParentDataMixin_nextSibling;
        if (child != null) {
          t11 = child.parentData;
          t11.toString;
          t11 = t5._as(t11).index;
          t11.toString;
          t11 = t11 !== index;
        } else
          t11 = true;
        if (t11) {
          child = _this.insertAndLayoutChild$2$after(t10, trailingChildWithLayout);
          if (child == null)
            break;
        } else
          child.layout$1(t10);
        t10 = child.parentData;
        t10.toString;
        t3._as(t10);
        t11 = gridGeometry.scrollOffset;
        t10.layoutOffset = t11;
        t10.crossAxisOffset = gridGeometry.crossAxisOffset;
        trailingScrollOffset = Math.max(trailingScrollOffset, t11 + t9);
        ++index;
        trailingChildWithLayout = child;
      }
      t3 = _this.ContainerRenderObjectMixin__lastChild;
      t3.toString;
      t3 = t4._as(t3).parentData;
      t3.toString;
      t3 = t5._as(t3).index;
      t3.toString;
      estimatedTotalExtent = t1.estimateMaxScrollOffset$5$firstIndex$lastIndex$leadingScrollOffset$trailingScrollOffset(constraints, firstIndex, t3, leadingScrollOffset, trailingScrollOffset);
      paintExtent = _this.calculatePaintOffset$3$from$to(constraints, Math.min(t2, leadingScrollOffset), trailingScrollOffset);
      cacheExtent = _this.calculateCacheOffset$3$from$to(constraints, leadingScrollOffset, trailingScrollOffset);
      _this._geometry = F.SliverGeometry$(cacheExtent, estimatedTotalExtent > paintExtent || t2 > 0 || constraints.overlap !== 0, _null, _null, estimatedTotalExtent, paintExtent, 0, estimatedTotalExtent, _null);
      if (estimatedTotalExtent === trailingScrollOffset)
        t1._didUnderflow = true;
      t1.didFinishLayout$0();
    }
  };
  A.NeverScrollableScrollPhysics.prototype = {
    applyTo$1(ancestor) {
      return new A.NeverScrollableScrollPhysics(this.buildParent$1(ancestor));
    },
    shouldAcceptUserOffset$1(position) {
      return false;
    }
  };
  A.GridView.prototype = {
    buildChildLayout$1(context) {
      return new A.SliverGrid(this.gridDelegate, this.childrenDelegate, null);
    }
  };
  A.SliverGrid.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderSliverGrid(this.gridDelegate, type$.SliverMultiBoxAdaptorElement._as(context), B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.RenderBox), 0, null, null, B.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$.RenderSliverGrid._as(renderObject).set$gridDelegate(this.gridDelegate);
    },
    estimateMaxScrollOffset$5(constraints, firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset) {
      var t1;
      this.super$SliverMultiBoxAdaptorWidget$estimateMaxScrollOffset(constraints, firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset);
      t1 = this.gridDelegate.getLayout$1(constraints).computeMaxScrollOffset$1(this.delegate.get$estimatedChildCount());
      return t1;
    }
  };
  A.NetListBean.prototype = {
    toJson$0() {
      var _this = this,
        _s9_ = "imagePath",
        _s9_0 = "isVisible",
        data = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.__NetListBean_desc_A;
      t1 === $ && B.throwLateFieldNI("desc");
      data.$indexSet(0, "desc", t1);
      t1 = _this.__NetListBean_id_A;
      t1 === $ && B.throwLateFieldNI("id");
      data.$indexSet(0, "id", t1);
      t1 = _this.__NetListBean_imagePath_A;
      t1 === $ && B.throwLateFieldNI(_s9_);
      data.$indexSet(0, _s9_, t1);
      t1 = _this.__NetListBean_isVisible_A;
      t1 === $ && B.throwLateFieldNI(_s9_0);
      data.$indexSet(0, _s9_0, t1);
      t1 = _this.__NetListBean_order_A;
      t1 === $ && B.throwLateFieldNI("order");
      data.$indexSet(0, "order", t1);
      t1 = _this.__NetListBean_title_A;
      t1 === $ && B.throwLateFieldNI("title");
      data.$indexSet(0, "title", t1);
      t1 = _this.__NetListBean_type_A;
      t1 === $ && B.throwLateFieldNI("type");
      data.$indexSet(0, "type", t1);
      t1 = _this.__NetListBean_url_A;
      t1 === $ && B.throwLateFieldNI("url");
      data.$indexSet(0, "url", t1);
      return data;
    },
    get$title(_) {
      var t1 = this.__NetListBean_title_A;
      t1 === $ && B.throwLateFieldNI("title");
      return t1;
    }
  };
  A.NetObjectBean.prototype = {
    toJson$0() {
      return A.$NetObjectBeanToJson(this);
    },
    set$__NetObjectBean_datas_A(__NetObjectBean_datas_A) {
      this.__NetObjectBean_datas_A = type$.List_NetObjectDatas._as(__NetObjectBean_datas_A);
    }
  };
  A.NetObjectDatas.prototype = {
    toJson$0() {
      var _this = this,
        _s9_ = "chapterId",
        _s11_ = "chapterName",
        _s8_ = "courseId",
        _s11_0 = "envelopePic",
        _s8_0 = "niceDate",
        _s13_ = "niceShareDate",
        _s11_1 = "projectLink",
        _s11_2 = "publishTime",
        _s18_ = "realSuperChapterId",
        _s11_3 = "selfVisible",
        _s9_0 = "shareDate",
        _s9_1 = "shareUser",
        _s14_ = "superChapterId",
        _s16_ = "superChapterName",
        data = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic),
        t1 = _this.__NetObjectDatas_apkLink_A;
      t1 === $ && B.throwLateFieldNI("apkLink");
      data.$indexSet(0, "apkLink", t1);
      t1 = _this.__NetObjectDatas_audit_A;
      t1 === $ && B.throwLateFieldNI("audit");
      data.$indexSet(0, "audit", t1);
      t1 = _this.__NetObjectDatas_author_A;
      t1 === $ && B.throwLateFieldNI("author");
      data.$indexSet(0, "author", t1);
      t1 = _this.__NetObjectDatas_canEdit_A;
      t1 === $ && B.throwLateFieldNI("canEdit");
      data.$indexSet(0, "canEdit", t1);
      t1 = _this.__NetObjectDatas_chapterId_A;
      t1 === $ && B.throwLateFieldNI(_s9_);
      data.$indexSet(0, _s9_, t1);
      t1 = _this.__NetObjectDatas_chapterName_A;
      t1 === $ && B.throwLateFieldNI(_s11_);
      data.$indexSet(0, _s11_, t1);
      t1 = _this.__NetObjectDatas_collect_A;
      t1 === $ && B.throwLateFieldNI("collect");
      data.$indexSet(0, "collect", t1);
      t1 = _this.__NetObjectDatas_courseId_A;
      t1 === $ && B.throwLateFieldNI(_s8_);
      data.$indexSet(0, _s8_, t1);
      t1 = _this.__NetObjectDatas_desc_A;
      t1 === $ && B.throwLateFieldNI("desc");
      data.$indexSet(0, "desc", t1);
      t1 = _this.__NetObjectDatas_descMd_A;
      t1 === $ && B.throwLateFieldNI("descMd");
      data.$indexSet(0, "descMd", t1);
      t1 = _this.__NetObjectDatas_envelopePic_A;
      t1 === $ && B.throwLateFieldNI(_s11_0);
      data.$indexSet(0, _s11_0, t1);
      t1 = _this.__NetObjectDatas_fresh_A;
      t1 === $ && B.throwLateFieldNI("fresh");
      data.$indexSet(0, "fresh", t1);
      t1 = _this.__NetObjectDatas_host_A;
      t1 === $ && B.throwLateFieldNI("host");
      data.$indexSet(0, "host", t1);
      t1 = _this.__NetObjectDatas_id_A;
      t1 === $ && B.throwLateFieldNI("id");
      data.$indexSet(0, "id", t1);
      t1 = _this.__NetObjectDatas_link_A;
      t1 === $ && B.throwLateFieldNI("link");
      data.$indexSet(0, "link", t1);
      t1 = _this.__NetObjectDatas_niceDate_A;
      t1 === $ && B.throwLateFieldNI(_s8_0);
      data.$indexSet(0, _s8_0, t1);
      t1 = _this.__NetObjectDatas_niceShareDate_A;
      t1 === $ && B.throwLateFieldNI(_s13_);
      data.$indexSet(0, _s13_, t1);
      t1 = _this.__NetObjectDatas_origin_A;
      t1 === $ && B.throwLateFieldNI("origin");
      data.$indexSet(0, "origin", t1);
      t1 = _this.__NetObjectDatas_prefix_A;
      t1 === $ && B.throwLateFieldNI("prefix");
      data.$indexSet(0, "prefix", t1);
      t1 = _this.__NetObjectDatas_projectLink_A;
      t1 === $ && B.throwLateFieldNI(_s11_1);
      data.$indexSet(0, _s11_1, t1);
      t1 = _this.__NetObjectDatas_publishTime_A;
      t1 === $ && B.throwLateFieldNI(_s11_2);
      data.$indexSet(0, _s11_2, t1);
      t1 = _this.__NetObjectDatas_realSuperChapterId_A;
      t1 === $ && B.throwLateFieldNI(_s18_);
      data.$indexSet(0, _s18_, t1);
      t1 = _this.__NetObjectDatas_selfVisible_A;
      t1 === $ && B.throwLateFieldNI(_s11_3);
      data.$indexSet(0, _s11_3, t1);
      t1 = _this.__NetObjectDatas_shareDate_A;
      t1 === $ && B.throwLateFieldNI(_s9_0);
      data.$indexSet(0, _s9_0, t1);
      t1 = _this.__NetObjectDatas_shareUser_A;
      t1 === $ && B.throwLateFieldNI(_s9_1);
      data.$indexSet(0, _s9_1, t1);
      t1 = _this.__NetObjectDatas_superChapterId_A;
      t1 === $ && B.throwLateFieldNI(_s14_);
      data.$indexSet(0, _s14_, t1);
      t1 = _this.__NetObjectDatas_superChapterName_A;
      t1 === $ && B.throwLateFieldNI(_s16_);
      data.$indexSet(0, _s16_, t1);
      t1 = _this.__NetObjectDatas_tags_A;
      t1 === $ && B.throwLateFieldNI("tags");
      data.$indexSet(0, "tags", t1);
      t1 = _this.__NetObjectDatas_title_A;
      t1 === $ && B.throwLateFieldNI("title");
      data.$indexSet(0, "title", t1);
      t1 = _this.__NetObjectDatas_type_A;
      t1 === $ && B.throwLateFieldNI("type");
      data.$indexSet(0, "type", t1);
      t1 = _this.__NetObjectDatas_userId_A;
      t1 === $ && B.throwLateFieldNI("userId");
      data.$indexSet(0, "userId", t1);
      t1 = _this.__NetObjectDatas_visible_A;
      t1 === $ && B.throwLateFieldNI("visible");
      data.$indexSet(0, "visible", t1);
      t1 = _this.__NetObjectDatas_zan_A;
      t1 === $ && B.throwLateFieldNI("zan");
      data.$indexSet(0, "zan", t1);
      return data;
    },
    get$title(_) {
      var t1 = this.__NetObjectDatas_title_A;
      t1 === $ && B.throwLateFieldNI("title");
      return t1;
    }
  };
  A.JsonConvert.prototype = {
    convert$1$1(value, $T) {
      if (value == null)
        return null;
      return this.asT$1$1(value, $T);
    },
    convertListNotNull$1$1(value, $T) {
      var e, stackTrace, t1, exception;
      if (value == null)
        return null;
      try {
        t1 = J.map$1$1$ax(type$.List_dynamic._as(value), new A.JsonConvert_convertListNotNull_closure(this, $T), $T).toList$0(0);
        return t1;
      } catch (exception) {
        e = B.unwrapException(exception);
        stackTrace = B.getTraceFromException(exception);
        B.print("asT<" + B.createRuntimeType($T).toString$0(0) + "> " + B.S(e) + " " + B.S(stackTrace));
        t1 = B._setArrayType([], $T._eval$1("JSArray<0>"));
        return t1;
      }
    },
    asT$1$1(value, $T) {
      var type, valueS, intValue, e, stackTrace, t1, exception, _null = null;
      if ($T._is(value))
        return value;
      type = B._rtiToString(B.createRuntimeType($T)._rti, _null);
      try {
        valueS = J.toString$0$(value);
        if (J.$eq$(type, "String")) {
          t1 = $T._as(valueS);
          return t1;
        } else if (J.$eq$(type, "int")) {
          intValue = B.Primitives_parseInt(valueS, _null);
          if (intValue == null) {
            t1 = B.Primitives_parseDouble(valueS);
            t1 = t1 == null ? _null : C.JSNumber_methods.toInt$0(t1);
            $T._eval$1("0?")._as(t1);
            return t1;
          } else {
            t1 = $T._as(intValue);
            return t1;
          }
        } else if (J.$eq$(type, "double")) {
          t1 = $T._as(B.double_parse(valueS));
          return t1;
        } else if (J.$eq$(type, "DateTime")) {
          t1 = $T._as(A.DateTime_parse(valueS));
          return t1;
        } else if (J.$eq$(type, "bool")) {
          if (J.$eq$(valueS, "0") || J.$eq$(valueS, "1")) {
            t1 = $T._as(J.$eq$(valueS, "1"));
            return t1;
          }
          t1 = $T._as(J.$eq$(valueS, "true"));
          return t1;
        } else {
          t1 = A.JsonConvert_fromJsonAsT(value, $T);
          return t1;
        }
      } catch (exception) {
        e = B.unwrapException(exception);
        stackTrace = B.getTraceFromException(exception);
        B.print("asT<" + B.createRuntimeType($T).toString$0(0) + "> " + B.S(e) + " " + B.S(stackTrace));
        return _null;
      }
    }
  };
  A.ResponseInterceptor.prototype = {
    onResponse$2(response, handler) {
      var t1 = type$.Map_String_dynamic._as(response.data),
        t2 = J.getInterceptor$asx(t1),
        t3 = t2.$index(t1, "data");
      B._asIntQ(t2.$index(t1, "errorCode"));
      B._asStringQ(t2.$index(t1, "errorMsg"));
      response.set$data(0, t3);
      handler.next$1(0, response);
    }
  };
  A.LoadingInterceptor.prototype = {
    onRequest$2(options, handler) {
      var _null = null;
      F.SmartDialog_showLoading(_null, _null, _null, _null, "loading...", _null, type$.dynamic);
      handler.next$1(0, options);
    },
    onResponse$2(response, handler) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.dynamic),
        t1;
      var $async$onResponse$2 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.$get$SmartDialog_config().loading.isExist;
              $async$goto = t1 ? 2 : 3;
              break;
            case 2:
              // then
              $async$goto = 4;
              return B._asyncAwait(F.SmartDialog_dismiss(false, null, C.SmartStatus_3, null, type$.dynamic), $async$onResponse$2);
            case 4:
              // returning from await.
            case 3:
              // join
              handler.next$1(0, response);
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$onResponse$2, $async$completer);
    },
    onError$2(_, err, handler) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.dynamic),
        t1;
      var $async$onError$2 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.$get$SmartDialog_config().loading.isExist;
              $async$goto = t1 ? 2 : 3;
              break;
            case 2:
              // then
              $async$goto = 4;
              return B._asyncAwait(F.SmartDialog_dismiss(false, null, C.SmartStatus_3, null, type$.dynamic), $async$onError$2);
            case 4:
              // returning from await.
            case 3:
              // join
              handler.next$1(0, err);
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$onError$2, $async$completer);
    }
  };
  A.ErrorInterceptor.prototype = {
    onError$2(_, err, handler) {
      var appException = A.AppException_AppException$init(err);
      B.print__debugPrintThrottled$closure().call$1("DioError===: " + ("" + appException.code + B.S(appException.message)));
      B.LinkedHashMap_LinkedHashMap$_literal([err, appException], type$.DioError, type$.AppException);
      handler.next$1(0, err);
    }
  };
  A.AppException.prototype = {
    toString$0(_) {
      return "" + this.code + B.S(this.message);
    },
    $isException: 1
  };
  A.HttpMethod.prototype = {
    _enumToString$0() {
      return "HttpMethod." + this._core$_name;
    }
  };
  A.NetUtil.prototype = {
    NetUtil$_internal$0() {
      var t1 = this.dio;
      t1.DioMixin___DioMixin_options_A = A.BaseOptions$(D.Duration_20000000, B.LinkedHashMap_LinkedHashMap$_literal(["content-type", "multipart/form-data;charset=utf-8"], type$.String, type$.dynamic), D.Duration_20000000, D.Duration_20000000);
      t1 = t1.DioMixin__interceptors;
      t1.add$1(t1, new A.ErrorInterceptor());
      t1.add$1(t1, new A.LogInterceptor());
    },
    request$1$8$cancelToken$data$method$onReceiveProgress$onSendProgress$options$queryParameters(_, path, cancelToken, data, method, onReceiveProgress, onSendProgress, options, queryParameters, $T) {
      var t1;
      type$.nullable_Map_String_dynamic._as(queryParameters);
      t1 = type$.nullable_void_Function_int_int;
      t1._as(onSendProgress);
      return this.request$body$NetUtil(0, path, cancelToken, data, method, t1._as(onReceiveProgress), onSendProgress, options, queryParameters, $T, $T);
    },
    request$body$NetUtil(_, path, cancelToken, data, method, onReceiveProgress, onSendProgress, options, queryParameters, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, t1, completer;
      var $async$request$1$8$cancelToken$data$method$onReceiveProgress$onSendProgress$options$queryParameters = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (method === D.HttpMethod_0) {
                t1 = $async$self.dio.DioMixin___DioMixin_options_A;
                t1 === $ && B.throwLateFieldNI("options");
                t1.___RequestConfig_method_A = "GET";
              } else if (method === D.HttpMethod_1) {
                t1 = $async$self.dio.DioMixin___DioMixin_options_A;
                t1 === $ && B.throwLateFieldNI("options");
                t1.___RequestConfig_method_A = "POST";
              } else if (method === D.HttpMethod_3) {
                t1 = $async$self.dio.DioMixin___DioMixin_options_A;
                t1 === $ && B.throwLateFieldNI("options");
                t1.___RequestConfig_method_A = "DELETE";
              } else if (method === D.HttpMethod_2) {
                t1 = $async$self.dio.DioMixin___DioMixin_options_A;
                t1 === $ && B.throwLateFieldNI("options");
                t1.___RequestConfig_method_A = "PUT";
              }
              options = A.Options$();
              t1 = new B._Future($.Zone__current, $T._eval$1("_Future<0>"));
              completer = new B._AsyncCompleter(t1, $T._eval$1("_AsyncCompleter<0>"));
              $async$self.dio.request$1$7$cancelToken$data$onReceiveProgress$onSendProgress$options$queryParameters(0, path, $async$self._cancelToken, data, onReceiveProgress, onSendProgress, options, queryParameters, $T).then$1$1(new A.NetUtil_request_closure(completer, $T), type$.Set_void).catchError$1(new A.NetUtil_request_closure0(completer)).whenComplete$1(new A.NetUtil_request_closure1());
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$request$1$8$cancelToken$data$method$onReceiveProgress$onSendProgress$options$queryParameters, $async$completer);
    },
    addInterceptor$1(interceptor) {
      var t1, t2, t3, t4, rti;
      type$.Interceptor._as(interceptor);
      for (t1 = this.dio.DioMixin__interceptors, t2 = B._instanceType(t1), t3 = new B.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListMixin.E>")), t2 = t2._eval$1("ListMixin.E"); t3.moveNext$0();) {
        t4 = t3.__internal$_current;
        if (t4 == null)
          t4 = t2._as(t4);
        rti = t4 instanceof B.Closure ? B.closureFunctionType(t4) : null;
        t4 = B.createRuntimeType(rti == null ? B.instanceType(t4) : rti);
        rti = interceptor instanceof B.Closure ? B.closureFunctionType(interceptor) : null;
        if (t4 === B.createRuntimeType(rti == null ? B.instanceType(interceptor) : rti))
          return;
      }
      t1.add$1(t1, interceptor);
    }
  };
  A.AutoDisposeLogic.prototype = {};
  A.AutoDisposePage.prototype = {
    build$1(context) {
      var _null = null;
      return O.Scaffold$(S.AppBar$(D.Text_2Vk), _null, B.Center$(new P.Obx(new A.AutoDisposePage_build_closure(this), _null), _null, _null), _null, B.FloatingActionButton$(B.Icon$(T.IconData_57415_MaterialIcons_null_false, _null, _null), false, new A.AutoDisposePage_build_closure0(this)));
    }
  };
  A.ExampleLogic.prototype = {
    toFun$2(context, tag) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.dynamic),
        t1, t2;
      var $async$toFun$2 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              switch (tag) {
                case "getCounterRx":
                  B.GetNavigation_toNamed($.$get$Get(), "/getCounterRx", null, type$.dynamic);
                  break;
                case "getCounterEasy":
                  B.GetNavigation_toNamed($.$get$Get(), "/counterEasyGet", null, type$.dynamic);
                  break;
                case "getCounterHigh":
                  B.GetNavigation_toNamed($.$get$Get(), "/counterHighGet", null, type$.dynamic);
                  break;
                case "getJump":
                  B.GetNavigation_toNamed($.$get$Get(), "/jumpOne", null, type$.dynamic);
                  break;
                case "getAutoDispose":
                  t1 = type$.dynamic;
                  t2 = B.MaterialPageRoute$(new A.ExampleLogic_toFun_closure(), null, t1);
                  B.Navigator_of(context, false).push$1$1(t2, t1);
                  break;
                case "getCounterBinding":
                  B.GetNavigation_toNamed($.$get$Get(), "/getCounterBinding", null, type$.dynamic);
                  break;
                case "counterEasyXBuilder":
                  B.GetNavigation_toNamed($.$get$Get(), "/counterEasyXBuilder", null, type$.dynamic);
                  break;
                case "counterEasyXEbx":
                  B.GetNavigation_toNamed($.$get$Get(), "/counterEasyXEbx", null, type$.dynamic);
                  break;
                case "blCubitCounter":
                  B.GetNavigation_toNamed($.$get$Get(), "/blCubitCounterPage", null, type$.dynamic);
                  break;
                case "blBlocCounter":
                  B.GetNavigation_toNamed($.$get$Get(), "/blBlocCounterPage", null, type$.dynamic);
                  break;
                case "globalBloc":
                  B.GetNavigation_toNamed($.$get$Get(), "/cubitSpanOne", null, type$.dynamic);
                  break;
                case "stream":
                  B.GetNavigation_toNamed($.$get$Get(), "/streamPage", null, type$.dynamic);
                  break;
                case "blCustomBuilder":
                  B.GetNavigation_toNamed($.$get$Get(), "/blCustomBuilderPage", null, type$.dynamic);
                  break;
                case "counterEasyC":
                  B.GetNavigation_toNamed($.$get$Get(), "/counterEasyCPage", null, type$.dynamic);
                  break;
                case "providerEasy":
                  B.GetNavigation_toNamed($.$get$Get(), "/proEasyCounterPage", null, type$.dynamic);
                  break;
                case "providerHigh":
                  B.GetNavigation_toNamed($.$get$Get(), "/proHighCounterPage", null, type$.dynamic);
                  break;
                case "providerSpanOne":
                  B.GetNavigation_toNamed($.$get$Get(), "/proSpanOnePage", null, type$.dynamic);
                  break;
                case "testNotifier":
                  B.GetNavigation_toNamed($.$get$Get(), "/testNotifierPage", null, type$.dynamic);
                  break;
                case "customBuilder":
                  B.GetNavigation_toNamed($.$get$Get(), "/customBuilderPage", null, type$.dynamic);
                  break;
                case "counterEasyP":
                  B.GetNavigation_toNamed($.$get$Get(), "/counterEasyPPage", null, type$.dynamic);
                  break;
                case "counterGlobalEasyP":
                  B.GetNavigation_toNamed($.$get$Get(), "/counterGlobalEasyPPage", null, type$.dynamic);
                  break;
                case "testNet":
                  A.testHttp();
                  break;
                case "testLayout":
                  B.GetNavigation_toNamed($.$get$Get(), "/testLayout", null, type$.dynamic);
                  break;
              }
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$toFun$2, $async$completer);
    }
  };
  A.ExampleState.prototype = {
    set$__ExampleState_trees_A(__ExampleState_trees_A) {
      this.__ExampleState_trees_A = type$.List_TreeTwiceInfo._as(__ExampleState_trees_A);
    }
  };
  A.ExamplePage.prototype = {
    build$1(context) {
      var logic, _null = null,
        _s10_ = "\u81ea\u5b9a\u4e49Builder",
        t1 = $.$get$Get(),
        t2 = new A.ExampleState(),
        t3 = type$.JSArray_BtnInfo;
      t2.set$__ExampleState_trees_A(type$.List_TreeTwiceInfo._as(B._setArrayType([new E.TreeTwiceInfo("GetX", B._setArrayType([new E.BtnInfo("\u8ba1\u6570\u5668-\u54cd\u5e94\u5f0f", "getCounterRx", _null, _null, _null, false, _null), new E.BtnInfo("\u8ba1\u6570\u5668-\u7b80\u5355\u5f0f", "getCounterEasy", _null, _null, _null, false, _null), new E.BtnInfo("\u8ba1\u6570\u5668-\u8fdb\u9636\u7248", "getCounterHigh", _null, _null, _null, false, _null), new E.BtnInfo("\u8de8\u9875\u9762\u4e8b\u4ef6\u4ea4\u4e92", "getJump", _null, _null, _null, false, _null), new E.BtnInfo("GetX\u5b9e\u4f8b-\u81ea\u52a8\u91ca\u653e", "getAutoDispose", _null, _null, _null, false, _null), new E.BtnInfo("\u8ba1\u6570\u5668-binding", "getCounterBinding", _null, _null, _null, false, _null), new E.BtnInfo("EasyX-\u81ea\u5b9a\u4e49EasyBuilder\u5237\u65b0\u673a\u5236", "counterEasyXBuilder", _null, _null, _null, false, _null), new E.BtnInfo("EasyX-\u81ea\u5b9a\u4e49ebx\u5237\u65b0\u673a\u5236", "counterEasyXEbx", _null, _null, _null, false, _null)], t3)), new E.TreeTwiceInfo("Bloc", B._setArrayType([new E.BtnInfo("\u8ba1\u6570\u5668-Cubit", "blCubitCounter", _null, _null, _null, false, _null), new E.BtnInfo("\u8ba1\u6570\u5668-Bloc", "blBlocCounter", _null, _null, _null, false, _null), new E.BtnInfo("\u5168\u5c40Bloc", "globalBloc", _null, _null, _null, false, _null), new E.BtnInfo("Stream\u5e94\u7528", "stream", _null, _null, _null, false, _null), new E.BtnInfo(_s10_, "blCustomBuilder", _null, _null, _null, false, _null), new E.BtnInfo("\u81ea\u5b9a\u4e49\u72b6\u6001\u7ba1\u7406\u6846\u67b6-EasyC", "counterEasyC", _null, _null, _null, false, _null)], t3)), new E.TreeTwiceInfo("Provider", B._setArrayType([new E.BtnInfo("\u8ba1\u6570\u5668-\u7b80\u5355\u7248", "providerEasy", _null, _null, _null, false, _null), new E.BtnInfo("\u8ba1\u6570\u5668-\u8fdb\u9636\u7248", "providerHigh", _null, _null, _null, false, _null), new E.BtnInfo("\u5168\u5c40Provider", "providerSpanOne", _null, _null, _null, false, _null), new E.BtnInfo("ChangeNotifier\u4f7f\u7528", "testNotifier", _null, _null, _null, false, _null), new E.BtnInfo(_s10_, "customBuilder", _null, _null, _null, false, _null), new E.BtnInfo("\u81ea\u5b9a\u4e49\u72b6\u6001\u7ba1\u7406\u6846\u67b6-EasyP", "counterEasyP", _null, _null, _null, false, _null), new E.BtnInfo("\u81ea\u5b9a\u4e49\u72b6\u6001\u7ba1\u7406\u6846\u67b6-EasyP\u5168\u5c40", "counterGlobalEasyP", _null, _null, _null, false, _null)], t3)), new E.TreeTwiceInfo("\u6d4b\u8bd5", B._setArrayType([new E.BtnInfo("\u6d4b\u8bd5\u5e03\u5c40", "testLayout", _null, _null, _null, false, _null), new E.BtnInfo("\u6d4b\u8bd5\u7f51\u7edc\uff08\u4e0d\u652f\u6301web)", "testNet", _null, _null, _null, false, _null)], t3))], type$.JSArray_TreeTwiceInfo)));
      t3 = type$.InternalFinalCallback_void;
      t3 = new A.ExampleLogic(t2, B._setArrayType([], type$.JSArray_of_nullable_void_Function), B.HashMap_HashMap(_null, _null, _null, type$.nullable_Object, type$.List_of_void_Function), new B.InternalFinalCallback(t3), new B.InternalFinalCallback(t3), false, false);
      t3.$$configureLifeCycle$0();
      t2 = type$.ExampleLogic;
      logic = K.Inst_put(t1, t3, t2);
      t3 = $.GetInstance__getInstance;
      t1 = (t3 == null ? $.GetInstance__getInstance = C.C_GetInstance : t3).find$1$1$tag(0, _null, t2).state.__ExampleState_trees_A;
      t1 === $ && B.throwLateFieldNI("trees");
      return new U.TreeItems(t1, new A.ExamplePage_build_closure(logic, context), _null);
    }
  };
  A.FunctionLogic.prototype = {};
  A.FunctionState.prototype = {
    set$__FunctionState_items_A(__FunctionState_items_A) {
      this.__FunctionState_items_A = type$.List_BtnInfo._as(__FunctionState_items_A);
    }
  };
  A.FunctionPage.prototype = {
    build$1(context) {
      var t3, logic, _null = null,
        _s9_ = "animation",
        t1 = $.$get$Get(),
        t2 = new A.FunctionState();
      t2.set$__FunctionState_items_A(type$.List_BtnInfo._as(B._setArrayType([new E.BtnInfo("\u4ee3\u7801\u89c4\u8303", "himalaya", _null, _null, "https://raw.githubusercontent.com/xdd666t/MyData/master/pic/flutter/norm/20210306205207.png", false, _null), new E.BtnInfo("SmartDialog", "smartDialog", _null, _null, "https://raw.githubusercontent.com/xdd666t/MyData/master/pic/flutter/flutter_use/20201129134908.png", false, _null), new E.BtnInfo("Animation", _s9_, _null, _null, "https://raw.githubusercontent.com/xdd666t/MyData/master/pic/flutter/flutter_use/20201129134929.png", false, _null), new E.BtnInfo("\u6d4b\u8bd5", _s9_, _null, _null, "https://raw.githubusercontent.com/xdd666t/MyData/master/pic/flutter/flutter_use/20201129134913.png", false, _null), new E.BtnInfo("\u6d4b\u8bd5", "test", _null, _null, "https://raw.githubusercontent.com/xdd666t/MyData/master/pic/flutter/flutter_use/20201129134857.png", false, _null)], type$.JSArray_BtnInfo)));
      t3 = type$.InternalFinalCallback_void;
      t3 = new A.FunctionLogic(t2, B._setArrayType([], type$.JSArray_of_nullable_void_Function), B.HashMap_HashMap(_null, _null, _null, type$.nullable_Object, type$.List_of_void_Function), new B.InternalFinalCallback(t3), new B.InternalFinalCallback(t3), false, false);
      t3.$$configureLifeCycle$0();
      t2 = type$.FunctionLogic;
      logic = K.Inst_put(t1, t3, t2);
      t3 = $.GetInstance__getInstance;
      t1 = (t3 == null ? $.GetInstance__getInstance = C.C_GetInstance : t3).find$1$1$tag(0, _null, t2).state.__FunctionState_items_A;
      t1 === $ && B.throwLateFieldNI("items");
      return new A.FunctionCard(t1, new A.FunctionPage_build_closure(logic, context), _null);
    }
  };
  A.FunctionCard.prototype = {
    build$1(context) {
      return this._function_card$_buildBg$1$builder(new A.FunctionCard_build_closure(this));
    },
    _function_card$_buildBg$1$builder(builder) {
      var _length, _list, index, t1, t2, t3, _null = null;
      type$.Widget_Function_int._as(builder);
      _length = this.data.length;
      _list = J.JSArray_JSArray$allocateGrowable(_length, type$.Widget);
      for (index = 0; index < _length; ++index)
        _list[index] = builder.call$1(index);
      t1 = I.SliverChildListDelegate$(_list, true, true, true);
      t2 = _list.length;
      t3 = true;
      t3 = t3 ? G.AlwaysScrollableScrollPhysics_null : _null;
      return B.Container$(_null, new A.GridView(D.C_SliverGridDelegateWithMaxCrossAxisExtent, t1, _null, C.Axis_1, false, _null, _null, t3, false, _null, t2, C.DragStartBehavior_1, V.ScrollViewKeyboardDismissBehavior_0, _null, C.Clip_1, _null), C.Clip_0, _null, _null, _null, _null, N.EdgeInsets_20_20_20_20, _null, _null, _null);
    },
    get$data(receiver) {
      return this.data;
    }
  };
  A.MainLogic.prototype = {
    onInit$0() {
      $.$get$Get();
      var t1 = $.$get$GetNavigation__getxController()._key;
      A.InitConfig_initApp($.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1));
      this.super$DisposableInterface$onInit();
    }
  };
  A.MainState.prototype = {
    set$__MainState_sideItems_A(__MainState_sideItems_A) {
      this.__MainState_sideItems_A = type$.List_BtnInfo._as(__MainState_sideItems_A);
    },
    set$__MainState_pageList_A(__MainState_pageList_A) {
      this.__MainState_pageList_A = type$.List_Widget._as(__MainState_pageList_A);
    }
  };
  A.MainPage.prototype = {
    build$1(context) {
      var t2, _this = this, _null = null,
        t1 = _this.state;
      t1.__MainState_pageList_A === $ && B.throwLateFieldNI("pageList");
      t2 = t1.__MainState_pageController_A;
      t2 === $ && B.throwLateFieldNI("pageController");
      return O.Scaffold$(_null, C.Color_4294967295, B.Row$(B._setArrayType([new A._SideNavigation(t1, new A.MainPage_build_closure(_this), new A.MainPage_build_closure0(_this), _null), Q.Expanded$(B.Container$(_null, L.PageView$builder(false, t2, new A.MainPage_build_closure1(_this), 3, _null, true, D.NeverScrollableScrollPhysics_null, false, C.Axis_0), C.Clip_0, _null, _null, _null, _null, _null, G.EdgeInsets_0_20_0_0, _null, _null), 1)], type$.JSArray_Widget), C.CrossAxisAlignment_2, C.MainAxisAlignment_0, C.MainAxisSize_1), _null, _null);
    }
  };
  A._SideNavigation.prototype = {
    build$1(context) {
      var _null = null,
        t1 = type$.List_Widget._as(B._setArrayType([B.Center$(B.Container$(_null, _null, C.Clip_0, _null, _null, new B.BoxDecoration(_null, D.C_DecorationImage, _null, _null, B._setArrayType([new B.BoxShadow(0.2, C.BlurStyle_0, B.Color$fromARGB(C.JSNumber_methods.round$0(127.5), 33, 150, 243), C.Offset_0_0, 8)], type$.JSArray_BoxShadow), _null, _null, C.BoxShape_1), 75, D.EdgeInsets_0_20_0_30, W.EdgeInsets_8_8_8_8, _null, 75), _null, _null), this._buildItems$0(), this._buildScale$0()], type$.JSArray_Widget)),
        t2 = B.Color$fromARGB(31, 158, 158, 158);
      return B.Container$(_null, B.Column$(t1, C.CrossAxisAlignment_2, C.MainAxisAlignment_0, C.MainAxisSize_1), C.Clip_0, t2, _null, _null, _null, _null, G.EdgeInsets_0_20_0_0, _null, 120);
    },
    _buildItems$0() {
      this.data.__MainState_sideItems_A === $ && B.throwLateFieldNI("sideItems");
      return Q.Expanded$(B.Column$(B.List_List$generate(3, new A._SideNavigation__buildItems_closure(this, C.MaterialColor_Map_JNwaj_4280391411, C.Color_4278190080), type$.Widget), C.CrossAxisAlignment_2, C.MainAxisAlignment_0, C.MainAxisSize_1), 1);
    },
    _buildScale$0() {
      var _null = null;
      return B.Container$(C.Alignment_0_0, X.Wrap$(R.WrapAlignment_0, B._setArrayType([D.Text_MpS, B.GetBuilder$(new A._SideNavigation__buildScale_closure(this), _null, _null, _null, type$.MainLogic)], type$.JSArray_Widget), R.WrapCrossAlignment_0, C.Axis_1, 0, 15), C.Clip_0, _null, _null, _null, _null, D.EdgeInsets_0_0_0_40, _null, _null, _null);
    },
    get$data(receiver) {
      return this.data;
    }
  };
  A.SettingLogic.prototype = {
    onInit$0() {
      $.$get$VisibilityDetectorController__instance().updateInterval = C.Duration_0;
      this.super$DisposableInterface$onInit();
    },
    onReady$0() {
      this.super$DisposableInterface$onReady();
    }
  };
  A.SettingState.prototype = {};
  A.SettingPage.prototype = {
    build$1(context) {
      var t3, _null = null,
        t1 = $.$get$Get(),
        t2 = type$.InternalFinalCallback_void;
      t2 = new A.SettingLogic(new A.SettingState(), B._setArrayType([], type$.JSArray_of_nullable_void_Function), B.HashMap_HashMap(_null, _null, _null, type$.nullable_Object, type$.List_of_void_Function), new B.InternalFinalCallback(t2), new B.InternalFinalCallback(t2), false, false);
      t2.$$configureLifeCycle$0();
      t3 = type$.SettingLogic;
      K.Inst_put(t1, t2, t3);
      t2 = $.GetInstance__getInstance;
      (t2 == null ? $.GetInstance__getInstance = C.C_GetInstance : t2).find$1$1$tag(0, _null, t3).toString;
      return new A.VisibilityDetector(new A.SettingPage_build_closure(), B.Container$(C.Alignment_0_0, B.Text$(B.getRuntimeType(D.SettingPage_null).toString$0(0), _null, _null, _null, _null, _null, _null), C.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null), D.ValueKey_Setting);
    }
  };
  A.CaseInsensitiveMap.prototype = {};
  A.MediaType.prototype = {
    toString$0(_) {
      var buffer = new B.StringBuffer(""),
        t1 = "" + this.type;
      buffer._contents = t1;
      t1 += "/";
      buffer._contents = t1;
      buffer._contents = t1 + this.subtype;
      t1 = this.parameters;
      J.forEach$1$ax(t1._collection$_map, t1.$ti._eval$1("~(1,2)")._as(new A.MediaType_toString_closure(buffer)));
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.DevelopmentFilter.prototype = {};
  A.LogFilter.prototype = {};
  A.LogOutput.prototype = {};
  A.LogPrinter.prototype = {};
  A.Level.prototype = {
    _enumToString$0() {
      return "Level." + this._core$_name;
    }
  };
  A.Logger.prototype = {
    log$4(level, message, error, stackTrace) {
      if (!this._logger$_active)
        throw B.wrapException(B.ArgumentError$("Logger has already been closed.", null));
      else if (level === D.Level_6)
        throw B.wrapException(B.ArgumentError$("Log events cannot have Level.nothing", null));
      Date.now();
    }
  };
  A.ConsoleOutput.prototype = {};
  A.PrettyPrinter.prototype = {
    PrettyPrinter$9$colors$errorMethodCount$excludeBox$lineLength$methodCount$noBoxingByDefault$printEmojis$printTime$stackTraceBeginIndex(colors, errorMethodCount, excludeBox, lineLength, methodCount, noBoxingByDefault, printEmojis, printTime, stackTraceBeginIndex) {
      var doubleDividerLine, singleDividerLine, i, t1, t2, _i, l, _this = this,
        _s10_ = "includeBox";
      if ($.PrettyPrinter__startTime == null)
        $.PrettyPrinter__startTime = new B.DateTime(Date.now(), false);
      doubleDividerLine = new B.StringBuffer("");
      singleDividerLine = new B.StringBuffer("");
      for (i = 0, t1 = "", t2 = ""; i < 119; ++i) {
        t1 += "\u2500";
        doubleDividerLine._contents = t1;
        t2 += "\u2504";
        singleDividerLine._contents = t2;
      }
      _this._topBorder = "\u250c" + doubleDividerLine.toString$0(0);
      _this._middleBorder = "\u251c" + singleDividerLine.toString$0(0);
      _this._bottomBorder = "\u2514" + doubleDividerLine.toString$0(0);
      t1 = type$.Map_Level_bool._as(B.LinkedHashMap_LinkedHashMap$_empty(type$.Level, type$.bool));
      _this.__PrettyPrinter_includeBox_F !== $ && B.throwLateFieldAI(_s10_);
      _this.set$__PrettyPrinter_includeBox_F(t1);
      for (_i = 0; _i < 7; ++_i) {
        l = D.List_gRf[_i];
        t1 = _this.__PrettyPrinter_includeBox_F;
        t1 === $ && B.throwLateFieldNI(_s10_);
        t1.$indexSet(0, l, true);
      }
      D.Map_empty7.forEach$1(0, new A.PrettyPrinter_closure(_this));
    },
    set$__PrettyPrinter_includeBox_F(__PrettyPrinter_includeBox_F) {
      this.__PrettyPrinter_includeBox_F = type$.Map_Level_bool._as(__PrettyPrinter_includeBox_F);
    }
  };
  A.Context.prototype = {
    absolute$1(_, part1) {
      var t2, parts,
        t1 = type$.JSArray_nullable_String;
      A._validateArgList("absolute", B._setArrayType([part1, null, null, null, null, null, null], t1));
      t2 = this.style;
      t2 = t2.rootLength$1(part1) > 0 && !t2.isRootRelative$1(part1);
      if (t2)
        return part1;
      t2 = this._context$_current;
      parts = B._setArrayType([t2 == null ? A.current() : t2, part1, null, null, null, null, null, null], t1);
      A._validateArgList("join", parts);
      return this.joinAll$1(new B.WhereTypeIterable(parts, type$.WhereTypeIterable_String));
    },
    joinAll$1(parts) {
      var t1, t2, t3, needsSeparator, isAbsoluteAndNotRootRelative, t4, t5, parsed, path, t6;
      type$.Iterable_String._as(parts);
      for (t1 = parts.$ti, t2 = t1._eval$1("bool(Iterable.E)")._as(new A.Context_joinAll_closure()), t3 = parts.get$iterator(parts), t1 = new B.WhereIterator(t3, t2, t1._eval$1("WhereIterator<Iterable.E>")), t2 = this.style, needsSeparator = false, isAbsoluteAndNotRootRelative = false, t4 = ""; t1.moveNext$0();) {
        t5 = t3.get$current(t3);
        if (t2.isRootRelative$1(t5) && isAbsoluteAndNotRootRelative) {
          parsed = A.ParsedPath_ParsedPath$parse(t5, t2);
          path = t4.charCodeAt(0) == 0 ? t4 : t4;
          t4 = C.JSString_methods.substring$2(path, 0, t2.rootLength$2$withDrive(path, true));
          parsed.root = t4;
          if (t2.needsSeparator$1(t4))
            C.JSArray_methods.$indexSet(parsed.separators, 0, t2.get$separator());
          t4 = "" + parsed.toString$0(0);
        } else if (t2.rootLength$1(t5) > 0) {
          isAbsoluteAndNotRootRelative = !t2.isRootRelative$1(t5);
          t4 = "" + t5;
        } else {
          t6 = t5.length;
          if (t6 !== 0) {
            if (0 >= t6)
              return B.ioore(t5, 0);
            t6 = t2.containsSeparator$1(t5[0]);
          } else
            t6 = false;
          if (!t6)
            if (needsSeparator)
              t4 += t2.get$separator();
          t4 += t5;
        }
        needsSeparator = t2.needsSeparator$1(t5);
      }
      return t4.charCodeAt(0) == 0 ? t4 : t4;
    },
    split$1(_, path) {
      var parsed = A.ParsedPath_ParsedPath$parse(path, this.style),
        t1 = parsed.parts,
        t2 = B._arrayInstanceType(t1),
        t3 = t2._eval$1("WhereIterable<1>");
      parsed.set$parts(B.List_List$of(new B.WhereIterable(t1, t2._eval$1("bool(1)")._as(new A.Context_split_closure()), t3), true, t3._eval$1("Iterable.E")));
      t1 = parsed.root;
      if (t1 != null)
        C.JSArray_methods.insert$2(parsed.parts, 0, t1);
      return parsed.parts;
    },
    normalize$1(_, path) {
      var parsed;
      if (!this._needsNormalization$1(path))
        return path;
      parsed = A.ParsedPath_ParsedPath$parse(path, this.style);
      parsed.normalize$0(0);
      return parsed.toString$0(0);
    },
    _needsNormalization$1(path) {
      var i, start, previous, t2, t3, previousPrevious, codeUnit, t4,
        t1 = this.style,
        root = t1.rootLength$1(path);
      if (root !== 0) {
        if (t1 === $.$get$Style_windows())
          for (i = 0; i < root; ++i)
            if (C.JSString_methods._codeUnitAt$1(path, i) === 47)
              return true;
        start = root;
        previous = 47;
      } else {
        start = 0;
        previous = null;
      }
      for (t2 = new B.CodeUnits(path)._string, t3 = t2.length, i = start, previousPrevious = null; i < t3; ++i, previousPrevious = previous, previous = codeUnit) {
        codeUnit = C.JSString_methods.codeUnitAt$1(t2, i);
        if (t1.isSeparator$1(codeUnit)) {
          if (t1 === $.$get$Style_windows() && codeUnit === 47)
            return true;
          if (previous != null && t1.isSeparator$1(previous))
            return true;
          if (previous === 46)
            t4 = previousPrevious == null || previousPrevious === 46 || t1.isSeparator$1(previousPrevious);
          else
            t4 = false;
          if (t4)
            return true;
        }
      }
      if (previous == null)
        return true;
      if (t1.isSeparator$1(previous))
        return true;
      if (previous === 46)
        t1 = previousPrevious == null || t1.isSeparator$1(previousPrevious) || previousPrevious === 46;
      else
        t1 = false;
      if (t1)
        return true;
      return false;
    },
    relative$1(path) {
      var from, fromParsed, pathParsed, t3, t4, t5, _this = this,
        _s26_ = 'Unable to find a path to "',
        t1 = _this.style,
        t2 = t1.rootLength$1(path);
      if (t2 <= 0)
        return _this.normalize$1(0, path);
      t2 = _this._context$_current;
      from = t2 == null ? A.current() : t2;
      if (t1.rootLength$1(from) <= 0 && t1.rootLength$1(path) > 0)
        return _this.normalize$1(0, path);
      if (t1.rootLength$1(path) <= 0 || t1.isRootRelative$1(path))
        path = _this.absolute$1(0, path);
      if (t1.rootLength$1(path) <= 0 && t1.rootLength$1(from) > 0)
        throw B.wrapException(A.PathException$(_s26_ + path + '" from "' + from + '".'));
      fromParsed = A.ParsedPath_ParsedPath$parse(from, t1);
      fromParsed.normalize$0(0);
      pathParsed = A.ParsedPath_ParsedPath$parse(path, t1);
      pathParsed.normalize$0(0);
      t2 = fromParsed.parts;
      t3 = t2.length;
      if (t3 !== 0) {
        if (0 >= t3)
          return B.ioore(t2, 0);
        t2 = J.$eq$(t2[0], ".");
      } else
        t2 = false;
      if (t2)
        return pathParsed.toString$0(0);
      t2 = fromParsed.root;
      t3 = pathParsed.root;
      if (t2 != t3)
        t2 = t2 == null || t3 == null || !t1.pathsEqual$2(t2, t3);
      else
        t2 = false;
      if (t2)
        return pathParsed.toString$0(0);
      while (true) {
        t2 = fromParsed.parts;
        t3 = t2.length;
        if (t3 !== 0) {
          t4 = pathParsed.parts;
          t5 = t4.length;
          if (t5 !== 0) {
            if (0 >= t3)
              return B.ioore(t2, 0);
            t2 = t2[0];
            if (0 >= t5)
              return B.ioore(t4, 0);
            t4 = t1.pathsEqual$2(t2, t4[0]);
            t2 = t4;
          } else
            t2 = false;
        } else
          t2 = false;
        if (!t2)
          break;
        C.JSArray_methods.removeAt$1(fromParsed.parts, 0);
        C.JSArray_methods.removeAt$1(fromParsed.separators, 1);
        C.JSArray_methods.removeAt$1(pathParsed.parts, 0);
        C.JSArray_methods.removeAt$1(pathParsed.separators, 1);
      }
      t2 = fromParsed.parts;
      t3 = t2.length;
      if (t3 !== 0) {
        if (0 >= t3)
          return B.ioore(t2, 0);
        t2 = J.$eq$(t2[0], "..");
      } else
        t2 = false;
      if (t2)
        throw B.wrapException(A.PathException$(_s26_ + path + '" from "' + from + '".'));
      t2 = type$.String;
      C.JSArray_methods.insertAll$2(pathParsed.parts, 0, B.List_List$filled(fromParsed.parts.length, "..", false, t2));
      C.JSArray_methods.$indexSet(pathParsed.separators, 0, "");
      C.JSArray_methods.insertAll$2(pathParsed.separators, 1, B.List_List$filled(fromParsed.parts.length, t1.get$separator(), false, t2));
      t1 = pathParsed.parts;
      t2 = t1.length;
      if (t2 === 0)
        return ".";
      if (t2 > 1 && J.$eq$(C.JSArray_methods.get$last(t1), ".")) {
        C.JSArray_methods.removeLast$0(pathParsed.parts);
        t1 = pathParsed.separators;
        if (0 >= t1.length)
          return B.ioore(t1, -1);
        t1.pop();
        if (0 >= t1.length)
          return B.ioore(t1, -1);
        t1.pop();
        C.JSArray_methods.add$1(t1, "");
      }
      pathParsed.root = "";
      pathParsed.removeTrailingSeparators$0();
      return pathParsed.toString$0(0);
    },
    prettyUri$1(uri) {
      var path, rel, _this = this,
        typedUri = A._parseUri(uri);
      if (typedUri.get$scheme() === "file" && _this.style === $.$get$Style_url())
        return typedUri.toString$0(0);
      else if (typedUri.get$scheme() !== "file" && typedUri.get$scheme() !== "" && _this.style !== $.$get$Style_url())
        return typedUri.toString$0(0);
      path = _this.normalize$1(0, _this.style.pathFromUri$1(A._parseUri(typedUri)));
      rel = _this.relative$1(path);
      return _this.split$1(0, rel).length > _this.split$1(0, path).length ? path : rel;
    }
  };
  A.InternalStyle.prototype = {
    getRoot$1(path) {
      var t1,
        $length = this.rootLength$1(path);
      if ($length > 0)
        return C.JSString_methods.substring$2(path, 0, $length);
      if (this.isRootRelative$1(path)) {
        if (0 >= path.length)
          return B.ioore(path, 0);
        t1 = path[0];
      } else
        t1 = null;
      return t1;
    },
    pathsEqual$2(path1, path2) {
      return path1 === path2;
    }
  };
  A.ParsedPath.prototype = {
    removeTrailingSeparators$0() {
      var t1, t2, _this = this;
      while (true) {
        t1 = _this.parts;
        if (!(t1.length !== 0 && J.$eq$(C.JSArray_methods.get$last(t1), "")))
          break;
        C.JSArray_methods.removeLast$0(_this.parts);
        t1 = _this.separators;
        if (0 >= t1.length)
          return B.ioore(t1, -1);
        t1.pop();
      }
      t1 = _this.separators;
      t2 = t1.length;
      if (t2 !== 0)
        C.JSArray_methods.$indexSet(t1, t2 - 1, "");
    },
    normalize$0(_) {
      var t1, t2, leadingDoubles, _i, part, t3, _this = this,
        newParts = B._setArrayType([], type$.JSArray_String);
      for (t1 = _this.parts, t2 = t1.length, leadingDoubles = 0, _i = 0; _i < t1.length; t1.length === t2 || (0, B.throwConcurrentModificationError)(t1), ++_i) {
        part = t1[_i];
        t3 = J.getInterceptor$(part);
        if (!(t3.$eq(part, ".") || t3.$eq(part, "")))
          if (t3.$eq(part, "..")) {
            t3 = newParts.length;
            if (t3 !== 0) {
              if (0 >= t3)
                return B.ioore(newParts, -1);
              newParts.pop();
            } else
              ++leadingDoubles;
          } else
            C.JSArray_methods.add$1(newParts, part);
      }
      if (_this.root == null)
        C.JSArray_methods.insertAll$2(newParts, 0, B.List_List$filled(leadingDoubles, "..", false, type$.String));
      if (newParts.length === 0 && _this.root == null)
        C.JSArray_methods.add$1(newParts, ".");
      _this.set$parts(newParts);
      t1 = _this.style;
      _this.set$separators(B.List_List$filled(newParts.length + 1, t1.get$separator(), true, type$.String));
      t2 = _this.root;
      if (t2 == null || newParts.length === 0 || !t1.needsSeparator$1(t2))
        C.JSArray_methods.$indexSet(_this.separators, 0, "");
      t2 = _this.root;
      if (t2 != null && t1 === $.$get$Style_windows()) {
        t2.toString;
        _this.root = B.stringReplaceAllUnchecked(t2, "/", "\\");
      }
      _this.removeTrailingSeparators$0();
    },
    toString$0(_) {
      var i, t2, t3, _this = this,
        t1 = _this.root;
      t1 = t1 != null ? "" + t1 : "";
      for (i = 0; i < _this.parts.length; ++i, t1 = t3) {
        t2 = _this.separators;
        if (!(i < t2.length))
          return B.ioore(t2, i);
        t2 = B.S(t2[i]);
        t3 = _this.parts;
        if (!(i < t3.length))
          return B.ioore(t3, i);
        t3 = t1 + t2 + B.S(t3[i]);
      }
      t1 += B.S(C.JSArray_methods.get$last(_this.separators));
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    set$parts(parts) {
      this.parts = type$.List_String._as(parts);
    },
    set$separators(separators) {
      this.separators = type$.List_String._as(separators);
    }
  };
  A.PathException.prototype = {
    toString$0(_) {
      return "PathException: " + this.message;
    },
    $isException: 1
  };
  A.Style.prototype = {
    toString$0(_) {
      return this.get$name(this);
    }
  };
  A.PosixStyle.prototype = {
    containsSeparator$1(path) {
      return C.JSString_methods.contains$1(path, "/");
    },
    isSeparator$1(codeUnit) {
      return codeUnit === 47;
    },
    needsSeparator$1(path) {
      var t1 = path.length;
      return t1 !== 0 && C.JSString_methods.codeUnitAt$1(path, t1 - 1) !== 47;
    },
    rootLength$2$withDrive(path, withDrive) {
      if (path.length !== 0 && C.JSString_methods._codeUnitAt$1(path, 0) === 47)
        return 1;
      return 0;
    },
    rootLength$1(path) {
      return this.rootLength$2$withDrive(path, false);
    },
    isRootRelative$1(path) {
      return false;
    },
    pathFromUri$1(uri) {
      var t1;
      if (uri.get$scheme() === "" || uri.get$scheme() === "file") {
        t1 = uri.get$path(uri);
        return B._Uri__uriDecode(t1, 0, t1.length, C.C_Utf8Codec, false);
      }
      throw B.wrapException(B.ArgumentError$("Uri " + uri.toString$0(0) + " must have scheme 'file:'.", null));
    },
    get$name() {
      return "posix";
    },
    get$separator() {
      return "/";
    }
  };
  A.UrlStyle.prototype = {
    containsSeparator$1(path) {
      return C.JSString_methods.contains$1(path, "/");
    },
    isSeparator$1(codeUnit) {
      return codeUnit === 47;
    },
    needsSeparator$1(path) {
      var t1 = path.length;
      if (t1 === 0)
        return false;
      if (C.JSString_methods.codeUnitAt$1(path, t1 - 1) !== 47)
        return true;
      return C.JSString_methods.endsWith$1(path, "://") && this.rootLength$1(path) === t1;
    },
    rootLength$2$withDrive(path, withDrive) {
      var i, codeUnit, index, t2,
        t1 = path.length;
      if (t1 === 0)
        return 0;
      if (C.JSString_methods._codeUnitAt$1(path, 0) === 47)
        return 1;
      for (i = 0; i < t1; ++i) {
        codeUnit = C.JSString_methods._codeUnitAt$1(path, i);
        if (codeUnit === 47)
          return 0;
        if (codeUnit === 58) {
          if (i === 0)
            return 0;
          index = C.JSString_methods.indexOf$2(path, "/", C.JSString_methods.startsWith$2(path, "//", i + 1) ? i + 3 : i);
          if (index <= 0)
            return t1;
          if (!withDrive || t1 < index + 3)
            return index;
          if (!C.JSString_methods.startsWith$1(path, "file://"))
            return index;
          if (!A.isDriveLetter(path, index + 1))
            return index;
          t2 = index + 3;
          return t1 === t2 ? t2 : index + 4;
        }
      }
      return 0;
    },
    rootLength$1(path) {
      return this.rootLength$2$withDrive(path, false);
    },
    isRootRelative$1(path) {
      return path.length !== 0 && C.JSString_methods._codeUnitAt$1(path, 0) === 47;
    },
    pathFromUri$1(uri) {
      return uri.toString$0(0);
    },
    get$name() {
      return "url";
    },
    get$separator() {
      return "/";
    }
  };
  A.WindowsStyle.prototype = {
    containsSeparator$1(path) {
      return C.JSString_methods.contains$1(path, "/");
    },
    isSeparator$1(codeUnit) {
      return codeUnit === 47 || codeUnit === 92;
    },
    needsSeparator$1(path) {
      var t1 = path.length;
      if (t1 === 0)
        return false;
      t1 = C.JSString_methods.codeUnitAt$1(path, t1 - 1);
      return !(t1 === 47 || t1 === 92);
    },
    rootLength$2$withDrive(path, withDrive) {
      var t2, index,
        t1 = path.length;
      if (t1 === 0)
        return 0;
      t2 = C.JSString_methods._codeUnitAt$1(path, 0);
      if (t2 === 47)
        return 1;
      if (t2 === 92) {
        if (t1 < 2 || C.JSString_methods._codeUnitAt$1(path, 1) !== 92)
          return 1;
        index = C.JSString_methods.indexOf$2(path, "\\", 2);
        if (index > 0) {
          index = C.JSString_methods.indexOf$2(path, "\\", index + 1);
          if (index > 0)
            return index;
        }
        return t1;
      }
      if (t1 < 3)
        return 0;
      if (!A.isAlphabetic(t2))
        return 0;
      if (C.JSString_methods._codeUnitAt$1(path, 1) !== 58)
        return 0;
      t1 = C.JSString_methods._codeUnitAt$1(path, 2);
      if (!(t1 === 47 || t1 === 92))
        return 0;
      return 3;
    },
    rootLength$1(path) {
      return this.rootLength$2$withDrive(path, false);
    },
    isRootRelative$1(path) {
      return this.rootLength$1(path) === 1;
    },
    pathFromUri$1(uri) {
      var path, t1;
      if (uri.get$scheme() !== "" && uri.get$scheme() !== "file")
        throw B.wrapException(B.ArgumentError$("Uri " + uri.toString$0(0) + " must have scheme 'file:'.", null));
      path = uri.get$path(uri);
      if (uri.get$host(uri) === "") {
        if (path.length >= 3 && C.JSString_methods.startsWith$1(path, "/") && A.isDriveLetter(path, 1))
          path = C.JSString_methods.replaceFirst$2(path, "/", "");
      } else
        path = "\\\\" + uri.get$host(uri) + path;
      t1 = B.stringReplaceAllUnchecked(path, "/", "\\");
      return B._Uri__uriDecode(t1, 0, t1.length, C.C_Utf8Codec, false);
    },
    codeUnitsEqual$2(codeUnit1, codeUnit2) {
      var upperCase1;
      if (codeUnit1 === codeUnit2)
        return true;
      if (codeUnit1 === 47)
        return codeUnit2 === 92;
      if (codeUnit1 === 92)
        return codeUnit2 === 47;
      if ((codeUnit1 ^ codeUnit2) !== 32)
        return false;
      upperCase1 = codeUnit1 | 32;
      return upperCase1 >= 97 && upperCase1 <= 122;
    },
    pathsEqual$2(path1, path2) {
      var t1, i;
      if (path1 === path2)
        return true;
      t1 = path1.length;
      if (t1 !== path2.length)
        return false;
      for (i = 0; i < t1; ++i)
        if (!this.codeUnitsEqual$2(C.JSString_methods._codeUnitAt$1(path1, i), C.JSString_methods._codeUnitAt$1(path2, i)))
          return false;
      return true;
    },
    get$name() {
      return "windows";
    },
    get$separator() {
      return "\\";
    }
  };
  A.SourceFile.prototype = {
    get$length(_) {
      return this._decodedChars.length;
    },
    get$lines(_) {
      return this._lineStarts.length;
    },
    SourceFile$decoded$2$url(decodedChars, url) {
      var t1, t2, t3, i, c, j, t4;
      for (t1 = this._decodedChars, t2 = t1.length, t3 = this._lineStarts, i = 0; i < t2; ++i) {
        c = t1[i];
        if (c === 13) {
          j = i + 1;
          if (j < t2) {
            if (!(j < t2))
              return B.ioore(t1, j);
            t4 = t1[j] !== 10;
          } else
            t4 = true;
          if (t4)
            c = 10;
        }
        if (c === 10)
          C.JSArray_methods.add$1(t3, i + 1);
      }
    },
    getLine$1(offset) {
      var t1, _this = this;
      if (offset < 0)
        throw B.wrapException(B.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (offset > _this._decodedChars.length)
        throw B.wrapException(B.RangeError$("Offset " + offset + string$._must_ + _this.get$length(_this) + "."));
      t1 = _this._lineStarts;
      if (offset < C.JSArray_methods.get$first(t1))
        return -1;
      if (offset >= C.JSArray_methods.get$last(t1))
        return t1.length - 1;
      if (_this._isNearCachedLine$1(offset)) {
        t1 = _this._cachedLine;
        t1.toString;
        return t1;
      }
      return _this._cachedLine = _this._binarySearch$1(offset) - 1;
    },
    _isNearCachedLine$1(offset) {
      var t2, t3, t4,
        t1 = this._cachedLine;
      if (t1 == null)
        return false;
      t2 = this._lineStarts;
      t3 = t2.length;
      if (t1 >>> 0 !== t1 || t1 >= t3)
        return B.ioore(t2, t1);
      if (offset < t2[t1])
        return false;
      if (!(t1 >= t3 - 1)) {
        t4 = t1 + 1;
        if (!(t4 < t3))
          return B.ioore(t2, t4);
        t4 = offset < t2[t4];
      } else
        t4 = true;
      if (t4)
        return true;
      if (!(t1 >= t3 - 2)) {
        t4 = t1 + 2;
        if (!(t4 < t3))
          return B.ioore(t2, t4);
        t4 = offset < t2[t4];
        t2 = t4;
      } else
        t2 = true;
      if (t2) {
        this._cachedLine = t1 + 1;
        return true;
      }
      return false;
    },
    _binarySearch$1(offset) {
      var min, half,
        t1 = this._lineStarts,
        t2 = t1.length,
        max = t2 - 1;
      for (min = 0; min < max;) {
        half = min + C.JSInt_methods._tdivFast$1(max - min, 2);
        if (!(half >= 0 && half < t2))
          return B.ioore(t1, half);
        if (t1[half] > offset)
          max = half;
        else
          min = half + 1;
      }
      return max;
    },
    getColumn$1(offset) {
      var line, t1, lineStart, _this = this;
      if (offset < 0)
        throw B.wrapException(B.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (offset > _this._decodedChars.length)
        throw B.wrapException(B.RangeError$("Offset " + offset + " must be not be greater than the number of characters in the file, " + _this.get$length(_this) + "."));
      line = _this.getLine$1(offset);
      t1 = _this._lineStarts;
      if (!(line >= 0 && line < t1.length))
        return B.ioore(t1, line);
      lineStart = t1[line];
      if (lineStart > offset)
        throw B.wrapException(B.RangeError$("Line " + line + " comes after offset " + offset + "."));
      return offset - lineStart;
    },
    getOffset$1(line) {
      var t1, t2, result, t3, _this = this;
      if (line < 0)
        throw B.wrapException(B.RangeError$("Line may not be negative, was " + line + "."));
      else {
        t1 = _this._lineStarts;
        t2 = t1.length;
        if (line >= t2)
          throw B.wrapException(B.RangeError$("Line " + line + " must be less than the number of lines in the file, " + _this.get$lines(_this) + "."));
      }
      result = t1[line];
      if (result <= _this._decodedChars.length) {
        t3 = line + 1;
        t1 = t3 < t2 && result >= t1[t3];
      } else
        t1 = true;
      if (t1)
        throw B.wrapException(B.RangeError$("Line " + line + " doesn't have 0 columns."));
      return result;
    }
  };
  A.FileLocation.prototype = {
    get$sourceUrl() {
      return this.file.url;
    },
    get$line(_) {
      return this.file.getLine$1(this.offset);
    },
    get$column() {
      return this.file.getColumn$1(this.offset);
    },
    get$offset(receiver) {
      return this.offset;
    }
  };
  A._FileSpan.prototype = {
    get$sourceUrl() {
      return this.file.url;
    },
    get$length(_) {
      return this._file$_end - this._file$_start;
    },
    get$start(_) {
      return A.FileLocation$_(this.file, this._file$_start);
    },
    get$end(_) {
      return A.FileLocation$_(this.file, this._file$_end);
    },
    get$text(_) {
      return B.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(this.file._decodedChars, this._file$_start, this._file$_end), 0, null);
    },
    get$context(_) {
      var _this = this,
        t1 = _this.file,
        endOffset = _this._file$_end,
        endLine = t1.getLine$1(endOffset);
      if (t1.getColumn$1(endOffset) === 0 && endLine !== 0) {
        if (endOffset - _this._file$_start === 0)
          return endLine === t1._lineStarts.length - 1 ? "" : B.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1._decodedChars, t1.getOffset$1(endLine), t1.getOffset$1(endLine + 1)), 0, null);
      } else
        endOffset = endLine === t1._lineStarts.length - 1 ? t1._decodedChars.length : t1.getOffset$1(endLine + 1);
      return B.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1._decodedChars, t1.getOffset$1(t1.getLine$1(_this._file$_start)), endOffset), 0, null);
    },
    compareTo$1(_, other) {
      var result;
      type$.SourceSpan._as(other);
      if (!(other instanceof A._FileSpan))
        return this.super$SourceSpanMixin$compareTo(0, other);
      result = C.JSInt_methods.compareTo$1(this._file$_start, other._file$_start);
      return result === 0 ? C.JSInt_methods.compareTo$1(this._file$_end, other._file$_end) : result;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!type$.FileSpan._is(other))
        return _this.super$SourceSpanMixin$$eq(0, other);
      return _this._file$_start === other._file$_start && _this._file$_end === other._file$_end && J.$eq$(_this.file.url, other.file.url);
    },
    get$hashCode(_) {
      return B.Object_hash(this._file$_start, this._file$_end, this.file.url, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue);
    },
    $isFileSpan: 1,
    $isSourceSpanWithContext: 1
  };
  A.Highlighter.prototype = {
    highlight$0(_) {
      var t2, highlightsByColumn, t3, t4, i, line, lastLine, t5, t6, t7, t8, t9, t10, t11, t12, t13, index, primaryIdx, primary, _i, _this = this, _null = null,
        t1 = _this._lines;
      _this._writeFileStart$1(C.JSArray_methods.get$first(t1).url);
      t2 = _this._maxMultilineSpans;
      highlightsByColumn = B.List_List$filled(t2, _null, false, type$.nullable__Highlight);
      for (t3 = _this._highlighter$_buffer, t2 = t2 !== 0, t4 = _this._highlighter$_primaryColor, i = 0; i < t1.length; ++i) {
        line = t1[i];
        if (i > 0) {
          lastLine = t1[i - 1];
          t5 = lastLine.url;
          t6 = line.url;
          if (!J.$eq$(t5, t6)) {
            _this._writeSidebar$1$end("\u2575");
            t3._contents += "\n";
            _this._writeFileStart$1(t6);
          } else if (lastLine.number + 1 !== line.number) {
            _this._writeSidebar$1$text("...");
            t3._contents += "\n";
          }
        }
        for (t5 = line.highlights, t6 = B._arrayInstanceType(t5)._eval$1("ReversedListIterable<1>"), t7 = new B.ReversedListIterable(t5, t6), t7 = new B.ListIterator(t7, t7.get$length(t7), t6._eval$1("ListIterator<ListIterable.E>")), t6 = t6._eval$1("ListIterable.E"), t8 = line.number, t9 = line.text; t7.moveNext$0();) {
          t10 = t7.__internal$_current;
          if (t10 == null)
            t10 = t6._as(t10);
          t11 = t10.span;
          t12 = t11.get$start(t11);
          t12 = t12.get$line(t12);
          t13 = t11.get$end(t11);
          if (t12 !== t13.get$line(t13)) {
            t12 = t11.get$start(t11);
            t11 = t12.get$line(t12) === t8 && _this._isOnlyWhitespace$1(C.JSString_methods.substring$2(t9, 0, t11.get$start(t11).get$column()));
          } else
            t11 = false;
          if (t11) {
            index = C.JSArray_methods.indexOf$1(highlightsByColumn, _null);
            if (index < 0)
              B.throwExpression(B.ArgumentError$(B.S(highlightsByColumn) + " contains no null elements.", _null));
            C.JSArray_methods.$indexSet(highlightsByColumn, index, t10);
          }
        }
        _this._writeSidebar$1$line(t8);
        t3._contents += " ";
        _this._writeMultilineHighlights$2(line, highlightsByColumn);
        if (t2)
          t3._contents += " ";
        primaryIdx = C.JSArray_methods.indexWhere$1(t5, new A.Highlighter_highlight_closure());
        if (primaryIdx === -1)
          primary = _null;
        else {
          if (!(primaryIdx >= 0 && primaryIdx < t5.length))
            return B.ioore(t5, primaryIdx);
          primary = t5[primaryIdx];
        }
        t6 = primary != null;
        if (t6) {
          t7 = primary.span;
          t10 = t7.get$start(t7);
          t10 = t10.get$line(t10) === t8 ? t7.get$start(t7).get$column() : 0;
          t11 = t7.get$end(t7);
          _this._writeHighlightedText$4$color(t9, t10, t11.get$line(t11) === t8 ? t7.get$end(t7).get$column() : t9.length, t4);
        } else
          _this._writeText$1(t9);
        t3._contents += "\n";
        if (t6)
          _this._writeIndicator$3(line, primary, highlightsByColumn);
        for (t6 = t5.length, _i = 0; _i < t6; ++_i) {
          t5[_i].toString;
          continue;
        }
      }
      _this._writeSidebar$1$end("\u2575");
      t1 = t3._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _writeFileStart$1(url) {
      var _this = this;
      if (!_this._multipleFiles || !type$.Uri._is(url))
        _this._writeSidebar$1$end("\u2577");
      else {
        _this._writeSidebar$1$end("\u250c");
        _this._colorize$1$2$color(new A.Highlighter__writeFileStart_closure(_this), "\x1b[34m", type$.void);
        _this._highlighter$_buffer._contents += " " + $.$get$context().prettyUri$1(url);
      }
      _this._highlighter$_buffer._contents += "\n";
    },
    _writeMultilineHighlights$3$current(line, highlightsByColumn, current) {
      var t1, currentColor, t2, t3, t4, t5, t6, foundCurrent, _i, highlight, t7, startLine, t8, endLine, _this = this, _box_0 = {};
      type$.List_nullable__Highlight._as(highlightsByColumn);
      _box_0.openedOnThisLine = false;
      _box_0.openedOnThisLineColor = null;
      t1 = current == null;
      if (t1)
        currentColor = null;
      else
        currentColor = _this._highlighter$_primaryColor;
      for (t2 = highlightsByColumn.length, t3 = type$.Null, t4 = _this._highlighter$_primaryColor, t1 = !t1, t5 = _this._highlighter$_buffer, t6 = type$.void, foundCurrent = false, _i = 0; _i < t2; ++_i) {
        highlight = highlightsByColumn[_i];
        t7 = highlight == null;
        if (t7)
          startLine = null;
        else {
          t8 = highlight.span;
          t8 = t8.get$start(t8);
          startLine = t8.get$line(t8);
        }
        if (t7)
          endLine = null;
        else {
          t8 = highlight.span;
          t8 = t8.get$end(t8);
          endLine = t8.get$line(t8);
        }
        if (t1 && highlight === current) {
          _this._colorize$1$2$color(new A.Highlighter__writeMultilineHighlights_closure(_this, startLine, line), currentColor, t3);
          foundCurrent = true;
        } else if (foundCurrent)
          _this._colorize$1$2$color(new A.Highlighter__writeMultilineHighlights_closure0(_this, highlight), currentColor, t3);
        else if (t7)
          if (_box_0.openedOnThisLine)
            _this._colorize$1$2$color(new A.Highlighter__writeMultilineHighlights_closure1(_this), _box_0.openedOnThisLineColor, t6);
          else
            t5._contents += " ";
        else
          _this._colorize$1$2$color(new A.Highlighter__writeMultilineHighlights_closure2(_box_0, _this, current, startLine, line, highlight, endLine), t4, t3);
      }
    },
    _writeMultilineHighlights$2(line, highlightsByColumn) {
      return this._writeMultilineHighlights$3$current(line, highlightsByColumn, null);
    },
    _writeHighlightedText$4$color(text, startColumn, endColumn, color) {
      var _this = this;
      _this._writeText$1(C.JSString_methods.substring$2(text, 0, startColumn));
      _this._colorize$1$2$color(new A.Highlighter__writeHighlightedText_closure(_this, text, startColumn, endColumn), color, type$.void);
      _this._writeText$1(C.JSString_methods.substring$2(text, endColumn, text.length));
    },
    _writeIndicator$3(line, highlight, highlightsByColumn) {
      var color, t1, t2, t3, coversWholeLine, _this = this;
      type$.List_nullable__Highlight._as(highlightsByColumn);
      color = _this._highlighter$_primaryColor;
      t1 = highlight.span;
      t2 = t1.get$start(t1);
      t2 = t2.get$line(t2);
      t3 = t1.get$end(t1);
      if (t2 === t3.get$line(t3)) {
        _this._writeSidebar$0();
        t1 = _this._highlighter$_buffer;
        t1._contents += " ";
        _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
        if (highlightsByColumn.length !== 0)
          t1._contents += " ";
        _this._writeLabel$3(highlight, highlightsByColumn, _this._colorize$1$2$color(new A.Highlighter__writeIndicator_closure(_this, line, highlight), color, type$.int));
      } else {
        t2 = t1.get$start(t1);
        t3 = line.number;
        if (t2.get$line(t2) === t3) {
          if (C.JSArray_methods.contains$1(highlightsByColumn, highlight))
            return;
          A.replaceFirstNull(highlightsByColumn, highlight, type$._Highlight);
          _this._writeSidebar$0();
          t1 = _this._highlighter$_buffer;
          t1._contents += " ";
          _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
          _this._colorize$1$2$color(new A.Highlighter__writeIndicator_closure0(_this, line, highlight), color, type$.void);
          t1._contents += "\n";
        } else {
          t2 = t1.get$end(t1);
          if (t2.get$line(t2) === t3) {
            coversWholeLine = t1.get$end(t1).get$column() === line.text.length;
            if (coversWholeLine && true) {
              A.replaceWithNull(highlightsByColumn, highlight, type$._Highlight);
              return;
            }
            _this._writeSidebar$0();
            _this._highlighter$_buffer._contents += " ";
            _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
            _this._writeLabel$3(highlight, highlightsByColumn, _this._colorize$1$2$color(new A.Highlighter__writeIndicator_closure1(_this, coversWholeLine, line, highlight), color, type$.int));
            A.replaceWithNull(highlightsByColumn, highlight, type$._Highlight);
          }
        }
      }
    },
    _writeArrow$3$beginning(line, column, beginning) {
      var t1 = beginning ? 0 : 1,
        t2 = this._highlighter$_buffer;
      t1 = t2._contents += C.JSString_methods.$mul("\u2500", 1 + column + this._countTabs$1(C.JSString_methods.substring$2(line.text, 0, column + t1)) * 3);
      t2._contents = t1 + "^";
    },
    _writeArrow$2(line, column) {
      return this._writeArrow$3$beginning(line, column, true);
    },
    _writeLabel$3(highlight, highlightsByColumn, underlineLength) {
      type$.List_nullable__Highlight._as(highlightsByColumn);
      this._highlighter$_buffer._contents += "\n";
      return;
    },
    _writeText$1(text) {
      var t1, t2, t3, t4;
      for (t1 = new B.CodeUnits(text), t2 = type$.CodeUnits, t1 = new B.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListMixin.E>")), t3 = this._highlighter$_buffer, t2 = t2._eval$1("ListMixin.E"); t1.moveNext$0();) {
        t4 = t1.__internal$_current;
        if (t4 == null)
          t4 = t2._as(t4);
        if (t4 === 9)
          t3._contents += C.JSString_methods.$mul(" ", 4);
        else
          t3._contents += B.Primitives_stringFromCharCode(t4);
      }
    },
    _writeSidebar$3$end$line$text(end, line, text) {
      var t1 = {};
      t1.text = text;
      if (line != null)
        t1.text = C.JSInt_methods.toString$0(line + 1);
      this._colorize$1$2$color(new A.Highlighter__writeSidebar_closure(t1, this, end), "\x1b[34m", type$.Null);
    },
    _writeSidebar$1$end(end) {
      return this._writeSidebar$3$end$line$text(end, null, null);
    },
    _writeSidebar$1$text(text) {
      return this._writeSidebar$3$end$line$text(null, null, text);
    },
    _writeSidebar$1$line(line) {
      return this._writeSidebar$3$end$line$text(null, line, null);
    },
    _writeSidebar$0() {
      return this._writeSidebar$3$end$line$text(null, null, null);
    },
    _countTabs$1(text) {
      var t1, t2, count, t3;
      for (t1 = new B.CodeUnits(text), t2 = type$.CodeUnits, t1 = new B.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListMixin.E>")), t2 = t2._eval$1("ListMixin.E"), count = 0; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if ((t3 == null ? t2._as(t3) : t3) === 9)
          ++count;
      }
      return count;
    },
    _isOnlyWhitespace$1(text) {
      var t1, t2, t3;
      for (t1 = new B.CodeUnits(text), t2 = type$.CodeUnits, t1 = new B.ListIterator(t1, t1.get$length(t1), t2._eval$1("ListIterator<ListMixin.E>")), t2 = t2._eval$1("ListMixin.E"); t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        if (t3 !== 32 && t3 !== 9)
          return false;
      }
      return true;
    },
    _colorize$1$2$color(callback, color, $T) {
      var t1, result;
      $T._eval$1("0()")._as(callback);
      t1 = this._highlighter$_primaryColor != null;
      if (t1 && color != null)
        this._highlighter$_buffer._contents += color;
      result = callback.call$0();
      if (t1 && color != null)
        this._highlighter$_buffer._contents += "\x1b[0m";
      return result;
    }
  };
  A._Highlight.prototype = {
    toString$0(_) {
      var t3, t4,
        t1 = this.span,
        t2 = t1.get$start(t1);
      t2 = t2.get$line(t2);
      t3 = t1.get$start(t1).get$column();
      t4 = t1.get$end(t1);
      t1 = "" + "primary " + ("" + t2 + ":" + t3 + "-" + t4.get$line(t4) + ":" + t1.get$end(t1).get$column());
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A._Line.prototype = {
    toString$0(_) {
      return "" + this.number + ': "' + this.text + '" (' + C.JSArray_methods.join$1(this.highlights, ", ") + ")";
    }
  };
  A.SourceLocation.prototype = {
    distance$1(other) {
      var t1 = this.sourceUrl;
      if (!J.$eq$(t1, other.get$sourceUrl()))
        throw B.wrapException(B.ArgumentError$('Source URLs "' + B.S(t1) + '" and "' + B.S(other.get$sourceUrl()) + "\" don't match.", null));
      return Math.abs(this.offset - other.get$offset(other));
    },
    compareTo$1(_, other) {
      var t1;
      type$.SourceLocation._as(other);
      t1 = this.sourceUrl;
      if (!J.$eq$(t1, other.get$sourceUrl()))
        throw B.wrapException(B.ArgumentError$('Source URLs "' + B.S(t1) + '" and "' + B.S(other.get$sourceUrl()) + "\" don't match.", null));
      return this.offset - other.get$offset(other);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.SourceLocation._is(other) && J.$eq$(this.sourceUrl, other.get$sourceUrl()) && this.offset === other.get$offset(other);
    },
    get$hashCode(_) {
      var t1 = this.sourceUrl;
      t1 = t1 == null ? null : t1.get$hashCode(t1);
      if (t1 == null)
        t1 = 0;
      return t1 + this.offset;
    },
    toString$0(_) {
      var _this = this,
        t1 = B.getRuntimeType(_this).toString$0(0),
        source = _this.sourceUrl;
      return "<" + t1 + ": " + _this.offset + " " + (B.S(source == null ? "unknown source" : source) + ":" + (_this.line + 1) + ":" + (_this.column + 1)) + ">";
    },
    $isComparable: 1,
    get$sourceUrl() {
      return this.sourceUrl;
    },
    get$offset(receiver) {
      return this.offset;
    },
    get$line(receiver) {
      return this.line;
    },
    get$column() {
      return this.column;
    }
  };
  A.SourceLocationMixin.prototype = {
    distance$1(other) {
      if (!J.$eq$(this.file.url, other.get$sourceUrl()))
        throw B.wrapException(B.ArgumentError$('Source URLs "' + B.S(this.get$sourceUrl()) + '" and "' + B.S(other.get$sourceUrl()) + "\" don't match.", null));
      return Math.abs(this.offset - other.get$offset(other));
    },
    compareTo$1(_, other) {
      type$.SourceLocation._as(other);
      if (!J.$eq$(this.file.url, other.get$sourceUrl()))
        throw B.wrapException(B.ArgumentError$('Source URLs "' + B.S(this.get$sourceUrl()) + '" and "' + B.S(other.get$sourceUrl()) + "\" don't match.", null));
      return this.offset - other.get$offset(other);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.SourceLocation._is(other) && J.$eq$(this.file.url, other.get$sourceUrl()) && this.offset === other.get$offset(other);
    },
    get$hashCode(_) {
      var t1 = this.file.url;
      t1 = t1 == null ? null : t1.get$hashCode(t1);
      if (t1 == null)
        t1 = 0;
      return t1 + this.offset;
    },
    toString$0(_) {
      var t1 = B.getRuntimeType(this).toString$0(0),
        t2 = this.offset,
        t3 = this.file,
        source = t3.url;
      return "<" + t1 + ": " + t2 + " " + (B.S(source == null ? "unknown source" : source) + ":" + (t3.getLine$1(t2) + 1) + ":" + (t3.getColumn$1(t2) + 1)) + ">";
    },
    $isComparable: 1,
    $isSourceLocation: 1
  };
  A.SourceSpanBase.prototype = {
    SourceSpanBase$3(start, end, text) {
      var t3,
        t1 = this.end,
        t2 = this.start;
      if (!J.$eq$(t1.get$sourceUrl(), t2.get$sourceUrl()))
        throw B.wrapException(B.ArgumentError$('Source URLs "' + B.S(t2.get$sourceUrl()) + '" and  "' + B.S(t1.get$sourceUrl()) + "\" don't match.", null));
      else if (t1.get$offset(t1) < t2.get$offset(t2))
        throw B.wrapException(B.ArgumentError$("End " + t1.toString$0(0) + " must come after start " + t2.toString$0(0) + ".", null));
      else {
        t3 = this.text;
        if (t3.length !== t2.distance$1(t1))
          throw B.wrapException(B.ArgumentError$('Text "' + t3 + '" must be ' + t2.distance$1(t1) + " characters long.", null));
      }
    },
    get$start(receiver) {
      return this.start;
    },
    get$end(receiver) {
      return this.end;
    },
    get$text(receiver) {
      return this.text;
    }
  };
  A.SourceSpanException.prototype = {
    get$message(_) {
      return this._span_exception$_message;
    },
    toString$0(_) {
      var t3, highlight,
        t1 = this._span,
        t2 = t1.get$start(t1);
      t2 = "" + ("line " + (t2.get$line(t2) + 1) + ", column " + (t1.get$start(t1).get$column() + 1));
      if (t1.get$sourceUrl() != null) {
        t3 = t1.get$sourceUrl();
        t3 = t2 + (" of " + $.$get$context().prettyUri$1(t3));
        t2 = t3;
      }
      t2 += ": " + this._span_exception$_message;
      highlight = t1.highlight$1$color(0, null);
      t1 = highlight.length !== 0 ? t2 + "\n" + highlight : t2;
      return "Error on " + (t1.charCodeAt(0) == 0 ? t1 : t1);
    },
    $isException: 1
  };
  A.SourceSpanFormatException.prototype = {
    get$offset(_) {
      var t1 = this._span;
      t1 = A.FileLocation$_(t1.file, t1._file$_start);
      return t1.offset;
    },
    $isFormatException: 1,
    get$source(receiver) {
      return this.source;
    }
  };
  A.SourceSpanMixin.prototype = {
    get$sourceUrl() {
      return this.get$start(this).get$sourceUrl();
    },
    get$length(_) {
      var t2, _this = this,
        t1 = _this.get$end(_this);
      t1 = t1.get$offset(t1);
      t2 = _this.get$start(_this);
      return t1 - t2.get$offset(t2);
    },
    compareTo$1(_, other) {
      var result, _this = this;
      type$.SourceSpan._as(other);
      result = _this.get$start(_this).compareTo$1(0, other.get$start(other));
      return result === 0 ? _this.get$end(_this).compareTo$1(0, other.get$end(other)) : result;
    },
    highlight$1$color(_, color) {
      var _this = this;
      if (!type$.SourceSpanWithContext._is(_this) && _this.get$length(_this) === 0)
        return "";
      return A.Highlighter$(_this, color).highlight$0(0);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return type$.SourceSpan._is(other) && _this.get$start(_this).$eq(0, other.get$start(other)) && _this.get$end(_this).$eq(0, other.get$end(other));
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(_this.get$start(_this), _this.get$end(_this), C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "<" + B.getRuntimeType(_this).toString$0(0) + ": from " + _this.get$start(_this).toString$0(0) + " to " + _this.get$end(_this).toString$0(0) + ' "' + _this.get$text(_this) + '">';
    },
    $isComparable: 1,
    $isSourceSpan: 1
  };
  A.SourceSpanWithContext.prototype = {
    get$context(_) {
      return this._span_with_context$_context;
    }
  };
  A.StringScannerException.prototype = {
    get$source(_) {
      return B._asString(this.source);
    }
  };
  A.StringScanner0.prototype = {
    get$lastMatch() {
      var _this = this;
      if (_this._string_scanner0$_position !== _this._string_scanner0$_lastMatchPosition)
        _this._string_scanner0$_lastMatch = null;
      return _this._string_scanner0$_lastMatch;
    },
    scan$1(pattern) {
      var success, _this = this,
        t1 = _this._string_scanner0$_lastMatch = J.matchAsPrefix$2$s(type$.Pattern._as(pattern), _this.string, _this._string_scanner0$_position);
      _this._string_scanner0$_lastMatchPosition = _this._string_scanner0$_position;
      success = t1 != null;
      if (success)
        _this._string_scanner0$_lastMatchPosition = _this._string_scanner0$_position = t1.get$end(t1);
      return success;
    },
    expect$2$name(pattern, $name) {
      var t1;
      type$.Pattern._as(pattern);
      if (this.scan$1(pattern))
        return;
      if ($name == null)
        if (type$.RegExp._is(pattern))
          $name = "/" + pattern.pattern + "/";
        else {
          t1 = J.toString$0$(pattern);
          t1 = B.stringReplaceAllUnchecked(t1, "\\", "\\\\");
          $name = '"' + B.stringReplaceAllUnchecked(t1, '"', '\\"') + '"';
        }
      this.error$3$length$position(0, "expected " + $name + ".", 0, this._string_scanner0$_position);
    },
    expect$1(pattern) {
      return this.expect$2$name(pattern, null);
    },
    expectDone$0() {
      var t1 = this._string_scanner0$_position;
      if (t1 === this.string.length)
        return;
      this.error$3$length$position(0, "expected no more input.", 0, t1);
    },
    error$3$length$position(_, message, $length, position) {
      var t2, t3, t4, t5, sourceFile, end,
        t1 = this.string;
      if (position < 0)
        B.throwExpression(B.RangeError$("position must be greater than or equal to 0."));
      else if (position > t1.length)
        B.throwExpression(B.RangeError$("position must be less than or equal to the string length."));
      t2 = position + $length > t1.length;
      if (t2)
        B.throwExpression(B.RangeError$("position plus length must not go beyond the end of the string."));
      t2 = this.sourceUrl;
      t3 = new B.CodeUnits(t1);
      t4 = B._setArrayType([0], type$.JSArray_int);
      t5 = new Uint32Array(B._ensureNativeList(t3.toList$0(t3)));
      sourceFile = new A.SourceFile(t2, t4, t5);
      sourceFile.SourceFile$decoded$2$url(t3, t2);
      end = position + $length;
      if (end > t5.length)
        B.throwExpression(B.RangeError$("End " + end + string$._must_ + sourceFile.get$length(sourceFile) + "."));
      else if (position < 0)
        B.throwExpression(B.RangeError$("Start may not be negative, was " + position + "."));
      throw B.wrapException(new A.StringScannerException(t1, message, new A._FileSpan(sourceFile, position, end)));
    }
  };
  A.RenderVisibilityDetectorBase.prototype = {
    _fireCallback$2(layer, bounds) {
      var t1 = this.key,
        oldInfo = $.RenderVisibilityDetectorBase__lastVisibility.$index(0, t1),
        info = this._determineVisibility$2(layer, bounds),
        t2 = info.visibleBounds,
        t3 = t2.get$isEmpty(t2);
      if (oldInfo == null) {
        if (t3)
          return;
      } else if (info.size.$eq(0, oldInfo.size) && t2.$eq(0, oldInfo.visibleBounds))
        return;
      t2 = $.RenderVisibilityDetectorBase__lastVisibility;
      if (!t3)
        t2.$indexSet(0, t1, info);
      else
        t2.remove$1(0, t1);
      t1 = this.RenderVisibilityDetectorBase__onVisibilityChanged;
      if (t1 != null)
        t1.call$1(info);
    },
    set$onVisibilityChanged(value) {
      var t1, _this = this;
      type$.nullable_void_Function_VisibilityInfo._as(value);
      if (J.$eq$(_this.RenderVisibilityDetectorBase__onVisibilityChanged, value))
        return;
      t1 = _this.RenderVisibilityDetectorBase__compositionCallbackCanceller;
      if (t1 != null)
        t1.call$0();
      _this.set$_compositionCallbackCanceller(null);
      _this.set$_onVisibilityChanged(value);
      _this.markNeedsPaint$0();
      _this._scheduleUpdate$0();
    },
    _scheduleUpdate$1(layer) {
      var updateInterval,
        t1 = $.RenderVisibilityDetectorBase__updates,
        t2 = t1._length;
      t1.$indexSet(0, this.key, new A.RenderVisibilityDetectorBase__scheduleUpdate_closure(this, layer));
      updateInterval = $.$get$VisibilityDetectorController__instance().updateInterval;
      if (updateInterval._duration === 0) {
        if (t2 === 0) {
          t1 = $.SchedulerBinding__instance;
          t1.toString;
          C.JSArray_methods.add$1(t1.SchedulerBinding__postFrameCallbacks, type$.void_Function_Duration._as(new A.RenderVisibilityDetectorBase__scheduleUpdate_closure0()));
        }
      } else if ($.RenderVisibilityDetectorBase__timer == null)
        $.RenderVisibilityDetectorBase__timer = B.Timer_Timer(updateInterval, A.render_visibility_detector_RenderVisibilityDetectorBase__handleTimer$closure());
    },
    _scheduleUpdate$0() {
      return this._scheduleUpdate$1(null);
    },
    _determineVisibility$2(layer, bounds) {
      var t1, t2, transform, child, ancestor, ancestors, index, clip, $parent, parentClip, visibleBounds, _this = this;
      if (_this.RenderVisibilityDetectorBase__disposed || layer == null || layer._node$_owner == null || _this._node$_owner == null) {
        t1 = _this.key;
        t2 = $.RenderVisibilityDetectorBase__lastVisibility.$index(0, t1);
        t2 = t2 == null ? null : t2.size;
        return new A.VisibilityInfo(t1, t2 == null ? C.Size_0_0 : t2, C.Rect_0_0_0_0);
      }
      transform = new B.Matrix4(new Float64Array(16));
      transform.setIdentity$0();
      t1 = _this._node$_parent;
      if (t1 != null) {
        t2 = type$.RenderObject;
        t2._as(t1);
        for (child = _this, ancestor = t1; ancestor.get$parent(ancestor) != null; child = ancestor, ancestor = t1) {
          if (!ancestor.paintsChild$1(child))
            return new A.VisibilityInfo(_this.key, new B.Size(bounds.right - bounds.left, bounds.bottom - bounds.top), C.Rect_0_0_0_0);
          t1 = ancestor.get$parent(ancestor);
          t1.toString;
          t2._as(t1);
        }
      }
      ancestors = B._setArrayType([B.ContainerLayer$()], type$.JSArray_ContainerLayer);
      t1 = type$.nullable_ContainerLayer;
      ancestor = layer;
      while (true) {
        if (!(ancestor != null && t1._as(B.AbstractNode.prototype.get$parent.call(ancestor, ancestor)) != null))
          break;
        C.JSArray_methods.add$1(ancestors, ancestor);
        ancestor = t1._as(B.AbstractNode.prototype.get$parent.call(ancestor, ancestor));
      }
      for (index = ancestors.length - 1, clip = C.Rect_aha; index > 0;) {
        t1 = ancestors.length;
        if (!(index < t1))
          return B.ioore(ancestors, index);
        $parent = ancestors[index];
        --index;
        if (!(index < t1))
          return B.ioore(ancestors, index);
        child = ancestors[index];
        parentClip = $parent.describeClipBounds$0();
        if (parentClip != null)
          clip = clip.intersect$1(B.MatrixUtils_transformRect(transform, parentClip));
        $parent.applyTransform$2(child, transform);
      }
      t1 = _this.RenderVisibilityDetectorBase__lastPaintClipBounds;
      if (t1 != null)
        clip = clip.intersect$1(B.MatrixUtils_transformRect(transform, t1));
      t1 = _this.RenderVisibilityDetectorBase__lastPaintTransform;
      if (t1 != null)
        transform.multiply$1(0, t1);
      t1 = B.MatrixUtils_transformRect(transform, bounds);
      visibleBounds = t1.overlaps$1(clip) ? t1.intersect$1(clip).shift$1(new B.Offset(-t1.left, -t1.top)) : C.Rect_0_0_0_0;
      return new A.VisibilityInfo(_this.key, new B.Size(t1.right - t1.left, t1.bottom - t1.top), visibleBounds);
    },
    set$_compositionCallbackCanceller(_compositionCallbackCanceller) {
      this.RenderVisibilityDetectorBase__compositionCallbackCanceller = type$.nullable_void_Function._as(_compositionCallbackCanceller);
    },
    set$_onVisibilityChanged(_onVisibilityChanged) {
      this.RenderVisibilityDetectorBase__onVisibilityChanged = type$.nullable_void_Function_VisibilityInfo._as(_onVisibilityChanged);
    }
  };
  A.RenderVisibilityDetector.prototype = {};
  A._RenderVisibilityDetector_RenderProxyBox_RenderVisibilityDetectorBase.prototype = {
    paint$2(context, offset) {
      var t1, _this = this;
      if (_this.RenderVisibilityDetectorBase__onVisibilityChanged != null) {
        _this.RenderVisibilityDetectorBase__lastPaintClipBounds = context.get$canvas(context).getLocalClipBounds$0();
        t1 = new B.Matrix4(context.get$canvas(context).getTransform$0());
        t1.translate$3(0, offset._dx, offset._dy, 0);
        _this.RenderVisibilityDetectorBase__lastPaintTransform = t1;
        t1 = _this.RenderVisibilityDetectorBase__compositionCallbackCanceller;
        if (t1 != null)
          t1.call$0();
        _this.set$_compositionCallbackCanceller(context._containerLayer.addCompositionCallback$1(type$.void_Function_Layer._as(new A._RenderVisibilityDetector_RenderProxyBox_RenderVisibilityDetectorBase_paint_closure(_this))));
      }
      _this.super$RenderProxyBoxMixin$paint(context, offset);
    },
    dispose$0() {
      var _this = this,
        t1 = _this.RenderVisibilityDetectorBase__compositionCallbackCanceller;
      if (t1 != null)
        t1.call$0();
      _this.set$_compositionCallbackCanceller(null);
      _this.RenderVisibilityDetectorBase__disposed = true;
      _this.super$RenderObject$dispose();
    }
  };
  A.VisibilityDetector.prototype = {
    createRenderObject$1(context) {
      var _null = null,
        t1 = this.key;
      t1.toString;
      t1 = new A.RenderVisibilityDetector(t1, _null, _null, 0, _null, _null, false, _null, B.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(_null);
      t1.set$_onVisibilityChanged(this.onVisibilityChanged);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$.RenderVisibilityDetector._as(renderObject).set$onVisibilityChanged(this.onVisibilityChanged);
    }
  };
  A.VisibilityInfo.prototype = {
    get$visibleFraction() {
      var visibleFraction,
        t1 = this.visibleBounds,
        t2 = this.size,
        maxVisibleArea = t2._dx * t2._dy;
      if (A._floatNear(maxVisibleArea, 0))
        return 0;
      visibleFraction = (t1.right - t1.left) * (t1.bottom - t1.top) / maxVisibleArea;
      if (A._floatNear(visibleFraction, 0))
        visibleFraction = 0;
      else if (A._floatNear(visibleFraction, 1))
        visibleFraction = 1;
      return visibleFraction;
    },
    toString$0(_) {
      return "VisibilityInfo(key: " + this.key.toString$0(0) + ", size: " + this.size.toString$0(0) + " visibleBounds: " + this.visibleBounds.toString$0(0) + ")";
    },
    get$hashCode(_) {
      return B.Object_hash(this.key, this.size, this.visibleBounds, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.VisibilityInfo && other.key.$eq(0, this.key) && other.size.$eq(0, this.size) && other.visibleBounds.$eq(0, this.visibleBounds);
    }
  };
  A.VisibilityDetectorController.prototype = {};
  var typesOffset = hunkHelpers.updateTypes(["~()", "~(RequestOptions,RequestInterceptorHandler)", "~(Response<@>,ResponseInterceptorHandler)", "~(DioError,ErrorInterceptorHandler)", "bool(_Highlight)", "Future<InterceptorState<@>>()", "NetListBean(@)", "~(TapDownDetails)", "~(Response<@>)", "0&(DioError)", "@(@,StackTrace)(~(DioError,ErrorInterceptorHandler))", "@(@)(~(RequestOptions,RequestInterceptorHandler))", "Future<~>(DioError)", "~(Object?)", "~(TapUpDetails)", "~(DragStartDetails)", "~(DragUpdateDetails)", "~(DragEndDetails)", "~(ImageInfo,bool)", "InterceptorState<RequestOptions>()", "NetObjectBean(@)", "NetObjectDatas(@)", "Map<String,@>(NetObjectDatas)", "AutoDisposePage(BuildContext)", "GetBuilder<MainLogic>(int)", "Future<1^>(1^/(0^),0^{debugLabel:String?})<Object?,Object?>", "CupertinoSwitch(MainLogic)", "~(VisibilityInfo)", "MediaType()", "~(Level,bool)", "int(_Line)", "@(@)(~(Response<@>,ResponseInterceptorHandler))", "Object(_Line)", "Object(_Highlight)", "int(_Highlight,_Highlight)", "List<_Line>(MapEntry<Object,List<_Highlight>>)", "SourceSpanWithContext()", "@(String)", "Container(MainLogic)"]);
  A.Future_any_onValue.prototype = {
    call$1(value) {
      var t1;
      this.T._as(value);
      t1 = this.completer;
      if ((t1.future._state & 30) === 0)
        t1.complete$1(0, value);
    },
    $signature() {
      return this.T._eval$1("~(0)");
    }
  };
  A.Future_any_onError.prototype = {
    call$2(error, stack) {
      var t1;
      type$.Object._as(error);
      type$.StackTrace._as(stack);
      t1 = this.completer;
      if ((t1.future._state & 30) === 0)
        t1.completeError$2(error, stack);
    },
    $signature: 46
  };
  A._StreamHandlerTransformer_closure.prototype = {
    call$1(outputSink) {
      var _this = this,
        t1 = _this.T;
      return new A._HandlerEventSink(_this.handleData, _this.handleError, _this.handleDone, t1._eval$1("EventSink<0>")._as(outputSink), _this.S._eval$1("@<0>")._bind$1(t1)._eval$1("_HandlerEventSink<1,2>"));
    },
    $signature() {
      return this.S._eval$1("@<0>")._bind$1(this.T)._eval$1("_HandlerEventSink<1,2>(EventSink<2>)");
    }
  };
  A.DateTime_parse_parseIntOrZero.prototype = {
    call$1(matched) {
      if (matched == null)
        return 0;
      return B.int_parse(matched, null);
    },
    $signature: 150
  };
  A.DateTime_parse_parseMilliAndMicroseconds.prototype = {
    call$1(matched) {
      var t1, result, i;
      if (matched == null)
        return 0;
      for (t1 = matched.length, result = 0, i = 0; i < 6; ++i) {
        result *= 10;
        if (i < t1)
          result += C.JSString_methods._codeUnitAt$1(matched, i) ^ 48;
      }
      return result;
    },
    $signature: 150
  };
  A.CanonicalizedMap_addAll_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this,
        t2 = t1.$ti;
      t2._eval$1("CanonicalizedMap.K")._as(key);
      t2._eval$1("CanonicalizedMap.V")._as(value);
      t1.$indexSet(0, key, value);
      return value;
    },
    $signature() {
      return this.$this.$ti._eval$1("~(CanonicalizedMap.K,CanonicalizedMap.V)");
    }
  };
  A.CanonicalizedMap_entries_closure.prototype = {
    call$1(e) {
      var t1 = this.$this.$ti;
      t1._eval$1("MapEntry<CanonicalizedMap.C,MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>")._as(e);
      return new B.MapEntry(J.get$key$x(e.get$value(e)), J.get$value$z(e.get$value(e)), t1._eval$1("@<CanonicalizedMap.K>")._bind$1(t1._eval$1("CanonicalizedMap.V"))._eval$1("MapEntry<1,2>"));
    },
    $signature() {
      return this.$this.$ti._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>(MapEntry<CanonicalizedMap.C,MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>)");
    }
  };
  A.CanonicalizedMap_forEach_closure.prototype = {
    call$2(key, pair) {
      var t1 = this.$this.$ti;
      t1._eval$1("CanonicalizedMap.C")._as(key);
      t1._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>")._as(pair);
      return this.f.call$2(pair.get$key(pair), pair.get$value(pair));
    },
    $signature() {
      return this.$this.$ti._eval$1("~(CanonicalizedMap.C,MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)");
    }
  };
  A.CanonicalizedMap_keys_closure.prototype = {
    call$1(pair) {
      this.$this.$ti._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>")._as(pair);
      return pair.get$key(pair);
    },
    $signature() {
      return this.$this.$ti._eval$1("CanonicalizedMap.K(MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)");
    }
  };
  A.CanonicalizedMap_map_closure.prototype = {
    call$2(_, pair) {
      var t1 = this.$this.$ti;
      t1._eval$1("CanonicalizedMap.C")._as(_);
      t1._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>")._as(pair);
      return this.transform.call$2(pair.get$key(pair), pair.get$value(pair));
    },
    $signature() {
      return this.$this.$ti._bind$1(this.K2)._bind$1(this.V2)._eval$1("MapEntry<1,2>(CanonicalizedMap.C,MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)");
    }
  };
  A.CanonicalizedMap_putIfAbsent_closure.prototype = {
    call$0() {
      var t1 = this.$this.$ti;
      return new B.MapEntry(this.key, this.ifAbsent.call$0(), t1._eval$1("@<CanonicalizedMap.K>")._bind$1(t1._eval$1("CanonicalizedMap.V"))._eval$1("MapEntry<1,2>"));
    },
    $signature() {
      return this.$this.$ti._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>()");
    }
  };
  A.CanonicalizedMap_values_closure.prototype = {
    call$1(pair) {
      this.$this.$ti._eval$1("MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>")._as(pair);
      return pair.get$value(pair);
    },
    $signature() {
      return this.$this.$ti._eval$1("CanonicalizedMap.V(MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)");
    }
  };
  A.BrowserHttpClientAdapter_fetch_closure.prototype = {
    call$2(key, v) {
      return this.xhr.setRequestHeader(B._asString(key), B.S(v));
    },
    $signature: 18
  };
  A.BrowserHttpClientAdapter_fetch_closure0.prototype = {
    call$1(_) {
      var t1, body, t2, t3, t4, t5, t6, t7, _null = null;
      type$.ProgressEvent._as(_);
      t1 = this.xhr;
      body = B.NativeUint8List_NativeUint8List$view(type$.ByteBuffer._as(B._convertNativeToDart_XHR_Response(t1.response)), 0, _null);
      t2 = t1.status;
      t2.toString;
      t3 = C.HttpRequest_methods.get$responseHeaders(t1);
      t4 = type$.String;
      t3 = t3.map$2$1(t3, new A.BrowserHttpClientAdapter_fetch__closure(), t4, type$.List_String);
      t5 = t1.statusText;
      t1 = t1.status;
      t1 = t1 === 302 || t1 === 301;
      t6 = type$._AsyncStreamController_Uint8List;
      t7 = new B._AsyncStreamController(_null, _null, _null, _null, t6);
      t7._async$_add$1(0, new Uint8Array(B._ensureNativeList(body)));
      t7._closeUnchecked$0();
      this.completer.complete$1(0, new A.ResponseBody(new B._ControllerStream(t7, t6._eval$1("_ControllerStream<1>")), t3, t2, t5, t1, B.LinkedHashMap_LinkedHashMap$_empty(t4, type$.dynamic)));
    },
    $signature: 151
  };
  A.BrowserHttpClientAdapter_fetch__closure.prototype = {
    call$2(k, v) {
      return new B.MapEntry(B._asString(k), B._setArrayType(B._asString(v).split(","), type$.JSArray_String), type$.MapEntry_of_String_and_List_String);
    },
    $signature: 403
  };
  A.BrowserHttpClientAdapter_fetch_closure1.prototype = {
    call$0() {
      var t2, t3, _this = this,
        t1 = _this.completer;
      if ((t1.future._state & 30) === 0) {
        _this.xhr.abort();
        t1.completeError$2(A.DioError$connectionTimeout(_this.options, _this.connectionTimeout), B.StackTrace_current());
        return;
      }
      _this.xhr.abort();
      t2 = _this.options;
      t3 = t2.OptionsMixin__connectTimeout;
      t3.toString;
      t1.completeError$2(A.DioError$connectionTimeout(t2, t3), B.StackTrace_current());
    },
    $signature: 0
  };
  A.BrowserHttpClientAdapter_fetch_closure2.prototype = {
    call$1($event) {
      var t1, t2, sendTimeout, _this = this;
      type$.ProgressEvent._as($event);
      t1 = _this._box_0;
      t2 = t1.connectTimeoutTimer;
      if (t2 != null) {
        t2.cancel$0(0);
        t1.connectTimeoutTimer = null;
      }
      t1 = _this.options;
      sendTimeout = t1._sendTimeout;
      if (sendTimeout != null) {
        t2 = _this.uploadStopwatch;
        if (t2._stop != null)
          t2.start$0(0);
        if (B.Duration$(t2.get$elapsedMicroseconds(), 0, 0)._duration > sendTimeout._duration) {
          if (t2._stop == null)
            t2._stop = $.Primitives_timerTicks.call$0();
          _this.completer.completeError$2(new A.DioError(t1, null, D.DioErrorType_1, null, null, "The request took longer than " + sendTimeout.toString$0(0) + " to send data. It was aborted."), B.StackTrace_current());
          _this.xhr.abort();
        }
      }
    },
    $signature: 152
  };
  A.BrowserHttpClientAdapter_fetch_closure3.prototype = {
    call$1($event) {
      var t1, t2, receiveTimeout, _this = this;
      type$.ProgressEvent._as($event);
      t1 = _this._box_0;
      t2 = t1.connectTimeoutTimer;
      if (t2 != null) {
        t2.cancel$0(0);
        t1.connectTimeoutTimer = null;
      }
      t1 = _this.options;
      receiveTimeout = t1._receiveTimeout;
      if (receiveTimeout != null) {
        t2 = _this.uploadStopwatch;
        if (t2._stop != null)
          t2.start$0(0);
        t2 = _this.downloadStopwatch;
        if (B.Duration$(t2.get$elapsedMicroseconds(), 0, 0)._duration > receiveTimeout._duration) {
          if (t2._stop == null)
            t2._stop = $.Primitives_timerTicks.call$0();
          t2 = t1._receiveTimeout.toString$0(0);
          _this.completer.completeError$2(new A.DioError(t1, null, D.DioErrorType_2, null, null, "The request took longer than " + t2 + " to receive data. It was aborted."), B.StackTrace_current());
          _this.xhr.abort();
        }
      }
    },
    $signature: 152
  };
  A.BrowserHttpClientAdapter_fetch_closure4.prototype = {
    call$1(_) {
      var t1;
      type$.ProgressEvent._as(_);
      t1 = this._box_0.connectTimeoutTimer;
      if (t1 != null)
        t1.cancel$0(0);
      this.completer.completeError$2(A.DioError$connectionError("The XMLHttpRequest onError callback was called. This typically indicates an error on the network layer.", this.options), B.StackTrace_current());
    },
    $signature: 151
  };
  A.BrowserHttpClientAdapter_fetch_closure5.prototype = {
    call$1(_) {
      var exception, _this = this,
        t1 = _this.xhr,
        t2 = t1.readyState;
      if (t2 < 4 && t2 > 0) {
        t2 = _this._box_0.connectTimeoutTimer;
        if (t2 != null)
          t2.cancel$0(0);
        try {
          t1.abort();
        } catch (exception) {
        }
        t1 = _this.completer;
        if ((t1.future._state & 30) === 0)
          t1.completeError$1(new A.DioError(_this.options, null, D.DioErrorType_5, "The XMLHttpRequest was aborted.", null, "The request was cancelled."));
      }
    },
    $signature: 17
  };
  A.BrowserHttpClientAdapter_fetch_closure6.prototype = {
    call$1(bytes) {
      return this.completer.complete$1(0, new Uint8Array(B._ensureNativeList(type$.List_int._as(bytes))));
    },
    $signature: 405
  };
  A.BrowserHttpClientAdapter_fetch_closure7.prototype = {
    call$2(e, s) {
      return this.completer.completeError$2(type$.Object._as(e), type$.StackTrace._as(s));
    },
    $signature: 46
  };
  A.BrowserHttpClientAdapter_fetch_closure8.prototype = {
    call$0() {
      this.$this.xhrs.remove$1(0, this.xhr);
    },
    $signature: 4
  };
  A.DioMixin_fetch_requestInterceptorWrapper.prototype = {
    call$1(interceptor) {
      return new A.DioMixin_fetch_requestInterceptorWrapper_closure(this._box_1, type$.void_Function_RequestOptions_RequestInterceptorHandler._as(interceptor));
    },
    $signature: typesOffset + 11
  };
  A.DioMixin_fetch_requestInterceptorWrapper_closure.prototype = {
    call$1(incomingState) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, t1;
      var $async$call$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              type$.InterceptorState_dynamic._as(incomingState);
              if (incomingState.type === D.InterceptorResultType_0) {
                t1 = type$.dynamic;
                $async$returnValue = A.DioMixin_listenCancelForAsyncTask($async$self._box_1.requestOptions.cancelToken, B.Future_Future(new A.DioMixin_fetch_requestInterceptorWrapper__closure($async$self.interceptor, incomingState), t1), t1);
                // goto return
                $async$goto = 1;
                break;
              } else {
                $async$returnValue = incomingState;
                // goto return
                $async$goto = 1;
                break;
              }
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 153
  };
  A.DioMixin_fetch_requestInterceptorWrapper__closure.prototype = {
    call$0() {
      var t1 = new B._Future($.Zone__current, type$._Future_InterceptorState_dynamic);
      this.interceptor.call$2(type$.RequestOptions._as(this.state.data), new A.RequestInterceptorHandler(new B._AsyncCompleter(t1, type$._AsyncCompleter_InterceptorState_dynamic)));
      return t1;
    },
    $signature: typesOffset + 5
  };
  A.DioMixin_fetch_responseInterceptorWrapper.prototype = {
    call$1(interceptor) {
      return new A.DioMixin_fetch_responseInterceptorWrapper_closure(this._box_1, type$.void_Function_2_Response_dynamic_and_ResponseInterceptorHandler._as(interceptor));
    },
    $signature: typesOffset + 31
  };
  A.DioMixin_fetch_responseInterceptorWrapper_closure.prototype = {
    call$1(incomingState) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, t1;
      var $async$call$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              type$.InterceptorState_dynamic._as(incomingState);
              t1 = incomingState.type;
              if (t1 === D.InterceptorResultType_0 || t1 === D.InterceptorResultType_2) {
                t1 = type$.dynamic;
                $async$returnValue = A.DioMixin_listenCancelForAsyncTask($async$self._box_1.requestOptions.cancelToken, B.Future_Future(new A.DioMixin_fetch_responseInterceptorWrapper__closure($async$self.interceptor, incomingState), t1), t1);
                // goto return
                $async$goto = 1;
                break;
              } else {
                $async$returnValue = incomingState;
                // goto return
                $async$goto = 1;
                break;
              }
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 153
  };
  A.DioMixin_fetch_responseInterceptorWrapper__closure.prototype = {
    call$0() {
      var t1 = new B._Future($.Zone__current, type$._Future_InterceptorState_dynamic);
      this.interceptor.call$2(type$.Response_dynamic._as(this.state.data), new A.ResponseInterceptorHandler(new B._AsyncCompleter(t1, type$._AsyncCompleter_InterceptorState_dynamic)));
      return t1;
    },
    $signature: typesOffset + 5
  };
  A.DioMixin_fetch_errorInterceptorWrapper.prototype = {
    call$1(interceptor) {
      return new A.DioMixin_fetch_errorInterceptorWrapper_closure(this._box_1, type$.void_Function_DioError_ErrorInterceptorHandler._as(interceptor));
    },
    $signature: typesOffset + 10
  };
  A.DioMixin_fetch_errorInterceptorWrapper_closure.prototype = {
    call$2(err, stackTrace) {
      var t2, t3, t1 = {};
      t1.err = err;
      type$.StackTrace._as(stackTrace);
      if (!(err instanceof A.InterceptorState)) {
        t2 = err == null ? type$.Object._as(err) : err;
        t2 = t1.err = new A.InterceptorState(A.DioMixin_assureDioError(t2, this._box_1.requestOptions, stackTrace), D.InterceptorResultType_0, type$.InterceptorState_DioError);
      } else
        t2 = err;
      t3 = t2.type;
      if (t3 === D.InterceptorResultType_0 || t3 === D.InterceptorResultType_4) {
        t2 = type$.dynamic;
        return A.DioMixin_listenCancelForAsyncTask(this._box_1.requestOptions.cancelToken, B.Future_Future(new A.DioMixin_fetch_errorInterceptorWrapper__closure(t1, this.interceptor), t2), t2);
      } else
        throw B.wrapException(t2);
    },
    $signature: 407
  };
  A.DioMixin_fetch_errorInterceptorWrapper__closure.prototype = {
    call$0() {
      var t1 = new B._Future($.Zone__current, type$._Future_InterceptorState_dynamic);
      this.interceptor.call$2(type$.DioError._as(J.get$data$x(this._box_0.err)), new A.ErrorInterceptorHandler(new B._AsyncCompleter(t1, type$._AsyncCompleter_InterceptorState_dynamic)));
      return t1;
    },
    $signature: typesOffset + 5
  };
  A.DioMixin_fetch_closure.prototype = {
    call$0() {
      return new A.InterceptorState(this._box_1.requestOptions, D.InterceptorResultType_0, type$.InterceptorState_RequestOptions);
    },
    $signature: typesOffset + 19
  };
  A.DioMixin_fetch_closure0.prototype = {
    call$2(reqOpt, handler) {
      this._box_1.requestOptions = reqOpt;
      this.$this._dispatchRequest$1$1(reqOpt, this.T).then$1$1(new A.DioMixin_fetch__closure(handler), type$.void).catchError$1(new A.DioMixin_fetch__closure0(handler));
    },
    $signature: typesOffset + 1
  };
  A.DioMixin_fetch__closure.prototype = {
    call$1(value) {
      type$.Response_dynamic._as(value);
      this.handler._dio_mixin$_completer.complete$1(0, new A.InterceptorState(value, D.InterceptorResultType_2, type$.InterceptorState_Response_dynamic));
      return null;
    },
    $signature: typesOffset + 8
  };
  A.DioMixin_fetch__closure0.prototype = {
    call$1(e) {
      type$.DioError._as(e);
      this.handler._dio_mixin$_completer.completeError$2(new A.InterceptorState(e, D.InterceptorResultType_4, type$.InterceptorState_DioError), e.stackTrace);
    },
    $signature: 13
  };
  A.DioMixin_fetch_closure1.prototype = {
    call$1(data) {
      var t1 = data instanceof A.InterceptorState ? data.data : data;
      if (t1 == null)
        t1 = type$.Object._as(t1);
      return A.DioMixin_assureResponse(t1, this._box_1.requestOptions, this.T);
    },
    $signature() {
      return this.T._eval$1("Response<0>(@)");
    }
  };
  A.DioMixin_fetch_closure2.prototype = {
    call$2(e, s) {
      var isState, t1;
      type$.StackTrace._as(s);
      isState = e instanceof A.InterceptorState;
      if (isState)
        if (e.type === D.InterceptorResultType_1) {
          t1 = e.data;
          return A.DioMixin_assureResponse(t1, this._box_1.requestOptions, this.T);
        }
      t1 = isState ? e.data : e;
      if (t1 == null)
        t1 = type$.Object._as(t1);
      throw B.wrapException(A.DioMixin_assureDioError(t1, this._box_1.requestOptions, s));
    },
    $signature() {
      return this.T._eval$1("Response<0>(@,StackTrace)");
    }
  };
  A.DioMixin_listenCancelForAsyncTask_closure.prototype = {
    call$1(e) {
      return B.throwExpression(type$.DioError._as(e));
    },
    $signature: typesOffset + 9
  };
  A.Headers$fromMap_closure.prototype = {
    call$2(k, v) {
      B._asString(k);
      type$.List_String._as(v);
      return new B.MapEntry(C.JSString_methods.trim$0(k).toLowerCase(), v, type$.MapEntry_of_String_and_List_String);
    },
    $signature: 408
  };
  A.Headers_toString_closure.prototype = {
    call$2(key, value) {
      var t1, t2, t3;
      B._asString(key);
      for (t1 = J.get$iterator$ax(type$.List_String._as(value)), t2 = this.stringBuffer, t3 = key + ": "; t1.moveNext$0();)
        t2._contents += t3 + t1.get$current(t1) + "\n";
    },
    $signature: 154
  };
  A.LogInterceptor_onRequest_closure.prototype = {
    call$2(key, v) {
      B.print(" " + B._asString(key) + ": " + B.S(v));
      return null;
    },
    $signature: 18
  };
  A.LogInterceptor__printResponse_closure.prototype = {
    call$2(key, v) {
      B.print(" " + key + ": " + J.join$1$ax(type$.List_String._as(v), "\r\n\t"));
      return null;
    },
    $signature: 154
  };
  A._RequestConfig_closure.prototype = {
    call$1($status) {
      return $status >= 200 && $status < 300;
    },
    $signature: 410
  };
  A.Transformer_urlEncodeMap_closure.prototype = {
    call$2(key, value) {
      if (value == null)
        return key;
      return key + "=" + B._Uri__uriEncode(C.List_nxB, J.toString$0$(value), C.C_Utf8Codec, true);
    },
    $signature: 411
  };
  A.SyncTransformer_transformResponse_closure.prototype = {
    call$2(data, sink) {
      var t1;
      type$.Uint8List._as(data);
      type$.EventSink_Uint8List._as(sink);
      t1 = sink._async$_sink;
      data = t1.$ti._rest[1]._as(sink.$ti._precomputed1._as(data));
      if ((t1._state & 2) !== 0)
        B.throwExpression(B.StateError$("Stream is already closed"));
      t1.super$_BufferingStreamSubscription$_add(0, data);
      if (this.showDownloadProgress) {
        t1 = this._box_0;
        t1.received = t1.received + data.length;
      }
    },
    $signature: 412
  };
  A.SyncTransformer_transformResponse_closure0.prototype = {
    call$1(chunk) {
      var t1;
      type$.Uint8List._as(chunk);
      t1 = this._box_0;
      t1.finalSize = t1.finalSize + chunk.length;
      C.JSArray_methods.add$1(this.chunks, chunk);
    },
    $signature: 413
  };
  A.SyncTransformer_transformResponse_closure2.prototype = {
    call$2(error, stackTrace) {
      this.completer.completeError$2(type$.Object._as(error), type$.StackTrace._as(stackTrace));
    },
    $signature: 41
  };
  A.SyncTransformer_transformResponse_closure1.prototype = {
    call$0() {
      return this.completer.complete$0(0);
    },
    $signature: 0
  };
  A.SyncTransformer_transformResponse_closure3.prototype = {
    call$1(_) {
      type$.DioError._as(_);
      return this.subscription.cancel$0(0);
    },
    $signature: typesOffset + 12
  };
  A.encodeMap_urlEncode.prototype = {
    call$2(sub, path) {
      var t2, t3, t4, t5, t6, t7, i, isCollection, t8, str, isNotEmpty, _this = this,
        format = _this.listFormat,
        separatorChar = A._getSeparatorChar(format),
        t1 = type$.List_dynamic;
      if (t1._is(sub))
        if (format === D.ListFormat_4 || format === D.ListFormat_5)
          for (t2 = J.getInterceptor$asx(sub), t3 = _this.rightBracket, t4 = _this.leftBracket, t5 = path + t4, t6 = format === D.ListFormat_4, t7 = type$.Map_dynamic_dynamic, i = 0; i < t2.get$length(sub); ++i) {
            if (!t7._is(t2.$index(sub, i)))
              if (!t1._is(t2.$index(sub, i))) {
                t2.$index(sub, i);
                isCollection = false;
              } else
                isCollection = true;
            else
              isCollection = true;
            if (t6) {
              t8 = t2.$index(sub, i);
              _this.call$2(t8, path + (isCollection ? t4 + i + t3 : ""));
            } else {
              t8 = t2.$index(sub, i);
              _this.call$2(t8, t5 + B.S(isCollection ? i : "") + t3);
            }
          }
        else
          _this.call$2(J.join$1$ax(sub, separatorChar), path);
      else if (type$.Map_dynamic_dynamic._is(sub))
        J.forEach$1$ax(sub, new A.encodeMap_urlEncode_closure(path, _this, _this.encodeComponent, _this.leftBracket, _this.rightBracket));
      else {
        str = _this.handler.call$2(path, sub);
        isNotEmpty = str != null && C.JSString_methods.trim$0(str).length !== 0;
        t1 = _this._box_0;
        if (!t1.first && isNotEmpty)
          _this.urlData._contents += "&";
        t1.first = false;
        if (isNotEmpty)
          _this.urlData._contents += B.S(str);
      }
    },
    $signature: 414
  };
  A.encodeMap_urlEncode_closure.prototype = {
    call$2(k, v) {
      var _this = this,
        t1 = _this.path,
        t2 = _this.urlEncode,
        t3 = _this.encodeComponent;
      if (t1 === "")
        t2.call$2(v, B.S(t3.call$1(B._asString(k))));
      else
        t2.call$2(v, t1 + _this.leftBracket + B.S(t3.call$1(B._asString(k))) + _this.rightBracket);
    },
    $signature: 62
  };
  A.caseInsensitiveKeyMap_closure.prototype = {
    call$2(key1, key2) {
      return B._asString(key1).toLowerCase() === B._asString(key2).toLowerCase();
    },
    $signature: 415
  };
  A.caseInsensitiveKeyMap_closure0.prototype = {
    call$1(key) {
      return C.JSString_methods.get$hashCode(B._asString(key).toLowerCase());
    },
    $signature: 416
  };
  A._CupertinoSwitchState__handleDragEnd_closure.prototype = {
    call$0() {
      this.$this.needsPositionAnimation = true;
    },
    $signature: 0
  };
  A._RenderCupertinoSwitch_paint_closure.prototype = {
    call$2(innerContext, offset) {
      this.$this._thumbPainter.paint$2(innerContext.get$canvas(innerContext), this.thumbBounds);
    },
    $signature: 11
  };
  A.JsonConvert_convertListNotNull_closure.prototype = {
    call$1(e) {
      var t1 = this.$this.asT$1$1(e, this.T);
      t1.toString;
      return t1;
    },
    $signature() {
      return this.T._eval$1("0(@)");
    }
  };
  A.JsonConvert__getListChildType_closure.prototype = {
    call$1(e) {
      return A.$NetListBeanFromJson(type$.Map_String_dynamic._as(e));
    },
    $signature: typesOffset + 6
  };
  A.JsonConvert__getListChildType_closure0.prototype = {
    call$1(e) {
      return A.$NetObjectBeanFromJson(type$.Map_String_dynamic._as(e));
    },
    $signature: typesOffset + 20
  };
  A.JsonConvert__getListChildType_closure1.prototype = {
    call$1(e) {
      return A.$NetObjectDatasFromJson(type$.Map_String_dynamic._as(e));
    },
    $signature: typesOffset + 21
  };
  A.$NetObjectBeanToJson_closure.prototype = {
    call$1(v) {
      return A.$NetObjectDatasToJson(type$.NetObjectDatas._as(v));
    },
    $signature: typesOffset + 22
  };
  A.testHttp_closure.prototype = {
    call$1(e) {
      return A.$NetListBeanFromJson(type$.Map_String_dynamic._as(e));
    },
    $signature: typesOffset + 6
  };
  A.NetUtil_request_closure.prototype = {
    call$1(value) {
      return B.LinkedHashSet_LinkedHashSet$_literal([this.completer.complete$1(0, this.T._eval$1("Response<0>")._as(value).data)], type$.void);
    },
    $signature() {
      return this.T._eval$1("Set<~>(Response<0>)");
    }
  };
  A.NetUtil_request_closure0.prototype = {
    call$1(error) {
      var t1 = this.completer,
        t2 = t1.complete$1(0, null);
      return B.LinkedHashSet_LinkedHashSet$_literal([t2, t1.completeError$1(error == null ? type$.Object._as(error) : error)], type$.void);
    },
    $signature: 417
  };
  A.NetUtil_request_closure1.prototype = {
    call$0() {
      return null;
    },
    $signature: 4
  };
  A.AutoDisposePage_build_closure.prototype = {
    call$0() {
      var _null = null,
        t1 = this.$this.logic.count;
      return B.Text$("\u70b9\u51fb\u4e86 " + B.S(t1.get$value(t1)) + " \u6b21", _null, _null, _null, B.TextStyle$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, 30, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null), _null, _null);
    },
    $signature: 40
  };
  A.AutoDisposePage_build_closure0.prototype = {
    call$0() {
      var t1 = this.$this.logic,
        t2 = t1.count,
        t3 = t2.get$value(t2);
      if (typeof t3 !== "number")
        return t3.$add();
      t2.set$value(0, t3 + 1);
      return t1.count = t2;
    },
    $signature: 0
  };
  A.ExampleLogic_toFun_closure.prototype = {
    call$1(context) {
      var t1, t2, _null = null;
      type$.BuildContext._as(context);
      t1 = $.$get$Get();
      t2 = type$.InternalFinalCallback_void;
      t2 = new A.AutoDisposeLogic(P.RxInt$(0), B._setArrayType([], type$.JSArray_of_nullable_void_Function), B.HashMap_HashMap(_null, _null, _null, type$.nullable_Object, type$.List_of_void_Function), new B.InternalFinalCallback(t2), new B.InternalFinalCallback(t2), false, false);
      t2.$$configureLifeCycle$0();
      return new A.AutoDisposePage(K.Inst_put(t1, t2, type$.AutoDisposeLogic), _null);
    },
    $signature: typesOffset + 23
  };
  A.ExamplePage_build_closure.prototype = {
    call$1(tag) {
      return this.logic.toFun$2(this.context, tag);
    },
    $signature: 33
  };
  A.FunctionPage_build_closure.prototype = {
    call$1(tag) {
      var t1, _null = null;
      switch (B._asString(tag)) {
        case "smartDialog":
          B.GetNavigation_toNamed($.$get$Get(), "/smartDialog", _null, type$.dynamic);
          break;
        case "himalaya":
          B.GetNavigation_toNamed($.$get$Get(), "/himalaya", _null, type$.dynamic);
          break;
        case "animation":
          B.GetNavigation_toNamed($.$get$Get(), "/animation", _null, type$.dynamic);
          break;
        default:
          t1 = this.context.dependOnInheritedWidgetOfExactType$1$0(type$._ScaffoldMessengerScope);
          t1.toString;
          t1._scaffoldMessengerState.showSnackBar$1(Y.SnackBar$(_null, _null, _null, _null, C.Clip_1, _null, B.Text$("\u6682\u65e0", _null, _null, _null, _null, _null, _null), Z.DismissDirection_5, C.Duration_1000000, _null, _null, _null, _null, _null, _null, _null, _null));
          break;
      }
      return _null;
    },
    $signature: 33
  };
  A.FunctionCard_build_closure.prototype = {
    call$1(index) {
      var item, t3, t4, _null = null,
        t1 = this.$this,
        t2 = t1.data;
      if (!(index < t2.length))
        return B.ioore(t2, index);
      item = t2[index];
      t2 = item.bg;
      t2 = B.SizedBox$(F.Image$network(t2 == null ? "" : t2, H.BoxFit_3, _null, _null), 200, 400);
      if (!item.selected) {
        t3 = B.BorderRadius$circular(100);
        t4 = $.$get$_renderer().createBlurImageFilter$3$sigmaX$sigmaY$tileMode(3, 3, C.TileMode_0);
        t4 = F.ClipRRect$(t3, B.SizedBox$(B.ClipRect$(B.BackdropFilter$(B.Container$(_null, _null, C.Clip_0, B.Color$fromARGB(C.JSNumber_methods.round$0(25.5), 0, 0, 0), _null, _null, _null, _null, _null, _null, _null), t4), C.Clip_1, _null), 50, 150), C.Clip_2);
        t3 = t4;
      } else
        t3 = B.Container$(_null, _null, C.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null);
      if (!item.selected) {
        t4 = item.title;
        t4 = B.Center$(B.Text$(t4, _null, _null, _null, D.TextStyle_E9t, _null, _null), _null, _null);
      } else
        t4 = B.Container$(_null, _null, C.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null);
      t1 = type$.List_Widget._as(B._setArrayType([t2, t3, t4, B.Material$(C.Duration_200000, _null, B.InkWell$(false, _null, true, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, new A.FunctionCard_build__closure(t1, item), _null, _null, _null, _null), C.Clip_0, C.Color_0, 0, _null, _null, _null, _null, _null, C.MaterialType_0)], type$.JSArray_Widget));
      t4 = $.AutoUi__instance;
      (t4 == null ? $.AutoUi__instance = new M.AutoUi() : t4).init$0();
      t2 = $.UiUtil__instance;
      return F.ClipRRect$(B.BorderRadius$circular(20 * (t2 == null ? $.UiUtil__instance = M.UiUtil$_internal() : t2).get$scaleWidth()), new B.Stack(C.Alignment_0_0, _null, C.StackFit_0, C.Clip_1, t1, _null), C.Clip_2);
    },
    $signature: 155
  };
  A.FunctionCard_build__closure.prototype = {
    call$0() {
      var t1 = this.item.tag;
      if (t1 == null)
        t1 = "";
      return this.$this.onItem.call$1(t1);
    },
    $signature: 0
  };
  A.MainPage_build_closure.prototype = {
    call$1(index) {
      var t2,
        t1 = this.$this.logic;
      B._asInt(index);
      t2 = t1.state;
      t2.__MainState_selectedIndex_A = index;
      t2 = t2.__MainState_pageController_A;
      t2 === $ && B.throwLateFieldNI("pageController");
      t2.jumpToPage$1(index);
      t1.update$0(0);
      return null;
    },
    $signature: 24
  };
  A.MainPage_build_closure0.prototype = {
    call$1(isScale) {
      var t1, t2, t3;
      B._asBool(isScale);
      t1 = this.$this.logic;
      t2 = t1.state;
      t3 = t2.__MainState_isScale_A;
      t3 === $ && B.throwLateFieldNI("isScale");
      t2.__MainState_isScale_A = !t3;
      t1.update$0(0);
      B.initWindow(isScale ? 1.25 : 1);
      return null;
    },
    $signature: 31
  };
  A.MainPage_build_closure1.prototype = {
    call$2(context, index) {
      var t1;
      type$.BuildContext._as(context);
      B._asInt(index);
      t1 = this.$this.state.__MainState_pageList_A;
      t1 === $ && B.throwLateFieldNI("pageList");
      if (!(index >= 0 && index < 3))
        return B.ioore(t1, index);
      return t1[index];
    },
    $signature: 420
  };
  A._SideNavigation__buildItems_closure.prototype = {
    call$1(index) {
      var t1 = this.$this,
        t2 = t1.data.__MainState_sideItems_A;
      t2 === $ && B.throwLateFieldNI("sideItems");
      if (!(index < 3))
        return B.ioore(t2, index);
      return B.GetBuilder$(new A._SideNavigation__buildItems__closure(t1, index, this.activeColor, t2[index], this.normalColor), null, null, null, type$.MainLogic);
    },
    $signature: typesOffset + 24
  };
  A._SideNavigation__buildItems__closure.prototype = {
    call$1(logic) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _this = this, _null = null;
      type$.MainLogic._as(logic);
      t1 = B.BorderRadius$circular(5);
      t2 = _this.$this;
      t3 = _this.index;
      t4 = B.BorderRadius$circular(5);
      t5 = t2.data.__MainState_selectedIndex_A;
      t5 === $ && B.throwLateFieldNI("selectedIndex");
      t5 = t5 === t3;
      if (t5) {
        t6 = _this.activeColor.value;
        t6 = B.Color$fromARGB(C.JSNumber_methods.round$0(25.5), t6 >>> 16 & 255, t6 >>> 8 & 255, t6 & 255);
      } else
        t6 = _null;
      t7 = _this.item;
      t8 = t7.icon;
      t8 = t8 == null ? _null : t8.icon;
      t8 = B.Icon$(t8, t5 ? _this.activeColor : _this.normalColor, 15);
      return B.Container$(_null, B.InkWell$(false, t1, true, B.Container$(C.Alignment_0_0, B.Row$(B._setArrayType([t8, G.SizedBox_8_null_null_null, B.Text$(t7.title, _null, _null, _null, B.TextStyle$(_null, _null, t5 ? _this.activeColor : _this.normalColor, _null, _null, _null, _null, _null, _null, _null, _null, 13, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null), _null, _null)], type$.JSArray_Widget), C.CrossAxisAlignment_2, C.MainAxisAlignment_0, C.MainAxisSize_1), C.Clip_0, _null, _null, new B.BoxDecoration(t6, _null, _null, t4, _null, _null, _null, C.BoxShape_0), 35, _null, D.EdgeInsets_12_0_0_0, _null, _null), _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, new A._SideNavigation__buildItems___closure(t2, t3), _null, _null, _null, _null), C.Clip_0, _null, _null, _null, _null, G.EdgeInsets_8_10_8_10, _null, _null, _null);
    },
    $signature: typesOffset + 38
  };
  A._SideNavigation__buildItems___closure.prototype = {
    call$0() {
      return this.$this.onItem.call$1(this.index);
    },
    $signature: 0
  };
  A._SideNavigation__buildScale_closure.prototype = {
    call$1(logic) {
      var t1, t2;
      type$.MainLogic._as(logic);
      t1 = this.$this;
      t2 = t1.data.__MainState_isScale_A;
      t2 === $ && B.throwLateFieldNI("isScale");
      return new A.CupertinoSwitch(t2, t1.onScale, C.MaterialColor_Map_JNwaj_4280391411, C.Color_4294967295, C.Color_4294967295, null);
    },
    $signature: typesOffset + 26
  };
  A.SettingPage_build_closure.prototype = {
    call$1(info) {
      var t1 = type$.VisibilityInfo._as(info).get$visibleFraction();
      $.$get$Log__logger().log$4(D.Level_1, t1, null, null);
      return null;
    },
    $signature: typesOffset + 27
  };
  A.CaseInsensitiveMap$from_closure.prototype = {
    call$1(key) {
      return B._asString(key).toLowerCase();
    },
    $signature: 95
  };
  A.MediaType_MediaType$parse_closure.prototype = {
    call$0() {
      var t3, t4, t5, t6, parameters, t7, t8, t9, success, t10, value,
        t1 = this.mediaType,
        scanner = new A.StringScanner0(null, t1),
        t2 = $.$get$whitespace();
      scanner.scan$1(t2);
      t3 = $.$get$token();
      scanner.expect$1(t3);
      t4 = scanner.get$lastMatch().$index(0, 0);
      t4.toString;
      scanner.expect$1("/");
      scanner.expect$1(t3);
      t5 = scanner.get$lastMatch().$index(0, 0);
      t5.toString;
      scanner.scan$1(t2);
      t6 = type$.String;
      parameters = B.LinkedHashMap_LinkedHashMap$_empty(t6, t6);
      t7 = type$.Pattern;
      while (true) {
        t8 = scanner._string_scanner0$_lastMatch = C.JSString_methods.matchAsPrefix$2(";", t1, scanner._string_scanner0$_position);
        t9 = scanner._string_scanner0$_lastMatchPosition = scanner._string_scanner0$_position;
        success = t8 != null;
        t8 = success ? scanner._string_scanner0$_lastMatchPosition = scanner._string_scanner0$_position = t8.get$end(t8) : t9;
        if (!success)
          break;
        t7._as(t2);
        t8 = scanner._string_scanner0$_lastMatch = t2.matchAsPrefix$2(0, t1, t8);
        scanner._string_scanner0$_lastMatchPosition = scanner._string_scanner0$_position;
        if (t8 != null)
          scanner._string_scanner0$_lastMatchPosition = scanner._string_scanner0$_position = t8.get$end(t8);
        scanner.expect$1(t3);
        if (scanner._string_scanner0$_position !== scanner._string_scanner0$_lastMatchPosition)
          scanner._string_scanner0$_lastMatch = null;
        t8 = scanner._string_scanner0$_lastMatch.$index(0, 0);
        t8.toString;
        scanner.expect$1("=");
        t9 = scanner._string_scanner0$_lastMatch = t7._as(t3).matchAsPrefix$2(0, t1, scanner._string_scanner0$_position);
        t10 = scanner._string_scanner0$_lastMatchPosition = scanner._string_scanner0$_position;
        success = t9 != null;
        if (success) {
          t9 = scanner._string_scanner0$_lastMatchPosition = scanner._string_scanner0$_position = t9.get$end(t9);
          t10 = t9;
        } else
          t9 = t10;
        if (success) {
          if (t9 !== t10)
            scanner._string_scanner0$_lastMatch = null;
          t9 = scanner._string_scanner0$_lastMatch.$index(0, 0);
          t9.toString;
          value = t9;
        } else
          value = A.expectQuotedString(scanner);
        t9 = scanner._string_scanner0$_lastMatch = t2.matchAsPrefix$2(0, t1, scanner._string_scanner0$_position);
        scanner._string_scanner0$_lastMatchPosition = scanner._string_scanner0$_position;
        if (t9 != null)
          scanner._string_scanner0$_lastMatchPosition = scanner._string_scanner0$_position = t9.get$end(t9);
        parameters.$indexSet(0, t8, value);
      }
      scanner.expectDone$0();
      t1 = A.CaseInsensitiveMap$from(parameters, t6);
      return new A.MediaType(t4.toLowerCase(), t5.toLowerCase(), new B.UnmodifiableMapView(t1, type$.UnmodifiableMapView_String_String));
    },
    $signature: typesOffset + 28
  };
  A.MediaType_toString_closure.prototype = {
    call$2(attribute, value) {
      var t1, t2, t3;
      B._asString(attribute);
      B._asString(value);
      t1 = this.buffer;
      t1._contents += "; " + attribute + "=";
      t2 = $.$get$nonToken()._nativeRegExp;
      t2 = t2.test(value);
      t3 = t1._contents;
      if (t2) {
        t1._contents = t3 + '"';
        t2 = t1._contents += B.stringReplaceAllFuncUnchecked(value, type$.Pattern._as($.$get$_escapedChar()), type$.nullable_String_Function_Match._as(type$.String_Function_Match._as(new A.MediaType_toString__closure())), type$.nullable_String_Function_String._as(null));
        t1._contents = t2 + '"';
      } else
        t1._contents = t3 + value;
    },
    $signature: 90
  };
  A.MediaType_toString__closure.prototype = {
    call$1(match) {
      return "\\" + B.S(match.$index(0, 0));
    },
    $signature: 59
  };
  A.expectQuotedString_closure.prototype = {
    call$1(match) {
      var t1 = match.$index(0, 1);
      t1.toString;
      return t1;
    },
    $signature: 59
  };
  A.PrettyPrinter_closure.prototype = {
    call$2(k, v) {
      var t1, t2;
      type$.Level._as(k);
      B._asBool(v);
      t1 = this.$this.__PrettyPrinter_includeBox_F;
      t1 === $ && B.throwLateFieldNI("includeBox");
      t2 = !v;
      t1.$indexSet(0, k, t2);
      return t2;
    },
    $signature: typesOffset + 29
  };
  A.Context_joinAll_closure.prototype = {
    call$1(part) {
      return B._asString(part) !== "";
    },
    $signature: 38
  };
  A.Context_split_closure.prototype = {
    call$1(part) {
      return B._asString(part).length !== 0;
    },
    $signature: 38
  };
  A._validateArgList_closure.prototype = {
    call$1(arg) {
      B._asStringQ(arg);
      return arg == null ? "null" : '"' + arg + '"';
    },
    $signature: 421
  };
  A.Highlighter_closure.prototype = {
    call$0() {
      return this.color;
    },
    $signature: 422
  };
  A.Highlighter$__closure.prototype = {
    call$1(line) {
      var t1 = type$._Line._as(line).highlights,
        t2 = B._arrayInstanceType(t1);
      t2 = new B.WhereIterable(t1, t2._eval$1("bool(1)")._as(new A.Highlighter$___closure()), t2._eval$1("WhereIterable<1>"));
      return t2.get$length(t2);
    },
    $signature: typesOffset + 30
  };
  A.Highlighter$___closure.prototype = {
    call$1(highlight) {
      var t1 = type$._Highlight._as(highlight).span,
        t2 = t1.get$start(t1);
      t2 = t2.get$line(t2);
      t1 = t1.get$end(t1);
      return t2 !== t1.get$line(t1);
    },
    $signature: typesOffset + 4
  };
  A.Highlighter$__closure0.prototype = {
    call$1(line) {
      return type$._Line._as(line).url;
    },
    $signature: typesOffset + 32
  };
  A.Highlighter__collateLines_closure.prototype = {
    call$1(highlight) {
      var t1 = type$._Highlight._as(highlight).span.get$sourceUrl();
      return t1 == null ? new B.Object() : t1;
    },
    $signature: typesOffset + 33
  };
  A.Highlighter__collateLines_closure0.prototype = {
    call$2(highlight1, highlight2) {
      var t1 = type$._Highlight;
      return t1._as(highlight1).span.compareTo$1(0, t1._as(highlight2).span);
    },
    $signature: typesOffset + 34
  };
  A.Highlighter__collateLines_closure1.prototype = {
    call$1(entry) {
      var url, highlightsForFile, lines, t1, t2, t3, t4, context, t5, linesBeforeSpan, lineNumber, _i, line, activeHighlights, highlightIndex, oldHighlightLength, t6;
      type$.MapEntry_of_Object_and_List__Highlight._as(entry);
      url = entry.get$key(entry);
      highlightsForFile = entry.get$value(entry);
      lines = B._setArrayType([], type$.JSArray__Line);
      for (t1 = J.getInterceptor$ax(highlightsForFile), t2 = t1.get$iterator(highlightsForFile), t3 = type$.JSArray__Highlight; t2.moveNext$0();) {
        t4 = t2.get$current(t2).span;
        context = t4.get$context(t4);
        t5 = A.findLineStart(context, t4.get$text(t4), t4.get$start(t4).get$column());
        t5.toString;
        t5 = C.JSString_methods.allMatches$1("\n", C.JSString_methods.substring$2(context, 0, t5));
        linesBeforeSpan = t5.get$length(t5);
        t4 = t4.get$start(t4);
        lineNumber = t4.get$line(t4) - linesBeforeSpan;
        for (t4 = context.split("\n"), t5 = t4.length, _i = 0; _i < t5; ++_i) {
          line = t4[_i];
          if (lines.length === 0 || lineNumber > C.JSArray_methods.get$last(lines).number)
            C.JSArray_methods.add$1(lines, new A._Line(line, lineNumber, url, B._setArrayType([], t3)));
          ++lineNumber;
        }
      }
      activeHighlights = B._setArrayType([], t3);
      for (t2 = lines.length, t3 = type$.bool_Function__Highlight, highlightIndex = 0, _i = 0; _i < lines.length; lines.length === t2 || (0, B.throwConcurrentModificationError)(lines), ++_i) {
        line = lines[_i];
        t4 = t3._as(new A.Highlighter__collateLines__closure(line));
        if (!!activeHighlights.fixed$length)
          B.throwExpression(B.UnsupportedError$("removeWhere"));
        C.JSArray_methods._removeWhere$2(activeHighlights, t4, true);
        oldHighlightLength = activeHighlights.length;
        for (t4 = t1.skip$1(highlightsForFile, highlightIndex), t4 = t4.get$iterator(t4); t4.moveNext$0();) {
          t5 = t4.get$current(t4);
          t6 = t5.span;
          t6 = t6.get$start(t6);
          if (t6.get$line(t6) > line.number)
            break;
          C.JSArray_methods.add$1(activeHighlights, t5);
        }
        highlightIndex += activeHighlights.length - oldHighlightLength;
        C.JSArray_methods.addAll$1(line.highlights, activeHighlights);
      }
      return lines;
    },
    $signature: typesOffset + 35
  };
  A.Highlighter__collateLines__closure.prototype = {
    call$1(highlight) {
      var t1 = type$._Highlight._as(highlight).span;
      t1 = t1.get$end(t1);
      return t1.get$line(t1) < this.line.number;
    },
    $signature: typesOffset + 4
  };
  A.Highlighter_highlight_closure.prototype = {
    call$1(highlight) {
      type$._Highlight._as(highlight);
      return true;
    },
    $signature: typesOffset + 4
  };
  A.Highlighter__writeFileStart_closure.prototype = {
    call$0() {
      this.$this._highlighter$_buffer._contents += C.JSString_methods.$mul("\u2500", 2) + ">";
      return null;
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights_closure.prototype = {
    call$0() {
      var t1 = this.startLine === this.line.number ? "\u250c" : "\u2514";
      this.$this._highlighter$_buffer._contents += t1;
    },
    $signature: 4
  };
  A.Highlighter__writeMultilineHighlights_closure0.prototype = {
    call$0() {
      var t1 = this.highlight == null ? "\u2500" : "\u253c";
      this.$this._highlighter$_buffer._contents += t1;
    },
    $signature: 4
  };
  A.Highlighter__writeMultilineHighlights_closure1.prototype = {
    call$0() {
      this.$this._highlighter$_buffer._contents += "\u2500";
      return null;
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights_closure2.prototype = {
    call$0() {
      var t2, t3, _this = this,
        t1 = _this._box_0,
        vertical = t1.openedOnThisLine ? "\u253c" : "\u2502";
      if (_this.current != null)
        _this.$this._highlighter$_buffer._contents += vertical;
      else {
        t2 = _this.line;
        t3 = t2.number;
        if (_this.startLine === t3) {
          t2 = _this.$this;
          t2._colorize$1$2$color(new A.Highlighter__writeMultilineHighlights__closure(t1, t2), t1.openedOnThisLineColor, type$.Null);
          t1.openedOnThisLine = true;
          if (t1.openedOnThisLineColor == null)
            t1.openedOnThisLineColor = t2._highlighter$_primaryColor;
        } else {
          if (_this.endLine === t3) {
            t3 = _this.highlight.span;
            t2 = t3.get$end(t3).get$column() === t2.text.length;
          } else
            t2 = false;
          t3 = _this.$this;
          if (t2)
            t3._highlighter$_buffer._contents += "\u2514";
          else
            t3._colorize$1$2$color(new A.Highlighter__writeMultilineHighlights__closure0(t3, vertical), t1.openedOnThisLineColor, type$.Null);
        }
      }
    },
    $signature: 4
  };
  A.Highlighter__writeMultilineHighlights__closure.prototype = {
    call$0() {
      var t1 = this._box_0.openedOnThisLine ? "\u252c" : "\u250c";
      this.$this._highlighter$_buffer._contents += t1;
    },
    $signature: 4
  };
  A.Highlighter__writeMultilineHighlights__closure0.prototype = {
    call$0() {
      this.$this._highlighter$_buffer._contents += this.vertical;
    },
    $signature: 4
  };
  A.Highlighter__writeHighlightedText_closure.prototype = {
    call$0() {
      var _this = this;
      return _this.$this._writeText$1(C.JSString_methods.substring$2(_this.text, _this.startColumn, _this.endColumn));
    },
    $signature: 0
  };
  A.Highlighter__writeIndicator_closure.prototype = {
    call$0() {
      var tabsBefore, tabsInside,
        t1 = this.$this,
        t2 = t1._highlighter$_buffer,
        t3 = t2._contents,
        t4 = this.highlight.span,
        startColumn = t4.get$start(t4).get$column(),
        endColumn = t4.get$end(t4).get$column();
      t4 = this.line.text;
      tabsBefore = t1._countTabs$1(C.JSString_methods.substring$2(t4, 0, startColumn));
      tabsInside = t1._countTabs$1(C.JSString_methods.substring$2(t4, startColumn, endColumn));
      startColumn += tabsBefore * 3;
      t2._contents += C.JSString_methods.$mul(" ", startColumn);
      t2 = t2._contents += C.JSString_methods.$mul("^", Math.max(endColumn + (tabsBefore + tabsInside) * 3 - startColumn, 1));
      return t2.length - t3.length;
    },
    $signature: 48
  };
  A.Highlighter__writeIndicator_closure0.prototype = {
    call$0() {
      var t1 = this.highlight.span;
      return this.$this._writeArrow$2(this.line, t1.get$start(t1).get$column());
    },
    $signature: 0
  };
  A.Highlighter__writeIndicator_closure1.prototype = {
    call$0() {
      var t4, _this = this,
        t1 = _this.$this,
        t2 = t1._highlighter$_buffer,
        t3 = t2._contents;
      if (_this.coversWholeLine)
        t2._contents += C.JSString_methods.$mul("\u2500", 3);
      else {
        t4 = _this.highlight.span;
        t1._writeArrow$3$beginning(_this.line, Math.max(t4.get$end(t4).get$column() - 1, 0), false);
      }
      return t2._contents.length - t3.length;
    },
    $signature: 48
  };
  A.Highlighter__writeSidebar_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._highlighter$_buffer,
        t3 = this._box_0.text;
      if (t3 == null)
        t3 = "";
      t1 = t2._contents += C.JSString_methods.padRight$1(t3, t1._paddingBeforeSidebar);
      t3 = this.end;
      t2._contents = t1 + (t3 == null ? "\u2502" : t3);
    },
    $signature: 4
  };
  A._Highlight_closure.prototype = {
    call$0() {
      var t2, t3, t4, t5,
        t1 = this.span;
      if (!(type$.SourceSpanWithContext._is(t1) && A.findLineStart(t1.get$context(t1), t1.get$text(t1), t1.get$start(t1).get$column()) != null)) {
        t2 = t1.get$start(t1);
        t2 = A.SourceLocation$(t2.get$offset(t2), 0, 0, t1.get$sourceUrl());
        t3 = t1.get$end(t1);
        t3 = t3.get$offset(t3);
        t4 = t1.get$sourceUrl();
        t5 = A.countCodeUnits(t1.get$text(t1), 10);
        t1 = A.SourceSpanWithContext$(t2, A.SourceLocation$(t3, A._Highlight__lastLineLength(t1.get$text(t1)), t5, t4), t1.get$text(t1), t1.get$text(t1));
      }
      return A._Highlight__normalizeEndOfLine(A._Highlight__normalizeTrailingNewline(A._Highlight__normalizeNewlines(t1)));
    },
    $signature: typesOffset + 36
  };
  A.RenderVisibilityDetectorBase__scheduleUpdate_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._size,
        t3 = t2 != null;
      if ((t3 ? new B.Rect(0, 0, 0 + t2._dx, 0 + t2._dy) : null) == null)
        return;
      t2 = t3 ? new B.Rect(0, 0, 0 + t2._dx, 0 + t2._dy) : null;
      t2.toString;
      t1._fireCallback$2(this.layer, t2);
    },
    $signature: 0
  };
  A.RenderVisibilityDetectorBase__scheduleUpdate_closure0.prototype = {
    call$1(timeStamp) {
      type$.Duration._as(timeStamp);
      A.RenderVisibilityDetectorBase__processCallbacks();
    },
    $signature: 3
  };
  A._RenderVisibilityDetector_RenderProxyBox_RenderVisibilityDetectorBase_paint_closure.prototype = {
    call$1(layer) {
      var container = layer instanceof B.ContainerLayer ? layer : type$.nullable_ContainerLayer._as(B.AbstractNode.prototype.get$parent.call(layer, layer));
      this.$this._scheduleUpdate$1(container);
    },
    $signature: 423
  };
  (function aliases() {
    var _ = A._StreamSinkTransformer.prototype;
    _.super$_StreamSinkTransformer$bind = _.bind$1;
    _ = A.__CupertinoSwitchState_State_TickerProviderStateMixin.prototype;
    _.super$__CupertinoSwitchState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.SourceSpanMixin.prototype;
    _.super$SourceSpanMixin$compareTo = _.compareTo$1;
    _.super$SourceSpanMixin$$eq = _.$eq;
  })();
  (function installTearOffs() {
    var _instance_1_i = hunkHelpers._instance_1i,
      _instance_0_i = hunkHelpers._instance_0i,
      _instance_2_u = hunkHelpers._instance_2u,
      _instance_2_i = hunkHelpers._instance_2i,
      _static_1 = hunkHelpers._static_1,
      _instance_1_u = hunkHelpers._instance_1u,
      _instance_0_u = hunkHelpers._instance_0u,
      _static_0 = hunkHelpers._static_0,
      _static = hunkHelpers.installStaticTearOff;
    var _;
    _instance_1_i(_ = A._ByteCallbackSink.prototype, "get$add", "add$1", 13);
    _instance_0_i(_, "get$close", "close$0", 0);
    _instance_2_u(_ = A.Interceptor0.prototype, "get$onRequest", "onRequest$2", 1);
    _instance_2_u(_, "get$onResponse", "onResponse$2", 2);
    _instance_2_i(_, "get$onError", "onError$2", 3);
    _instance_2_u(A.ImplyContentTypeInterceptor.prototype, "get$onRequest", "onRequest$2", 1);
    _instance_2_u(_ = A.LogInterceptor.prototype, "get$onRequest", "onRequest$2", 1);
    _instance_2_u(_, "get$onResponse", "onResponse$2", 2);
    _instance_2_i(_, "get$onError", "onError$2", 3);
    _static_1(A, "background_transformer___decodeJson$closure", "_decodeJson", 37);
    _instance_1_u(_ = A._CupertinoSwitchState.prototype, "get$_switch$_handleTapDown", "_switch$_handleTapDown$1", 7);
    _instance_0_u(_, "get$_switch$_handleTap", "_switch$_handleTap$0", 0);
    _instance_1_u(_, "get$_switch$_handleTapUp", "_switch$_handleTapUp$1", 14);
    _instance_0_u(_, "get$_switch$_handleTapCancel", "_switch$_handleTapCancel$0", 0);
    _instance_1_u(_, "get$_switch$_handleDragStart", "_switch$_handleDragStart$1", 15);
    _instance_1_u(_, "get$_switch$_handleDragUpdate", "_switch$_handleDragUpdate$1", 16);
    _instance_1_u(_, "get$_switch$_handleDragEnd", "_switch$_handleDragEnd$1", 17);
    _instance_2_u(A.DecorationImagePainter.prototype, "get$_handleImage", "_handleImage$2", 18);
    _instance_2_u(A.ResponseInterceptor.prototype, "get$onResponse", "onResponse$2", 2);
    _instance_2_u(_ = A.LoadingInterceptor.prototype, "get$onRequest", "onRequest$2", 1);
    _instance_2_u(_, "get$onResponse", "onResponse$2", 2);
    _instance_2_i(_, "get$onError", "onError$2", 3);
    _instance_2_i(A.ErrorInterceptor.prototype, "get$onError", "onError$2", 3);
    _static_0(A, "render_visibility_detector_RenderVisibilityDetectorBase__handleTimer$closure", "RenderVisibilityDetectorBase__handleTimer", 0);
    _static_0(A, "render_visibility_detector_RenderVisibilityDetectorBase__processCallbacks$closure", "RenderVisibilityDetectorBase__processCallbacks", 0);
    _static(A, "compute_web__compute$closure", 2, null, ["call$2$3$debugLabel", "call$2", "call$2$2"], ["compute0", function(callback, message) {
      return A.compute0(callback, message, null, type$.dynamic, type$.dynamic);
    }, function(callback, message, $Q, $R) {
      return A.compute0(callback, message, null, $Q, $R);
    }], 25, 0);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _mixinHard = hunkHelpers.mixinHard,
      _inheritMany = hunkHelpers.inheritMany,
      _inherit = hunkHelpers.inherit;
    _inheritMany(B.Closure, [A.Future_any_onValue, A._StreamHandlerTransformer_closure, A.DateTime_parse_parseIntOrZero, A.DateTime_parse_parseMilliAndMicroseconds, A.CanonicalizedMap_entries_closure, A.CanonicalizedMap_keys_closure, A.CanonicalizedMap_values_closure, A.BrowserHttpClientAdapter_fetch_closure0, A.BrowserHttpClientAdapter_fetch_closure2, A.BrowserHttpClientAdapter_fetch_closure3, A.BrowserHttpClientAdapter_fetch_closure4, A.BrowserHttpClientAdapter_fetch_closure5, A.BrowserHttpClientAdapter_fetch_closure6, A.DioMixin_fetch_requestInterceptorWrapper, A.DioMixin_fetch_requestInterceptorWrapper_closure, A.DioMixin_fetch_responseInterceptorWrapper, A.DioMixin_fetch_responseInterceptorWrapper_closure, A.DioMixin_fetch_errorInterceptorWrapper, A.DioMixin_fetch__closure, A.DioMixin_fetch__closure0, A.DioMixin_fetch_closure1, A.DioMixin_listenCancelForAsyncTask_closure, A._RequestConfig_closure, A.SyncTransformer_transformResponse_closure0, A.SyncTransformer_transformResponse_closure3, A.caseInsensitiveKeyMap_closure0, A.JsonConvert_convertListNotNull_closure, A.JsonConvert__getListChildType_closure, A.JsonConvert__getListChildType_closure0, A.JsonConvert__getListChildType_closure1, A.$NetObjectBeanToJson_closure, A.testHttp_closure, A.NetUtil_request_closure, A.NetUtil_request_closure0, A.ExampleLogic_toFun_closure, A.ExamplePage_build_closure, A.FunctionPage_build_closure, A.FunctionCard_build_closure, A.MainPage_build_closure, A.MainPage_build_closure0, A._SideNavigation__buildItems_closure, A._SideNavigation__buildItems__closure, A._SideNavigation__buildScale_closure, A.SettingPage_build_closure, A.CaseInsensitiveMap$from_closure, A.MediaType_toString__closure, A.expectQuotedString_closure, A.Context_joinAll_closure, A.Context_split_closure, A._validateArgList_closure, A.Highlighter$__closure, A.Highlighter$___closure, A.Highlighter$__closure0, A.Highlighter__collateLines_closure, A.Highlighter__collateLines_closure1, A.Highlighter__collateLines__closure, A.Highlighter_highlight_closure, A.RenderVisibilityDetectorBase__scheduleUpdate_closure0, A._RenderVisibilityDetector_RenderProxyBox_RenderVisibilityDetectorBase_paint_closure]);
    _inheritMany(B.Closure2Args, [A.Future_any_onError, A.CanonicalizedMap_addAll_closure, A.CanonicalizedMap_forEach_closure, A.CanonicalizedMap_map_closure, A.BrowserHttpClientAdapter_fetch_closure, A.BrowserHttpClientAdapter_fetch__closure, A.BrowserHttpClientAdapter_fetch_closure7, A.DioMixin_fetch_errorInterceptorWrapper_closure, A.DioMixin_fetch_closure0, A.DioMixin_fetch_closure2, A.Headers$fromMap_closure, A.Headers_toString_closure, A.LogInterceptor_onRequest_closure, A.LogInterceptor__printResponse_closure, A.Transformer_urlEncodeMap_closure, A.SyncTransformer_transformResponse_closure, A.SyncTransformer_transformResponse_closure2, A.encodeMap_urlEncode, A.encodeMap_urlEncode_closure, A.caseInsensitiveKeyMap_closure, A._RenderCupertinoSwitch_paint_closure, A.MainPage_build_closure1, A.MediaType_toString_closure, A.PrettyPrinter_closure, A.Highlighter__collateLines_closure0]);
    _inherit(A._StreamSinkTransformer, B.StreamTransformerBase);
    _inheritMany(B.Object, [A._HandlerEventSink, A.CanonicalizedMap, A.ResponseBody, A.BrowserHttpClientAdapter, A.CancelToken, A._DioForBrowser_Object_DioMixin, A.DioError, A.DioMixin, A.InterceptorState, A._BaseHandler, A.Interceptor0, A.Headers, A._RequestConfig, A.OptionsMixin, A.Options, A.Response, A.Transformer, A.CupertinoThumbPainter, A.DecorationImage, A.DecorationImagePainter, A.SliverGridGeometry, A.SliverGridLayout, A.SliverGridDelegate, A.NetListBean, A.NetObjectBean, A.NetObjectDatas, A.JsonConvert, A.AppException, A.NetUtil, A.ExampleState, A.FunctionState, A.MainState, A.SettingState, A.MediaType, A.LogFilter, A.LogOutput, A.LogPrinter, A.Logger, A.Context, A.Style, A.ParsedPath, A.PathException, A.SourceFile, A.SourceLocationMixin, A.SourceSpanMixin, A.Highlighter, A._Highlight, A._Line, A.SourceLocation, A.SourceSpanException, A.StringScanner0, A.RenderVisibilityDetectorBase, A.VisibilityInfo, A.VisibilityDetectorController]);
    _inherit(A._StreamHandlerTransformer, A._StreamSinkTransformer);
    _inherit(A._ByteCallbackSink, B.ByteConversionSinkBase);
    _inheritMany(B.Closure0Args, [A.CanonicalizedMap_putIfAbsent_closure, A.BrowserHttpClientAdapter_fetch_closure1, A.BrowserHttpClientAdapter_fetch_closure8, A.DioMixin_fetch_requestInterceptorWrapper__closure, A.DioMixin_fetch_responseInterceptorWrapper__closure, A.DioMixin_fetch_errorInterceptorWrapper__closure, A.DioMixin_fetch_closure, A.SyncTransformer_transformResponse_closure1, A._CupertinoSwitchState__handleDragEnd_closure, A.NetUtil_request_closure1, A.AutoDisposePage_build_closure, A.AutoDisposePage_build_closure0, A.FunctionCard_build__closure, A._SideNavigation__buildItems___closure, A.MediaType_MediaType$parse_closure, A.Highlighter_closure, A.Highlighter__writeFileStart_closure, A.Highlighter__writeMultilineHighlights_closure, A.Highlighter__writeMultilineHighlights_closure0, A.Highlighter__writeMultilineHighlights_closure1, A.Highlighter__writeMultilineHighlights_closure2, A.Highlighter__writeMultilineHighlights__closure, A.Highlighter__writeMultilineHighlights__closure0, A.Highlighter__writeHighlightedText_closure, A.Highlighter__writeIndicator_closure, A.Highlighter__writeIndicator_closure0, A.Highlighter__writeIndicator_closure1, A.Highlighter__writeSidebar_closure, A._Highlight_closure, A.RenderVisibilityDetectorBase__scheduleUpdate_closure]);
    _inherit(A.DioForBrowser, A._DioForBrowser_Object_DioMixin);
    _inheritMany(B._Enum, [A.DioErrorType, A.InterceptorResultType, A.ResponseType, A.ListFormat, A.HttpMethod, A.Level]);
    _inheritMany(A._BaseHandler, [A.RequestInterceptorHandler, A.ResponseInterceptorHandler, A.ErrorInterceptorHandler]);
    _inherit(A.Interceptors, B.ListMixin);
    _inheritMany(A.Interceptor0, [A.ImplyContentTypeInterceptor, A.LogInterceptor, A.ResponseInterceptor, A.LoadingInterceptor, A.ErrorInterceptor]);
    _inheritMany(A._RequestConfig, [A._BaseOptions__RequestConfig_OptionsMixin, A._RequestOptions__RequestConfig_OptionsMixin]);
    _inherit(A.BaseOptions, A._BaseOptions__RequestConfig_OptionsMixin);
    _inherit(A.RequestOptions, A._RequestOptions__RequestConfig_OptionsMixin);
    _inherit(A.SyncTransformer, A.Transformer);
    _inherit(A.BackgroundTransformer, A.SyncTransformer);
    _inherit(A.CupertinoSwitch, B.StatefulWidget);
    _inherit(A.__CupertinoSwitchState_State_TickerProviderStateMixin, B.State);
    _inherit(A._CupertinoSwitchState, A.__CupertinoSwitchState_State_TickerProviderStateMixin);
    _inherit(A._CupertinoSwitchRenderObjectWidget, B.LeafRenderObjectWidget);
    _inherit(A._RenderCupertinoSwitch, B.RenderConstrainedBox);
    _inherit(A.SliverGridRegularTileLayout, A.SliverGridLayout);
    _inherit(A.SliverGridDelegateWithMaxCrossAxisExtent, A.SliverGridDelegate);
    _inherit(A.SliverGridParentData, F.SliverMultiBoxAdaptorParentData);
    _inherit(A.RenderSliverGrid, F.RenderSliverMultiBoxAdaptor);
    _inherit(A.NeverScrollableScrollPhysics, B.ScrollPhysics);
    _inherit(A.GridView, I.BoxScrollView);
    _inherit(A.SliverGrid, F.SliverMultiBoxAdaptorWidget);
    _inheritMany(B.GetxController, [A.AutoDisposeLogic, A.ExampleLogic, A.FunctionLogic, A.MainLogic, A.SettingLogic]);
    _inheritMany(B.StatelessWidget, [A.AutoDisposePage, A.ExamplePage, A.FunctionPage, A.FunctionCard, A.MainPage, A._SideNavigation, A.SettingPage]);
    _inherit(A.CaseInsensitiveMap, A.CanonicalizedMap);
    _inherit(A.DevelopmentFilter, A.LogFilter);
    _inherit(A.ConsoleOutput, A.LogOutput);
    _inherit(A.PrettyPrinter, A.LogPrinter);
    _inherit(A.InternalStyle, A.Style);
    _inheritMany(A.InternalStyle, [A.PosixStyle, A.UrlStyle, A.WindowsStyle]);
    _inherit(A.FileLocation, A.SourceLocationMixin);
    _inheritMany(A.SourceSpanMixin, [A._FileSpan, A.SourceSpanBase]);
    _inherit(A.SourceSpanFormatException, A.SourceSpanException);
    _inherit(A.SourceSpanWithContext, A.SourceSpanBase);
    _inherit(A.StringScannerException, A.SourceSpanFormatException);
    _inherit(A._RenderVisibilityDetector_RenderProxyBox_RenderVisibilityDetectorBase, B.RenderProxyBox);
    _inherit(A.RenderVisibilityDetector, A._RenderVisibilityDetector_RenderProxyBox_RenderVisibilityDetectorBase);
    _inherit(A.VisibilityDetector, B.SingleChildRenderObjectWidget);
    _mixin(A._DioForBrowser_Object_DioMixin, A.DioMixin);
    _mixin(A._BaseOptions__RequestConfig_OptionsMixin, A.OptionsMixin);
    _mixin(A._RequestOptions__RequestConfig_OptionsMixin, A.OptionsMixin);
    _mixinHard(A.__CupertinoSwitchState_State_TickerProviderStateMixin, B.TickerProviderStateMixin);
    _mixinHard(A._RenderVisibilityDetector_RenderProxyBox_RenderVisibilityDetectorBase, A.RenderVisibilityDetectorBase);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"_HandlerEventSink":{"EventSink":["1"]},"_StreamSinkTransformer":{"StreamTransformer":["1","2"]},"_StreamHandlerTransformer":{"_StreamSinkTransformer":["1","2"],"StreamTransformer":["1","2"]},"CanonicalizedMap":{"Map":["2","3"]},"BrowserHttpClientAdapter":{"HttpClientAdapter":[]},"DioForBrowser":{"Dio":[]},"DioError":{"Exception":[]},"DioErrorType":{"Enum":[]},"InterceptorResultType":{"Enum":[]},"Interceptors":{"ListMixin":["Interceptor0"],"List":["Interceptor0"],"EfficientLengthIterable":["Interceptor0"],"Iterable":["Interceptor0"],"ListMixin.E":"Interceptor0"},"ImplyContentTypeInterceptor":{"Interceptor0":[]},"LogInterceptor":{"Interceptor0":[]},"ResponseType":{"Enum":[]},"ListFormat":{"Enum":[]},"BackgroundTransformer":{"Transformer":[]},"SyncTransformer":{"Transformer":[]},"CupertinoSwitch":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_CupertinoSwitchState":{"TickerProviderStateMixin":["CupertinoSwitch"],"State":["CupertinoSwitch"],"TickerProvider":[],"State.T":"CupertinoSwitch"},"_CupertinoSwitchRenderObjectWidget":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RenderCupertinoSwitch":{"RenderConstrainedBox":[],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"SliverGridDelegateWithMaxCrossAxisExtent":{"SliverGridDelegate":[]},"SliverGridParentData":{"SliverMultiBoxAdaptorParentData":[],"SliverLogicalParentData":[],"ContainerParentDataMixin":["RenderBox"],"KeepAliveParentDataMixin":[],"ParentData":[],"ContainerParentDataMixin.0":"RenderBox"},"RenderSliverGrid":{"RenderSliverMultiBoxAdaptor":[],"RenderSliver":[],"ContainerRenderObjectMixin":["RenderBox","SliverMultiBoxAdaptorParentData"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"SliverMultiBoxAdaptorParentData","ContainerRenderObjectMixin.0":"RenderBox"},"NeverScrollableScrollPhysics":{"ScrollPhysics":[]},"GridView":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"SliverGrid":{"SliverMultiBoxAdaptorWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"ResponseInterceptor":{"Interceptor0":[]},"LoadingInterceptor":{"Interceptor0":[]},"AppException":{"Exception":[]},"ErrorInterceptor":{"Interceptor0":[]},"HttpMethod":{"Enum":[]},"AutoDisposeLogic":{"GetxController":[],"GetLifeCycleBase":[],"Listenable":[]},"AutoDisposePage":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"ExampleLogic":{"GetxController":[],"GetLifeCycleBase":[],"Listenable":[]},"ExamplePage":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"FunctionLogic":{"GetxController":[],"GetLifeCycleBase":[],"Listenable":[]},"FunctionPage":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"FunctionCard":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"MainLogic":{"GetxController":[],"GetLifeCycleBase":[],"Listenable":[]},"MainPage":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_SideNavigation":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"SettingLogic":{"GetxController":[],"GetLifeCycleBase":[],"Listenable":[]},"SettingPage":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"CaseInsensitiveMap":{"CanonicalizedMap":["String","String","1"],"Map":["String","1"],"CanonicalizedMap.V":"1","CanonicalizedMap.K":"String","CanonicalizedMap.C":"String"},"DevelopmentFilter":{"LogFilter":[]},"Level":{"Enum":[]},"ConsoleOutput":{"LogOutput":[]},"PrettyPrinter":{"LogPrinter":[]},"PathException":{"Exception":[]},"PosixStyle":{"InternalStyle":[]},"UrlStyle":{"InternalStyle":[]},"WindowsStyle":{"InternalStyle":[]},"FileLocation":{"SourceLocation":[],"Comparable":["SourceLocation"]},"_FileSpan":{"FileSpan":[],"SourceSpanWithContext":[],"SourceSpan":[],"Comparable":["SourceSpan"]},"SourceLocation":{"Comparable":["SourceLocation"]},"SourceLocationMixin":{"SourceLocation":[],"Comparable":["SourceLocation"]},"SourceSpan":{"Comparable":["SourceSpan"]},"SourceSpanBase":{"SourceSpan":[],"Comparable":["SourceSpan"]},"SourceSpanException":{"Exception":[]},"SourceSpanFormatException":{"FormatException":[],"Exception":[]},"SourceSpanMixin":{"SourceSpan":[],"Comparable":["SourceSpan"]},"SourceSpanWithContext":{"SourceSpan":[],"Comparable":["SourceSpan"]},"StringScannerException":{"FormatException":[],"Exception":[]},"RenderVisibilityDetector":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"VisibilityDetector":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]}}'));
  var string$ = {
    _must_: " must not be greater than the number of characters in the file, "
  };
  var type$ = (function rtii() {
    var findType = B.findType;
    return {
      Animation_double: findType("Animation<double>"),
      AppException: findType("AppException"),
      AutoDisposeLogic: findType("AutoDisposeLogic"),
      BoxHitTestEntry: findType("BoxHitTestEntry"),
      BuildContext: findType("BuildContext"),
      ByteBuffer: findType("ByteBuffer"),
      ClipRRectLayer: findType("ClipRRectLayer"),
      CodeUnits: findType("CodeUnits"),
      ContainerLayer: findType("ContainerLayer"),
      CupertinoSwitch: findType("CupertinoSwitch"),
      DioError: findType("DioError"),
      Directionality: findType("Directionality"),
      Duration: findType("Duration"),
      EventSink_Uint8List: findType("EventSink<Uint8List>"),
      ExampleLogic: findType("ExampleLogic"),
      Exception: findType("Exception"),
      FileSpan: findType("FileSpan"),
      FormatException: findType("FormatException"),
      FunctionLogic: findType("FunctionLogic"),
      HttpRequest: findType("HttpRequest"),
      ImageInfo: findType("ImageInfo"),
      Interceptor: findType("Interceptor0"),
      InterceptorState_DioError: findType("InterceptorState<DioError>"),
      InterceptorState_RequestOptions: findType("InterceptorState<RequestOptions>"),
      InterceptorState_Response_dynamic: findType("InterceptorState<Response<@>>"),
      InterceptorState_dynamic: findType("InterceptorState<@>"),
      InternalFinalCallback_void: findType("InternalFinalCallback<~>"),
      Iterable_String: findType("Iterable<String>"),
      Iterable_int: findType("Iterable<int>"),
      JSArray_BoxShadow: findType("JSArray<BoxShadow>"),
      JSArray_BtnInfo: findType("JSArray<BtnInfo>"),
      JSArray_ContainerLayer: findType("JSArray<ContainerLayer>"),
      JSArray_Level: findType("JSArray<Level>"),
      JSArray_NetListBean: findType("JSArray<NetListBean>"),
      JSArray_NetObjectBean: findType("JSArray<NetObjectBean>"),
      JSArray_NetObjectDatas: findType("JSArray<NetObjectDatas>"),
      JSArray_RedirectRecord: findType("JSArray<RedirectRecord>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_TreeTwiceInfo: findType("JSArray<TreeTwiceInfo>"),
      JSArray_Uint8List: findType("JSArray<Uint8List>"),
      JSArray_Widget: findType("JSArray<Widget>"),
      JSArray__Highlight: findType("JSArray<_Highlight>"),
      JSArray__Line: findType("JSArray<_Line>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_nullable_Interceptor: findType("JSArray<Interceptor0?>"),
      JSArray_nullable_String: findType("JSArray<String?>"),
      JSArray_of_nullable_void_Function: findType("JSArray<~()?>"),
      Level: findType("Level"),
      List_BtnInfo: findType("List<BtnInfo>"),
      List_NetObjectDatas: findType("List<NetObjectDatas>"),
      List_String: findType("List<String>"),
      List_TreeTwiceInfo: findType("List<TreeTwiceInfo>"),
      List_Widget: findType("List<Widget>"),
      List_dynamic: findType("List<@>"),
      List_int: findType("List<int>"),
      List_nullable__Highlight: findType("List<_Highlight?>"),
      List_of_void_Function: findType("List<~()>"),
      MainLogic: findType("MainLogic"),
      MapEntry_of_Object_and_List__Highlight: findType("MapEntry<Object,List<_Highlight>>"),
      MapEntry_of_String_and_List_String: findType("MapEntry<String,List<String>>"),
      Map_Level_bool: findType("Map<Level,bool>"),
      Map_String_dynamic: findType("Map<String,@>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      Map_of_String_and_List_String: findType("Map<String,List<String>>"),
      MediaType: findType("MediaType"),
      NetListBean: findType("NetListBean"),
      NetObjectBean: findType("NetObjectBean"),
      NetObjectDatas: findType("NetObjectDatas"),
      Null: findType("Null"),
      Object: findType("Object"),
      Pattern: findType("Pattern"),
      PointerDownEvent: findType("PointerDownEvent"),
      ProgressEvent: findType("ProgressEvent"),
      RegExp: findType("RegExp"),
      RenderBox: findType("RenderBox"),
      RenderObject: findType("RenderObject"),
      RenderSliverGrid: findType("RenderSliverGrid"),
      RenderVisibilityDetector: findType("RenderVisibilityDetector"),
      RequestOptions: findType("RequestOptions"),
      ResponseBody: findType("ResponseBody"),
      Response_dynamic: findType("Response<@>"),
      Set_void: findType("Set<~>"),
      SettingLogic: findType("SettingLogic"),
      SliverConstraints: findType("SliverConstraints"),
      SliverGridParentData: findType("SliverGridParentData"),
      SliverMultiBoxAdaptorElement: findType("SliverMultiBoxAdaptorElement"),
      SliverMultiBoxAdaptorParentData: findType("SliverMultiBoxAdaptorParentData"),
      SourceLocation: findType("SourceLocation"),
      SourceSpan: findType("SourceSpan"),
      SourceSpanWithContext: findType("SourceSpanWithContext"),
      StackTrace: findType("StackTrace"),
      String: findType("String"),
      String_Function_Match: findType("String(Match)"),
      Uint8List: findType("Uint8List"),
      UnmodifiableMapView_String_String: findType("UnmodifiableMapView<String,String>"),
      Uri: findType("Uri"),
      VisibilityInfo: findType("VisibilityInfo"),
      WhereTypeIterable_String: findType("WhereTypeIterable<String>"),
      Widget: findType("Widget"),
      Widget_Function_int: findType("Widget(int)"),
      _AsyncCompleter_DioError: findType("_AsyncCompleter<DioError>"),
      _AsyncCompleter_InterceptorState_dynamic: findType("_AsyncCompleter<InterceptorState<@>>"),
      _AsyncCompleter_ResponseBody: findType("_AsyncCompleter<ResponseBody>"),
      _AsyncCompleter_Uint8List: findType("_AsyncCompleter<Uint8List>"),
      _AsyncCompleter_dynamic: findType("_AsyncCompleter<@>"),
      _AsyncStreamController_Uint8List: findType("_AsyncStreamController<Uint8List>"),
      _EventStream_ProgressEvent: findType("_EventStream<ProgressEvent>"),
      _Future_DioError: findType("_Future<DioError>"),
      _Future_InterceptorState_dynamic: findType("_Future<InterceptorState<@>>"),
      _Future_ResponseBody: findType("_Future<ResponseBody>"),
      _Future_Uint8List: findType("_Future<Uint8List>"),
      _Future_dynamic: findType("_Future<@>"),
      _Highlight: findType("_Highlight"),
      _Line: findType("_Line"),
      _RenderCupertinoSwitch: findType("_RenderCupertinoSwitch"),
      _ScaffoldMessengerScope: findType("_ScaffoldMessengerScope"),
      bool: findType("bool"),
      bool_Function__Highlight: findType("bool(_Highlight)"),
      bool_Function_nullable_int: findType("bool(int?)"),
      double: findType("double"),
      dynamic: findType("@"),
      int: findType("int"),
      nullable_ContainerLayer: findType("ContainerLayer?"),
      nullable_List_Interceptor: findType("List<Interceptor0>?"),
      nullable_Map_String_dynamic: findType("Map<String,@>?"),
      nullable_Object: findType("Object?"),
      nullable_Stream_Uint8List: findType("Stream<Uint8List>?"),
      nullable_String_Function_Match: findType("String(Match)?"),
      nullable_String_Function_String: findType("String(String)?"),
      nullable__Highlight: findType("_Highlight?"),
      nullable_void_Function: findType("~()?"),
      nullable_void_Function_ProgressEvent: findType("~(ProgressEvent)?"),
      nullable_void_Function_VisibilityInfo: findType("~(VisibilityInfo)?"),
      nullable_void_Function_bool: findType("~(bool)?"),
      nullable_void_Function_int_int: findType("~(int,int)?"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_2_Response_dynamic_and_ResponseInterceptorHandler: findType("~(Response<@>,ResponseInterceptorHandler)"),
      void_Function_2_String_and_List_String: findType("~(String,List<String>)"),
      void_Function_DioError_ErrorInterceptorHandler: findType("~(DioError,ErrorInterceptorHandler)"),
      void_Function_Duration: findType("~(Duration)"),
      void_Function_Layer: findType("~(Layer0)"),
      void_Function_List_int: findType("~(List<int>)"),
      void_Function_RequestOptions_RequestInterceptorHandler: findType("~(RequestOptions,RequestInterceptorHandler)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    D.BoxConstraints_59_59_39_39 = new B.BoxConstraints(59, 59, 39, 39);
    D.CONSTANT = new A_.Instantiation1(B.math__max$closure(), B.findType("Instantiation1<int>"));
    D.NetworkImage_Sdp = new F.NetworkImage("https://raw.githubusercontent.com/xdd666t/MyData/master/pic/flutter/blog/20220103124847.jpg", 1, null);
    D.C_DecorationImage = new A.DecorationImage();
    D.C_ImplyContentTypeInterceptor = new A.ImplyContentTypeInterceptor();
    D.C_SliverGridDelegateWithMaxCrossAxisExtent = new A.SliverGridDelegateWithMaxCrossAxisExtent();
    D.DioErrorType_0 = new A.DioErrorType(0, "connectionTimeout");
    D.DioErrorType_1 = new A.DioErrorType(1, "sendTimeout");
    D.DioErrorType_2 = new A.DioErrorType(2, "receiveTimeout");
    D.DioErrorType_4 = new A.DioErrorType(4, "badResponse");
    D.DioErrorType_5 = new A.DioErrorType(5, "cancel");
    D.DioErrorType_6 = new A.DioErrorType(6, "connectionError");
    D.DioErrorType_7 = new A.DioErrorType(7, "unknown");
    D.Duration_20000000 = new B.Duration(20000000);
    D.EdgeInsets_0_0_0_40 = new B.EdgeInsets(0, 0, 0, 40);
    D.EdgeInsets_0_20_0_30 = new B.EdgeInsets(0, 20, 0, 30);
    D.EdgeInsets_12_0_0_0 = new B.EdgeInsets(12, 0, 0, 0);
    D.HttpMethod_0 = new A.HttpMethod(0, "get");
    D.HttpMethod_1 = new A.HttpMethod(1, "post");
    D.HttpMethod_2 = new A.HttpMethod(2, "put");
    D.HttpMethod_3 = new A.HttpMethod(3, "delete");
    D.IconData_58887_IconFont_null_false = new B.IconData(58887, "IconFont", null, false);
    D.Icon_dkq = new B.Icon(D.IconData_58887_IconFont_null_false, null, null, null);
    D.IconData_58889_IconFont_null_false = new B.IconData(58889, "IconFont", null, false);
    D.Icon_k45 = new B.Icon(D.IconData_58889_IconFont_null_false, null, null, null);
    D.IconData_59107_IconFont_null_false = new B.IconData(59107, "IconFont", null, false);
    D.Icon_qfm = new B.Icon(D.IconData_59107_IconFont_null_false, null, null, null);
    D.InterceptorResultType_0 = new A.InterceptorResultType(0, "next");
    D.InterceptorResultType_1 = new A.InterceptorResultType(1, "resolve");
    D.InterceptorResultType_2 = new A.InterceptorResultType(2, "resolveCallFollowing");
    D.InterceptorResultType_4 = new A.InterceptorResultType(4, "rejectCallFollowing");
    D.ExamplePage_null = new A.ExamplePage(null);
    D.KeepAlivePage_ExamplePage_null_null = new I.KeepAlivePage(D.ExamplePage_null, null);
    D.FunctionPage_null = new A.FunctionPage(null);
    D.KeepAlivePage_FunctionPage_null_null = new I.KeepAlivePage(D.FunctionPage_null, null);
    D.SettingPage_null = new A.SettingPage(null);
    D.KeepAlivePage_SettingPage_null_null = new I.KeepAlivePage(D.SettingPage_null, null);
    D.Level_0 = new A.Level(0, "verbose");
    D.Level_1 = new A.Level(1, "debug");
    D.Level_2 = new A.Level(2, "info");
    D.Level_6 = new A.Level(6, "nothing");
    D.ListFormat_4 = new A.ListFormat(4, "multi");
    D.ListFormat_5 = new A.ListFormat(5, "multiCompatible");
    D.Color_637534208 = new B.Color(637534208);
    D.BoxShadow_oyn19 = new B.BoxShadow(0, C.BlurStyle_0, D.Color_637534208, G.Offset_0_3, 8);
    D.Color_251658240 = new B.Color(251658240);
    D.BoxShadow_oyn20 = new B.BoxShadow(0, C.BlurStyle_0, D.Color_251658240, G.Offset_0_3, 1);
    D.List_CQc = B._setArrayType(makeConstList([D.BoxShadow_oyn19, D.BoxShadow_oyn20]), type$.JSArray_BoxShadow);
    D.List_empty14 = B._setArrayType(makeConstList([]), type$.JSArray_RedirectRecord);
    D.Level_3 = new A.Level(3, "warning");
    D.Level_4 = new A.Level(4, "error");
    D.Level_5 = new A.Level(5, "wtf");
    D.List_gRf = B._setArrayType(makeConstList([D.Level_0, D.Level_1, D.Level_2, D.Level_3, D.Level_4, D.Level_5, D.Level_6]), type$.JSArray_Level);
    D.List_empty26 = B._setArrayType(makeConstList([]), type$.JSArray_Level);
    D.Map_empty7 = new B.ConstantStringMap(0, {}, D.List_empty26, B.findType("ConstantStringMap<Level,bool>"));
    D.NeverScrollableScrollPhysics_null = new A.NeverScrollableScrollPhysics(null);
    D.Radius_2Vk = new B.Radius(15.5, 15.5);
    D.ResponseType_0 = new A.ResponseType(0, "json");
    D.ResponseType_1 = new A.ResponseType(1, "stream");
    D.ResponseType_2 = new A.ResponseType(2, "plain");
    D.ResponseType_3 = new A.ResponseType(3, "bytes");
    D.TextStyle_E9t = new B.TextStyle(true, C.Color_4294967295, null, null, null, null, 20, C.FontWeight_6, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    D.Text_2Vk = new B.Text("\u8ba1\u6570\u5668-\u81ea\u52a8\u91ca\u653e", null, null, null, null, null, null, null, null);
    D.Text_MpS = new B.Text("\u5f00\u542f\u7f29\u653e", null, null, null, null, null, null, null, null);
    D.Type_NetListBean_Iit = B.typeLiteral("NetListBean");
    D.Type_NetObjectBean_QxC = B.typeLiteral("NetObjectBean");
    D.Type_NetObjectDatas_YWW = B.typeLiteral("NetObjectDatas");
    D.ValueKey_Setting = new B.ValueKey("Setting", B.findType("ValueKey<String>"));
  })();
  (function staticFields() {
    $.NetConfig_proxyEnable = false;
    $.NetConfig_proxyIp = "";
    $.NetConfig_proxyPort = "";
    $.NetUtil__instance = null;
    $.PrettyPrinter__startTime = null;
    $._currentUriBase = null;
    $._current = null;
    $.RenderVisibilityDetectorBase__updates = B.LinkedHashMap_LinkedHashMap$_empty(B.findType("Key"), type$.void_Function);
    $.RenderVisibilityDetectorBase__lastVisibility = B.LinkedHashMap_LinkedHashMap$_empty(B.findType("Key"), type$.VisibilityInfo);
    $.RenderVisibilityDetectorBase__timer = null;
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal,
      _lazy = hunkHelpers.lazy;
    _lazyFinal($, "DateTime__parseFormat", "$get$DateTime__parseFormat", () => B.RegExp_RegExp("^([+-]?\\d{4,6})-?(\\d\\d)-?(\\d\\d)(?:[ T](\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:[.,](\\d+))?)?)?( ?[zZ]| ?([-+])(\\d\\d)(?::?(\\d\\d))?)?)?$", true));
    _lazy($, "jsonConvert", "$get$jsonConvert", () => new A.JsonConvert());
    _lazy($, "Http_loadingInterceptor", "$get$Http_loadingInterceptor", () => new A.LoadingInterceptor());
    _lazy($, "Log__logger", "$get$Log__logger", () => {
      var t1 = new A.DevelopmentFilter(),
        t2 = A.PrettyPrinter$();
      t1.level = D.Level_0;
      return new A.Logger(t1, t2, new A.ConsoleOutput());
    });
    _lazyFinal($, "_escapedChar", "$get$_escapedChar", () => B.RegExp_RegExp('["\\x00-\\x1F\\x7F]', true));
    _lazyFinal($, "token", "$get$token", () => B.RegExp_RegExp('[^()<>@,;:"\\\\/[\\]?={} \\t\\x00-\\x1F\\x7F]+', true));
    _lazyFinal($, "_lws", "$get$_lws", () => B.RegExp_RegExp("(?:\\r\\n)?[ \\t]+", true));
    _lazyFinal($, "_quotedString", "$get$_quotedString", () => B.RegExp_RegExp('"(?:[^"\\x00-\\x1F\\x7F]|\\\\.)*"', true));
    _lazyFinal($, "_quotedPair", "$get$_quotedPair", () => B.RegExp_RegExp("\\\\(.)", true));
    _lazyFinal($, "nonToken", "$get$nonToken", () => B.RegExp_RegExp('[()<>@,;:"\\\\/\\[\\]?={} \\t\\x00-\\x1F\\x7F]', true));
    _lazyFinal($, "whitespace", "$get$whitespace", () => B.RegExp_RegExp("(?:" + $.$get$_lws().pattern + ")*", true));
    _lazyFinal($, "context", "$get$context", () => new A.Context(B.findType("InternalStyle")._as($.$get$Style_platform()), null));
    _lazyFinal($, "Style_posix", "$get$Style_posix", () => new A.PosixStyle(B.RegExp_RegExp("/", true), B.RegExp_RegExp("[^/]$", true), B.RegExp_RegExp("^/", true)));
    _lazyFinal($, "Style_windows", "$get$Style_windows", () => new A.WindowsStyle(B.RegExp_RegExp("[/\\\\]", true), B.RegExp_RegExp("[^/\\\\]$", true), B.RegExp_RegExp("^(\\\\\\\\[^\\\\]+\\\\[^\\\\/]+|[a-zA-Z]:[/\\\\])", true), B.RegExp_RegExp("^[/\\\\](?![/\\\\])", true)));
    _lazyFinal($, "Style_url", "$get$Style_url", () => new A.UrlStyle(B.RegExp_RegExp("/", true), B.RegExp_RegExp("(^[a-zA-Z][-+.a-zA-Z\\d]*://|[^/])$", true), B.RegExp_RegExp("[a-zA-Z][-+.a-zA-Z\\d]*://[^/]*", true), B.RegExp_RegExp("^/", true)));
    _lazyFinal($, "Style_platform", "$get$Style_platform", () => A.Style__getPlatformStyle());
    _lazyFinal($, "VisibilityDetectorController__instance", "$get$VisibilityDetectorController__instance", () => new A.VisibilityDetectorController(C.Duration_500000));
  })();
};

$__dart_deferred_initializers__["SgHYjDCdlDKQyjEsIlqw3dZuzzw="] = $__dart_deferred_initializers__.current
