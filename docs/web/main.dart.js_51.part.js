// Generated by dart2js (NullSafetyMode.sound, csp, deferred-serialization, intern-composite-values), the Dart to JavaScript compiler version: 2.19.6.
self.$__dart_deferred_initializers__ = self.$__dart_deferred_initializers__ || Object.create(null);
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A = {BlocSpanTwoCubit: function BlocSpanTwoCubit(t0, t1) {
      var _ = this;
      _._blocObserver = t0;
      _.__BlocBase__stateController_FI = $;
      _._bloc$_state = t1;
      _._emitted = false;
    }, BlocSpanTwoState: function BlocSpanTwoState() {
      this.__BlocSpanTwoState_count_A = $;
    },
    CubitSpanTwoPage$() {
      return new A.CubitSpanTwoPage(null);
    },
    CubitSpanTwoPage: function CubitSpanTwoPage(t0) {
      this.key = t0;
    },
    CubitSpanTwoPage_build_closure0: function CubitSpanTwoPage_build_closure0() {
    },
    CubitSpanTwoPage_build_closure: function CubitSpanTwoPage_build_closure(t0) {
      this.$this = t0;
    },
    CubitSpanTwoPage__buildPage_closure: function CubitSpanTwoPage__buildPage_closure(t0, t1) {
      this.context = t0;
      this.cubit = t1;
    },
    CubitSpanTwoPage__buildPage_closure0: function CubitSpanTwoPage__buildPage_closure0() {
    }
  },
  E, B, C, F, G, H, D, I;
  A = hunkHelpers.updateHolder(holdersList[12], A);
  E = holdersList[44];
  B = holdersList[0];
  C = holdersList[50];
  F = holdersList[57];
  G = holdersList[62];
  H = holdersList[58];
  D = holdersList[2];
  I = holdersList[45];
  A.BlocSpanTwoCubit.prototype = {};
  A.BlocSpanTwoState.prototype = {};
  A.CubitSpanTwoPage.prototype = {
    build$1(context) {
      return E.BlocProvider$(new B.Builder(new A.CubitSpanTwoPage_build_closure(this), null), new A.CubitSpanTwoPage_build_closure0(), type$.BlocSpanTwoCubit);
    },
    _span_two_view$_buildPage$1(context) {
      var _null = null,
        t1 = type$.BlocSpanTwoCubit,
        cubit = C.BlocProvider_of(context, t1),
        t2 = F.AppBar$(B.Text$("\u8de8\u9875\u9762-Two", _null, _null, _null, _null, _null, _null)),
        t3 = B.FloatingActionButton$(G.Icon_W7X, false, new A.CubitSpanTwoPage__buildPage_closure(context, cubit));
      return H.Scaffold$(t2, D.Color_4294967295, B.Center$(I.BlocBuilder$(new A.CubitSpanTwoPage__buildPage_closure0(), t1, type$.BlocSpanTwoState), _null, _null), _null, t3);
    }
  };
  var typesOffset = hunkHelpers.updateTypes(["BlocSpanTwoCubit(BuildContext)", "Text(BuildContext,BlocSpanTwoState)"]);
  A.CubitSpanTwoPage_build_closure0.prototype = {
    call$1(context) {
      var t2,
        t1 = new A.BlocSpanTwoState();
      t1.__BlocSpanTwoState_count_A = 0;
      $.$get$BlocOverrides__token();
      t1 = new A.BlocSpanTwoCubit(D.C__DefaultBlocObserver, t1);
      t2 = new A.BlocSpanTwoState();
      t2.__BlocSpanTwoState_count_A = 0;
      t1.emit$1(t2);
      return t1;
    },
    $signature: typesOffset + 0
  };
  A.CubitSpanTwoPage_build_closure.prototype = {
    call$1(context) {
      return this.$this._span_two_view$_buildPage$1(type$.BuildContext._as(context));
    },
    $signature: 2
  };
  A.CubitSpanTwoPage__buildPage_closure.prototype = {
    call$0() {
      var t4,
        t1 = C.BlocProvider_of(this.context, type$.BlocSpanOneCubit),
        t2 = t1._bloc$_state,
        t3 = t2.__BlocSpanOneState_count_A;
      t3 === $ && B.throwLateFieldNI("count");
      ++t3;
      t2.__BlocSpanOneState_count_A = t3;
      t2 = new B.BlocSpanOneState();
      t2.__BlocSpanOneState_count_A = t3;
      t1.emit$1(t2);
      t2 = this.cubit;
      t1 = t2._bloc$_state;
      t3 = new A.BlocSpanTwoState();
      t4 = t1.__BlocSpanTwoState_count_A;
      t4 === $ && B.throwLateFieldNI("count");
      t3.__BlocSpanTwoState_count_A = t4;
      t3.__BlocSpanTwoState_count_A = t1.__BlocSpanTwoState_count_A = t4 + 1;
      t2.emit$1(t3);
    },
    $signature: 0
  };
  A.CubitSpanTwoPage__buildPage_closure0.prototype = {
    call$2(context, state) {
      var t1, _null = null;
      type$.BuildContext._as(context);
      t1 = type$.BlocSpanTwoState._as(state).__BlocSpanTwoState_count_A;
      t1 === $ && B.throwLateFieldNI("count");
      return B.Text$("\u5f53\u524d\u70b9\u51fb\u4e86 " + t1 + " \u6b21", _null, _null, _null, B.TextStyle$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, 30, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null), _null, _null);
    },
    $signature: typesOffset + 1
  };
  (function inheritance() {
    var _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A.BlocSpanTwoCubit, B.Cubit);
    _inherit(A.BlocSpanTwoState, B.Object);
    _inherit(A.CubitSpanTwoPage, B.StatelessWidget);
    _inheritMany(B.Closure, [A.CubitSpanTwoPage_build_closure0, A.CubitSpanTwoPage_build_closure]);
    _inherit(A.CubitSpanTwoPage__buildPage_closure, B.Closure0Args);
    _inherit(A.CubitSpanTwoPage__buildPage_closure0, B.Closure2Args);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"BlocSpanTwoCubit":{"Cubit":["BlocSpanTwoState"],"BlocBase":["BlocSpanTwoState"],"StateStreamableSource":["BlocSpanTwoState"],"StateStreamable":["BlocSpanTwoState"],"BlocBase.0":"BlocSpanTwoState"},"CubitSpanTwoPage":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]}}'));
  var type$ = {
    BlocSpanOneCubit: B.findType("BlocSpanOneCubit"),
    BlocSpanTwoCubit: B.findType("BlocSpanTwoCubit"),
    BlocSpanTwoState: B.findType("BlocSpanTwoState"),
    BuildContext: B.findType("BuildContext")
  };
};

$__dart_deferred_initializers__["HFuav4nL6p2PD2IqeYMTsx5jZ+M="] = $__dart_deferred_initializers__.current
