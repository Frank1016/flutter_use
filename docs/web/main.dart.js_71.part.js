// Generated by dart2js (NullSafetyMode.sound, csp, deferred-serialization, intern-composite-values), the Dart to JavaScript compiler version: 2.19.6.
self.$__dart_deferred_initializers__ = self.$__dart_deferred_initializers__ || Object.create(null);
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A = {TestNotifierWidget: function TestNotifierWidget(t0, t1) {
      this.controller = t0;
      this.key = t1;
    }, _TestNotifierState: function _TestNotifierState(t0) {
      this._widget = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    }, _TestNotifierState__change_closure: function _TestNotifierState__change_closure() {
    }, TestNotifierController: function TestNotifierController(t0) {
      var _ = this;
      _._test_notifier_widget$_value = "0";
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = _.ChangeNotifier__debugDisposed = false;
    },
    TestNotifierPage$() {
      return new A.TestNotifierPage(null);
    },
    TestNotifierPage: function TestNotifierPage(t0) {
      this.key = t0;
    },
    TestNotifierPage_build_closure: function TestNotifierPage_build_closure(t0, t1) {
      this._box_0 = t0;
      this.controller = t1;
    }
  },
  C, B, D, E, F, G, H;
  A = hunkHelpers.updateHolder(holdersList[26], A);
  C = holdersList[2];
  B = holdersList[0];
  D = holdersList[40];
  E = holdersList[73];
  F = holdersList[58];
  G = holdersList[57];
  H = holdersList[59];
  A.TestNotifierWidget.prototype = {
    createState$0() {
      return new A._TestNotifierState(C._StateLifecycle_0);
    }
  };
  A._TestNotifierState.prototype = {
    initState$0() {
      this._widget.controller.addListener$1(0, this.get$_change());
      this.super$State$initState();
    },
    build$1(context) {
      var _null = null,
        t1 = this._widget.controller._test_notifier_widget$_value;
      return B.Text$(t1, _null, _null, _null, B.TextStyle$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, 30, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null), _null, _null);
    },
    _change$0() {
      this.setState$1(new A._TestNotifierState__change_closure());
    }
  };
  A.TestNotifierController.prototype = {
    set$value(_, newValue) {
      if (this._test_notifier_widget$_value === newValue)
        return;
      this._test_notifier_widget$_value = newValue;
      this.notifyListeners$0();
    }
  };
  A.TestNotifierPage.prototype = {
    build$1(context) {
      var _null = null, t1 = {},
        controller = new A.TestNotifierController($.$get$ChangeNotifier__emptyListeners());
      t1.count = 0;
      D.TextField$(false, _null, E.InputDecoration_C4W, _null, C.TextAlign_4, _null);
      D.TextEditingController$(_null);
      return F.Scaffold$(G.AppBar$(B.Text$("ChangeNotifier\u4f7f\u7528\u6f14\u793a", _null, _null, _null, _null, _null, _null)), _null, B.Center$(new A.TestNotifierWidget(controller, _null), _null, _null), _null, B.FloatingActionButton$(B.Icon$(H.IconData_57415_MaterialIcons_null_false, _null, _null), false, new A.TestNotifierPage_build_closure(t1, controller)));
    }
  };
  var typesOffset = hunkHelpers.updateTypes(["~()"]);
  A._TestNotifierState__change_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.TestNotifierPage_build_closure.prototype = {
    call$0() {
      this.controller.set$value(0, "\u6570\u503c\u53d8\u5316\uff1a" + C.JSInt_methods.toString$0(++this._box_0.count));
    },
    $signature: 0
  };
  (function installTearOffs() {
    var _instance_0_u = hunkHelpers._instance_0u;
    _instance_0_u(A._TestNotifierState.prototype, "get$_change", "_change$0", 0);
  })();
  (function inheritance() {
    var _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A.TestNotifierWidget, B.StatefulWidget);
    _inherit(A._TestNotifierState, B.State);
    _inheritMany(B.Closure0Args, [A._TestNotifierState__change_closure, A.TestNotifierPage_build_closure]);
    _inherit(A.TestNotifierController, B.ChangeNotifier);
    _inherit(A.TestNotifierPage, B.StatelessWidget);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"TestNotifierWidget":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_TestNotifierState":{"State":["TestNotifierWidget"],"State.T":"TestNotifierWidget"},"TestNotifierController":{"ChangeNotifier":[],"Listenable":[]},"TestNotifierPage":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]}}'));
};

$__dart_deferred_initializers__["hHvxjzT9Ct3n5S3MwdEC60XtfJ8="] = $__dart_deferred_initializers__.current
