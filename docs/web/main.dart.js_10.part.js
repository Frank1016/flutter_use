// Generated by dart2js (NullSafetyMode.sound, csp, deferred-serialization, intern-composite-values), the Dart to JavaScript compiler version: 2.19.6.
self.$__dart_deferred_initializers__ = self.$__dart_deferred_initializers__ || Object.create(null);
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A = {
    _LinkedListIterator$(list, $E) {
      return new A._LinkedListIterator(list, list._modificationCount, list._collection$_first, $E._eval$1("_LinkedListIterator<0>"));
    },
    LinkedList: function LinkedList(t0) {
      var _ = this;
      _._collection$_length = _._modificationCount = 0;
      _._collection$_first = null;
      _.$ti = t0;
    },
    _LinkedListIterator: function _LinkedListIterator(t0, t1, t2, t3) {
      var _ = this;
      _._collection$_list = t0;
      _._modificationCount = t1;
      _._collection$_current = null;
      _._collection$_next = t2;
      _._visitedFirst = false;
      _.$ti = t3;
    },
    LinkedListEntry: function LinkedListEntry() {
    },
    AnimationMin$(first, next, $T) {
      return new A.AnimationMin(first, next, new B.ObserverList(B._setArrayType([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), new B.ObserverList(B._setArrayType([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function), 0, $T._eval$1("AnimationMin<0>"));
    },
    CompoundAnimation: function CompoundAnimation() {
    },
    AnimationMin: function AnimationMin(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.first = t0;
      _.next = t1;
      _._lastValue = _._lastStatus = null;
      _.AnimationLocalStatusListenersMixin__statusListeners = t2;
      _.AnimationLocalListenersMixin__listeners = t3;
      _.AnimationLazyListenerMixin__listenerCounter = t4;
      _.$ti = t5;
    },
    _CompoundAnimation_Animation_AnimationLazyListenerMixin: function _CompoundAnimation_Animation_AnimationLazyListenerMixin() {
    },
    _CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin: function _CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin() {
    },
    _CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin: function _CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin() {
    },
    Threshold: function Threshold(t0) {
      this.threshold = t0;
    },
    ButtonStyleButton: function ButtonStyleButton() {
    },
    _ButtonStyleState: function _ButtonStyleState(t0, t1, t2) {
      var _ = this;
      _.internalStatesController = _.backgroundColor = _.elevation = _.controller = null;
      _.TickerProviderStateMixin__tickers = t0;
      _.TickerProviderStateMixin__tickerModeNotifier = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _ButtonStyleState_handleStatesControllerChange_closure: function _ButtonStyleState_handleStatesControllerChange_closure() {
    },
    _ButtonStyleState_build_effectiveValue: function _ButtonStyleState_build_effectiveValue(t0, t1, t2) {
      this.widgetStyle = t0;
      this.themeStyle = t1;
      this.defaultStyle = t2;
    },
    _ButtonStyleState_build_resolve: function _ButtonStyleState_build_resolve(t0, t1) {
      this.$this = t0;
      this.effectiveValue = t1;
    },
    _ButtonStyleState_build_resolve_closure: function _ButtonStyleState_build_resolve_closure(t0, t1, t2) {
      this.$this = t0;
      this.getProperty = t1;
      this.T = t2;
    },
    _ButtonStyleState_build_closure: function _ButtonStyleState_build_closure() {
    },
    _ButtonStyleState_build_closure0: function _ButtonStyleState_build_closure0() {
    },
    _ButtonStyleState_build_closure1: function _ButtonStyleState_build_closure1() {
    },
    _ButtonStyleState_build_closure2: function _ButtonStyleState_build_closure2() {
    },
    _ButtonStyleState_build_closure3: function _ButtonStyleState_build_closure3() {
    },
    _ButtonStyleState_build_closure4: function _ButtonStyleState_build_closure4() {
    },
    _ButtonStyleState_build_closure5: function _ButtonStyleState_build_closure5() {
    },
    _ButtonStyleState_build_closure6: function _ButtonStyleState_build_closure6() {
    },
    _ButtonStyleState_build_closure7: function _ButtonStyleState_build_closure7() {
    },
    _ButtonStyleState_build_closure8: function _ButtonStyleState_build_closure8() {
    },
    _ButtonStyleState_build_closure9: function _ButtonStyleState_build_closure9() {
    },
    _ButtonStyleState_build_closure10: function _ButtonStyleState_build_closure10() {
    },
    _ButtonStyleState_build_closure11: function _ButtonStyleState_build_closure11() {
    },
    _ButtonStyleState_build_closure12: function _ButtonStyleState_build_closure12() {
    },
    _ButtonStyleState_build_closure20: function _ButtonStyleState_build_closure20(t0) {
      this.effectiveValue = t0;
    },
    _ButtonStyleState_build__closure0: function _ButtonStyleState_build__closure0(t0) {
      this.states = t0;
    },
    _ButtonStyleState_build_closure21: function _ButtonStyleState_build_closure21(t0) {
      this.effectiveValue = t0;
    },
    _ButtonStyleState_build__closure: function _ButtonStyleState_build__closure(t0) {
      this.states = t0;
    },
    _ButtonStyleState_build_closure13: function _ButtonStyleState_build_closure13() {
    },
    _ButtonStyleState_build_closure14: function _ButtonStyleState_build_closure14() {
    },
    _ButtonStyleState_build_closure15: function _ButtonStyleState_build_closure15() {
    },
    _ButtonStyleState_build_closure16: function _ButtonStyleState_build_closure16() {
    },
    _ButtonStyleState_build_closure17: function _ButtonStyleState_build_closure17() {
    },
    _ButtonStyleState_build_closure18: function _ButtonStyleState_build_closure18() {
    },
    _ButtonStyleState_build_closure19: function _ButtonStyleState_build_closure19(t0) {
      this.$this = t0;
    },
    _ButtonStyleState_build__closure1: function _ButtonStyleState_build__closure1() {
    },
    _MouseCursor: function _MouseCursor(t0) {
      this.resolveCallback = t0;
    },
    _InputPadding0: function _InputPadding0(t0, t1, t2) {
      this.minSize = t0;
      this.child = t1;
      this.key = t2;
    },
    _RenderInputPadding0: function _RenderInputPadding0(t0, t1, t2) {
      var _ = this;
      _._button_style_button$_minSize = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderInputPadding_hitTest_closure0: function _RenderInputPadding_hitTest_closure0(t0, t1) {
      this.$this = t0;
      this.center = t1;
    },
    __ButtonStyleState_State_TickerProviderStateMixin: function __ButtonStyleState_State_TickerProviderStateMixin() {
    },
    Divider_createBorderSide(context, color, width) {
      var defaults, t1, effectiveColor, effectiveWidth,
        dividerTheme = A.DividerTheme_of(context);
      B.Theme_of(context);
      defaults = A._DividerDefaultsM2$(context);
      t1 = dividerTheme.color;
      effectiveColor = t1;
      if (effectiveColor == null)
        effectiveColor = defaults == null ? null : defaults.get$color(defaults);
      effectiveWidth = width;
      if (effectiveColor == null)
        return new B.BorderSide(C.Color_4278190080, effectiveWidth, C.BorderStyle_1, -1);
      return new B.BorderSide(effectiveColor, effectiveWidth, C.BorderStyle_1, -1);
    },
    _DividerDefaultsM2$(context) {
      return new A._DividerDefaultsM2(context, null, 16, 0, 0, 0);
    },
    _DividerDefaultsM2: function _DividerDefaultsM2(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.context = t0;
      _.color = t1;
      _.space = t2;
      _.thickness = t3;
      _.indent = t4;
      _.endIndent = t5;
    },
    FlexibleSpaceBarSettings: function FlexibleSpaceBarSettings(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.toolbarOpacity = t0;
      _.minExtent = t1;
      _.maxExtent = t2;
      _.currentExtent = t3;
      _.isScrolledUnder = t4;
      _.child = t5;
      _.key = t6;
    },
    _AnimationSwap$(first, next, $parent, swapThreshold, $T) {
      return new A._AnimationSwap($parent, swapThreshold, first, next, new B.ObserverList(B._setArrayType([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), new B.ObserverList(B._setArrayType([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function), 0, $T._eval$1("_AnimationSwap<0>"));
    },
    FloatingActionButtonLocation: function FloatingActionButtonLocation() {
    },
    StandardFabLocation: function StandardFabLocation() {
    },
    FabFloatOffsetY: function FabFloatOffsetY() {
    },
    FabEndOffsetX: function FabEndOffsetX() {
    },
    _EndFloatFabLocation: function _EndFloatFabLocation() {
    },
    FloatingActionButtonAnimator: function FloatingActionButtonAnimator() {
    },
    _ScalingFabMotionAnimator: function _ScalingFabMotionAnimator() {
    },
    _AnimationSwap: function _AnimationSwap(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.parent = t0;
      _.swapThreshold = t1;
      _.first = t2;
      _.next = t3;
      _._lastValue = _._lastStatus = null;
      _.AnimationLocalStatusListenersMixin__statusListeners = t4;
      _.AnimationLocalListenersMixin__listeners = t5;
      _.AnimationLazyListenerMixin__listenerCounter = t6;
      _.$ti = t7;
    },
    __EndFloatFabLocation_StandardFabLocation_FabEndOffsetX: function __EndFloatFabLocation_StandardFabLocation_FabEndOffsetX() {
    },
    __EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY: function __EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY() {
    },
    IconButton$(color, icon, iconSize, onPressed, tooltip) {
      return new A.IconButton(iconSize, icon, color, onPressed, tooltip, null);
    },
    IconButton: function IconButton(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.iconSize = t0;
      _.icon = t1;
      _.color = t2;
      _.onPressed = t3;
      _.tooltip = t4;
      _.key = t5;
    },
    ListTileStyle: function ListTileStyle(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    ListTileTheme$(child, data, key) {
      return new A.ListTileTheme(data, child, key);
    },
    ListTileTheme_of(context) {
      var result = context.dependOnInheritedWidgetOfExactType$1$0(type$.ListTileTheme),
        t1 = result == null ? null : result.get$data(result);
      return t1 == null ? B.Theme_of(context).listTileTheme : t1;
    },
    ListTileTheme_merge(child, iconColor, style, textColor) {
      var _null = null;
      return new B.Builder(new A.ListTileTheme_merge_closure(_null, _null, _null, style, _null, iconColor, textColor, _null, _null, _null, _null, _null, _null, _null, child), _null);
    },
    ListTileTheme: function ListTileTheme(t0, t1, t2) {
      this._list_tile_theme$_data = t0;
      this.child = t1;
      this.key = t2;
    },
    ListTileTheme_merge_closure: function ListTileTheme_merge_closure(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.key = t0;
      _.dense = t1;
      _.shape = t2;
      _.style = t3;
      _.selectedColor = t4;
      _.iconColor = t5;
      _.textColor = t6;
      _.contentPadding = t7;
      _.tileColor = t8;
      _.selectedTileColor = t9;
      _.enableFeedback = t10;
      _.horizontalTitleGap = t11;
      _.minVerticalPadding = t12;
      _.minLeadingWidth = t13;
      _.child = t14;
    },
    MaterialStateProperty: function MaterialStateProperty() {
    },
    MaterialStatePropertyAll: function MaterialStatePropertyAll(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    Scaffold$(appBar, backgroundColor, body, bottomNavigationBar, floatingActionButton) {
      return new A.Scaffold(appBar, body, floatingActionButton, backgroundColor, bottomNavigationBar, null);
    },
    Scaffold_of(context) {
      var result = context.findAncestorStateOfType$1$0(type$.ScaffoldState);
      if (result != null)
        return result;
      throw B.wrapException(B.FlutterError$fromParts(B._setArrayType([B.ErrorSummary$("Scaffold.of() called with a context that does not contain a Scaffold."), B.ErrorDescription$("No Scaffold ancestor could be found starting from the context that was passed to Scaffold.of(). This usually happens when the context provided is from the same StatefulWidget as that whose build function actually creates the Scaffold widget being sought."), B.ErrorHint$('There are several ways to avoid this problem. The simplest is to use a Builder to get a context that is "under" the Scaffold. For an example of this, please see the documentation for Scaffold.of():\n  https://api.flutter.dev/flutter/material/Scaffold/of.html'), B.ErrorHint$("A more efficient solution is to split your build function into several widgets. This introduces a new context from which you can obtain the Scaffold. In this solution, you would have an outer widget that creates the Scaffold populated by instances of your new inner widgets, and then in these inner widgets you would use Scaffold.of().\nA less elegant but more expedient solution is assign a GlobalKey to the Scaffold, then use the key.currentState property to obtain the ScaffoldState rather than using the Scaffold.of() function."), context.describeElement$1("The context used was")], type$.JSArray_DiagnosticsNode)));
    },
    _ScaffoldSlot: function _ScaffoldSlot(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    ScaffoldPrelayoutGeometry: function ScaffoldPrelayoutGeometry(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.floatingActionButtonSize = t0;
      _.bottomSheetSize = t1;
      _.contentBottom = t2;
      _.minInsets = t3;
      _.minViewPadding = t4;
      _.scaffoldSize = t5;
      _.snackBarSize = t6;
      _.textDirection = t7;
    },
    ScaffoldGeometry: function ScaffoldGeometry(t0, t1) {
      this.bottomNavigationBarTop = t0;
      this.floatingActionButtonArea = t1;
    },
    _ScaffoldGeometryNotifier: function _ScaffoldGeometryNotifier(t0, t1, t2) {
      var _ = this;
      _.context = t0;
      _.floatingActionButtonScale = null;
      _.geometry = t1;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t2;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = _.ChangeNotifier__debugDisposed = false;
    },
    _BodyBoxConstraints: function _BodyBoxConstraints(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.bottomWidgetsHeight = t0;
      _.appBarHeight = t1;
      _.materialBannerHeight = t2;
      _.minWidth = t3;
      _.maxWidth = t4;
      _.minHeight = t5;
      _.maxHeight = t6;
    },
    _BodyBuilder: function _BodyBuilder(t0, t1, t2, t3) {
      var _ = this;
      _.body = t0;
      _.extendBody = t1;
      _.extendBodyBehindAppBar = t2;
      _.key = t3;
    },
    _ScaffoldLayout: function _ScaffoldLayout(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.extendBody = t0;
      _.extendBodyBehindAppBar = t1;
      _.minInsets = t2;
      _.minViewPadding = t3;
      _.textDirection = t4;
      _.geometryNotifier = t5;
      _.previousFloatingActionButtonLocation = t6;
      _.currentFloatingActionButtonLocation = t7;
      _.floatingActionButtonMoveAnimationProgress = t8;
      _.floatingActionButtonMotionAnimator = t9;
      _.isSnackBarFloating = t10;
      _.snackBarWidth = t11;
      _.extendBodyBehindMaterialBanner = t12;
      _._debugChildrenNeedingLayout = _._idToChild = null;
    },
    _FloatingActionButtonTransition: function _FloatingActionButtonTransition(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.child = t0;
      _.fabMoveAnimation = t1;
      _.fabMotionAnimator = t2;
      _.geometryNotifier = t3;
      _.currentController = t4;
      _.key = t5;
    },
    _FloatingActionButtonTransitionState: function _FloatingActionButtonTransitionState(t0, t1, t2) {
      var _ = this;
      _.___FloatingActionButtonTransitionState__currentRotationAnimation_A = _.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_A = _.___FloatingActionButtonTransitionState__currentScaleAnimation_A = _.___FloatingActionButtonTransitionState__previousRotationAnimation_A = _.___FloatingActionButtonTransitionState__previousScaleAnimation_A = _.___FloatingActionButtonTransitionState__previousController_A = $;
      _._previousChild = null;
      _.TickerProviderStateMixin__tickers = t0;
      _.TickerProviderStateMixin__tickerModeNotifier = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure: function _FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure(t0, t1) {
      this.$this = t0;
      this.status = t1;
    },
    Scaffold: function Scaffold(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.appBar = t0;
      _.body = t1;
      _.floatingActionButton = t2;
      _.backgroundColor = t3;
      _.bottomNavigationBar = t4;
      _.key = t5;
    },
    ScaffoldState: function ScaffoldState(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _._drawerKey = t0;
      _._endDrawerKey = t1;
      _._bodyKey = t2;
      _._appBarMaxHeight = null;
      _._drawerOpened = t3;
      _._endDrawerOpened = t4;
      _._messengerMaterialBanner = _._messengerSnackBar = _._scaffoldMessenger = null;
      _._dismissedBottomSheets = t5;
      _._currentBottomSheet = null;
      _._currentBottomSheetKey = t6;
      _._persistentSheetHistoryEntry = null;
      _.__ScaffoldState__floatingActionButtonAnimator_A = _.__ScaffoldState__floatingActionButtonMoveController_A = $;
      _._floatingActionButtonLocation = _._previousFloatingActionButtonLocation = null;
      _.__ScaffoldState__geometryNotifier_A = _.__ScaffoldState__floatingActionButtonVisibilityController_A = $;
      _._showBodyScrim = false;
      _._bodyScrimColor = t7;
      _.RestorationMixin__bucket = t8;
      _.RestorationMixin__properties = t9;
      _.RestorationMixin__debugPropertiesWaitingForReregistration = t10;
      _.RestorationMixin__firstRestorePending = t11;
      _.RestorationMixin__currentParent = t12;
      _.TickerProviderStateMixin__tickers = t13;
      _.TickerProviderStateMixin__tickerModeNotifier = t14;
      _._widget = null;
      _._debugLifecycleState = t15;
      _._framework$_element = null;
    },
    ScaffoldState__updateSnackBar_closure: function ScaffoldState__updateSnackBar_closure(t0, t1) {
      this.$this = t0;
      this.messengerSnackBar = t1;
    },
    ScaffoldState__updateMaterialBanner_closure: function ScaffoldState__updateMaterialBanner_closure(t0, t1) {
      this.$this = t0;
      this.messengerMaterialBanner = t1;
    },
    ScaffoldState_build_closure: function ScaffoldState_build_closure(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.extendBody = t2;
      _.minInsets = t3;
      _.minViewPadding = t4;
      _.textDirection = t5;
      _.children = t6;
    },
    _DismissDrawerAction: function _DismissDrawerAction(t0, t1) {
      this.context = t0;
      this._actions$_listeners = t1;
      this._currentCallingAction = null;
    },
    _ScaffoldScope: function _ScaffoldScope(t0, t1, t2) {
      this.hasDrawer = t0;
      this.child = t1;
      this.key = t2;
    },
    _ScaffoldState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure: function _ScaffoldState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure() {
    },
    _ScaffoldState_State_TickerProviderStateMixin: function _ScaffoldState_State_TickerProviderStateMixin() {
    },
    _ScaffoldState_State_TickerProviderStateMixin_RestorationMixin: function _ScaffoldState_State_TickerProviderStateMixin_RestorationMixin() {
    },
    __FloatingActionButtonTransitionState_State_TickerProviderStateMixin: function __FloatingActionButtonTransitionState_State_TickerProviderStateMixin() {
    },
    MultiChildLayoutParentData: function MultiChildLayoutParentData(t0, t1, t2) {
      var _ = this;
      _.id = null;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    MultiChildLayoutDelegate: function MultiChildLayoutDelegate() {
    },
    RenderCustomMultiChildLayoutBox: function RenderCustomMultiChildLayoutBox(t0, t1, t2, t3, t4) {
      var _ = this;
      _._custom_layout$_delegate = t0;
      _.ContainerRenderObjectMixin__childCount = t1;
      _.ContainerRenderObjectMixin__firstChild = t2;
      _.ContainerRenderObjectMixin__lastChild = t3;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin: function _RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    Transform$rotate(alignment, angle, child, filterQuality) {
      return new B.Transform(A.Transform__computeRotation(angle), alignment, true, filterQuality, child, null);
    },
    Transform__computeRotation(radians) {
      var t1, sin, cos;
      if (radians === 0) {
        t1 = new B.Matrix4(new Float64Array(16));
        t1.setIdentity$0();
        return t1;
      }
      sin = Math.sin(radians);
      if (sin === 1)
        return A.Transform__createZRotation(1, 0);
      if (sin === -1)
        return A.Transform__createZRotation(-1, 0);
      cos = Math.cos(radians);
      if (cos === -1)
        return A.Transform__createZRotation(0, -1);
      return A.Transform__createZRotation(sin, cos);
    },
    Transform__createZRotation(sin, cos) {
      var t1 = new Float64Array(16);
      if (0 >= 16)
        return B.ioore(t1, 0);
      t1[0] = cos;
      if (1 >= 16)
        return B.ioore(t1, 1);
      t1[1] = sin;
      if (4 >= 16)
        return B.ioore(t1, 4);
      t1[4] = -sin;
      if (5 >= 16)
        return B.ioore(t1, 5);
      t1[5] = cos;
      if (10 >= 16)
        return B.ioore(t1, 10);
      t1[10] = 1;
      if (15 >= 16)
        return B.ioore(t1, 15);
      t1[15] = 1;
      return new B.Matrix4(t1);
    },
    LayoutId$(child, id) {
      return new A.LayoutId(id, child, new B.ValueKey(id, type$.ValueKey_Object));
    },
    LayoutId: function LayoutId(t0, t1, t2) {
      this.id = t0;
      this.child = t1;
      this.key = t2;
    },
    CustomMultiChildLayout: function CustomMultiChildLayout(t0, t1, t2) {
      this.delegate = t0;
      this.children = t1;
      this.key = t2;
    },
    Flexible: function Flexible() {
    },
    StatefulBuilder: function StatefulBuilder(t0, t1) {
      this.builder = t0;
      this.key = t1;
    },
    _StatefulBuilderState: function _StatefulBuilderState(t0) {
      this._widget = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    _reportException0(context, exception, stack, informationCollector) {
      var details = new B.FlutterErrorDetails(exception, stack, "widgets library", context, informationCollector, false);
      B.FlutterError_reportError(details);
      return details;
    },
    ConstrainedLayoutBuilder: function ConstrainedLayoutBuilder() {
    },
    _LayoutBuilderElement: function _LayoutBuilderElement(t0, t1, t2) {
      var _ = this;
      _._renderObject = _._layout_builder$_child = null;
      _._debugDoingBuild = false;
      _._slot = _._notificationTree = _._debugReassembleConfig = _._framework$_parent = _._ancestorRenderObjectElement = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._owner = null;
      _._lifecycleState = t1;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugBuiltOnce = _._inDirtyList = false;
      _.$ti = t2;
    },
    _LayoutBuilderElement__layout_layoutCallback: function _LayoutBuilderElement__layout_layoutCallback(t0, t1) {
      this.$this = t0;
      this.constraints = t1;
    },
    _LayoutBuilderElement__layout_layoutCallback_closure: function _LayoutBuilderElement__layout_layoutCallback_closure(t0) {
      this.$this = t0;
    },
    _LayoutBuilderElement__layout_layoutCallback_closure0: function _LayoutBuilderElement__layout_layoutCallback_closure0(t0) {
      this.$this = t0;
    },
    RenderConstrainedLayoutBuilder: function RenderConstrainedLayoutBuilder() {
    },
    LayoutBuilder: function LayoutBuilder(t0, t1) {
      this.builder = t0;
      this.key = t1;
    },
    _RenderLayoutBuilder: function _RenderLayoutBuilder(t0, t1, t2, t3, t4) {
      var _ = this;
      _.RenderConstrainedLayoutBuilder__callback = t0;
      _.RenderConstrainedLayoutBuilder__needsBuild = t1;
      _.RenderConstrainedLayoutBuilder__previousConstraints = t2;
      _.RenderObjectWithChildMixin__child = t3;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    __RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin: function __RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin() {
    },
    __RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder: function __RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder() {
    },
    RestorableBool: function RestorableBool(t0, t1) {
      var _ = this;
      _._defaultValue = t0;
      _._restoration_properties$_value = null;
      _._restoration0$_disposed = false;
      _._restoration0$_owner = _._restoration0$_restorationId = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = _.ChangeNotifier__debugDisposed = false;
    },
    _ScrollNotificationObserverScope: function _ScrollNotificationObserverScope(t0, t1, t2) {
      this._scrollNotificationObserverState = t0;
      this.child = t1;
      this.key = t2;
    },
    _ListenerEntry: function _ListenerEntry(t0) {
      var _ = this;
      _.listener = t0;
      _._collection$_previous = _._collection$_next = _._collection$_list = null;
    },
    ScrollNotificationObserver: function ScrollNotificationObserver(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    ScrollNotificationObserverState: function ScrollNotificationObserverState(t0, t1) {
      var _ = this;
      _._scroll_notification_observer$_listeners = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    ScrollNotificationObserverState__notifyListeners_closure: function ScrollNotificationObserverState__notifyListeners_closure(t0) {
      this.$this = t0;
    },
    ScrollNotificationObserverState_build_closure: function ScrollNotificationObserverState_build_closure(t0) {
      this.$this = t0;
    },
    ScrollNotificationObserverState_build_closure0: function ScrollNotificationObserverState_build_closure0(t0) {
      this.$this = t0;
    },
    _ConvertedScrollMetricsNotification: function _ConvertedScrollMetricsNotification(t0, t1, t2, t3, t4) {
      var _ = this;
      _.dragDetails = t0;
      _.scrollDelta = t1;
      _.metrics = t2;
      _.context = t3;
      _.ViewportNotificationMixin__depth = t4;
    },
    RotationTransition$(alignment, child, turns) {
      return new A.RotationTransition(alignment, child, turns, null);
    },
    RotationTransition: function RotationTransition(t0, t1, t2, t3) {
      var _ = this;
      _.alignment = t0;
      _.child = t1;
      _.listenable = t2;
      _.key = t3;
    },
    DividerTheme_of(context) {
      var t1;
      context.dependOnInheritedWidgetOfExactType$1$0(type$.DividerTheme);
      t1 = B.Theme_of(context);
      return t1.dividerTheme;
    },
    AppBar_preferredHeightFor(context, preferredSize) {
      var t1 = B.Theme_of(context).appBarTheme.toolbarHeight;
      if (t1 == null)
        t1 = 56;
      return t1 + 0;
    },
    BoxConstraints$loose(size) {
      return new B.BoxConstraints(0, size._dx, 0, size._dy);
    }
  },
  B, C, J, D;
  A = hunkHelpers.updateHolder(holdersList[58], A);
  B = holdersList[0];
  C = holdersList[2];
  J = holdersList[1];
  D = holdersList[79];
  A.LinkedList.prototype = {
    contains$1(_, entry) {
      return entry instanceof A.LinkedListEntry && this === entry._collection$_list;
    },
    get$iterator(_) {
      var _this = this;
      return new A._LinkedListIterator(_this, _this._modificationCount, _this._collection$_first, _this.$ti._eval$1("_LinkedListIterator<1>"));
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$first(_) {
      var t1;
      if (this._collection$_length === 0)
        throw B.wrapException(B.StateError$("No such element"));
      t1 = this._collection$_first;
      t1.toString;
      return t1;
    },
    get$last(_) {
      var t1;
      if (this._collection$_length === 0)
        throw B.wrapException(B.StateError$("No such element"));
      t1 = this._collection$_first._collection$_previous;
      t1.toString;
      return t1;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    _insertBefore$3$updateFirst(entry, newEntry, updateFirst) {
      var _this = this,
        t1 = _this.$ti;
      t1._eval$1("1?")._as(entry);
      t1._precomputed1._as(newEntry);
      if (newEntry._collection$_list != null)
        throw B.wrapException(B.StateError$("LinkedListEntry is already in a LinkedList"));
      ++_this._modificationCount;
      newEntry.set$_collection$_list(_this);
      if (_this._collection$_length === 0) {
        newEntry.set$_collection$_next(newEntry);
        newEntry.set$_collection$_previous(newEntry);
        _this.set$_collection$_first(newEntry);
        ++_this._collection$_length;
        return;
      }
      t1 = entry._collection$_previous;
      t1.toString;
      newEntry.set$_collection$_previous(t1);
      newEntry.set$_collection$_next(entry);
      t1.set$_collection$_next(newEntry);
      entry.set$_collection$_previous(newEntry);
      ++_this._collection$_length;
    },
    set$_collection$_first(_first) {
      this._collection$_first = this.$ti._eval$1("1?")._as(_first);
    }
  };
  A._LinkedListIterator.prototype = {
    get$current(_) {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        t1 = _this._collection$_list;
      if (_this._modificationCount !== t1._modificationCount)
        throw B.wrapException(B.ConcurrentModificationError$(_this));
      if (t1._collection$_length !== 0)
        t1 = _this._visitedFirst && _this._collection$_next === t1.get$first(t1);
      else
        t1 = true;
      if (t1) {
        _this.set$_collection$_current(null);
        return false;
      }
      _this._visitedFirst = true;
      _this.set$_collection$_current(_this._collection$_next);
      _this.set$_collection$_next(_this._collection$_next._collection$_next);
      return true;
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    set$_collection$_next(_next) {
      this._collection$_next = this.$ti._eval$1("1?")._as(_next);
    },
    $isIterator: 1
  };
  A.LinkedListEntry.prototype = {
    set$_collection$_list(_list) {
      this._collection$_list = B._instanceType(this)._eval$1("LinkedList<LinkedListEntry.E>?")._as(_list);
    },
    set$_collection$_next(_next) {
      this._collection$_next = B._instanceType(this)._eval$1("LinkedListEntry.E?")._as(_next);
    },
    set$_collection$_previous(_previous) {
      this._collection$_previous = B._instanceType(this)._eval$1("LinkedListEntry.E?")._as(_previous);
    }
  };
  A.CompoundAnimation.prototype = {
    didStartListening$0() {
      var t3, _this = this,
        t1 = _this.first,
        t2 = _this.get$_maybeNotifyListeners();
      t1.addListener$1(0, t2);
      t3 = _this.get$_maybeNotifyStatusListeners();
      t1.addStatusListener$1(t3);
      t1 = _this.next;
      t1.addListener$1(0, t2);
      t1.addStatusListener$1(t3);
    },
    didStopListening$0() {
      var t3, _this = this,
        t1 = _this.first,
        t2 = _this.get$_maybeNotifyListeners();
      t1.removeListener$1(0, t2);
      t3 = _this.get$_maybeNotifyStatusListeners();
      t1.removeStatusListener$1(t3);
      t1 = _this.next;
      t1.removeListener$1(0, t2);
      t1.removeStatusListener$1(t3);
    },
    get$status(_) {
      var t1 = this.next;
      if (t1.get$status(t1) === C.AnimationStatus_1 || t1.get$status(t1) === C.AnimationStatus_2)
        return t1.get$status(t1);
      t1 = this.first;
      return t1.get$status(t1);
    },
    toString$0(_) {
      return "CompoundAnimation(" + this.first.toString$0(0) + ", " + this.next.toString$0(0) + ")";
    },
    _maybeNotifyStatusListeners$1(_) {
      var _this = this;
      type$.AnimationStatus._as(_);
      if (_this.get$status(_this) != _this._lastStatus) {
        _this._lastStatus = _this.get$status(_this);
        _this.notifyStatusListeners$1(_this.get$status(_this));
      }
    },
    _maybeNotifyListeners$0() {
      var _this = this;
      if (!J.$eq$(_this.get$value(_this), _this._lastValue)) {
        _this.set$_lastValue(_this.get$value(_this));
        _this.notifyListeners$0();
      }
    },
    set$_lastValue(_lastValue) {
      this._lastValue = B._instanceType(this)._eval$1("1?")._as(_lastValue);
    }
  };
  A.AnimationMin.prototype = {
    get$value(_) {
      var t2,
        t1 = this.first;
      t1 = t1.get$value(t1);
      t2 = this.next;
      t2 = t2.get$value(t2);
      return Math.min(B.checkNum(t1), B.checkNum(t2));
    }
  };
  A._CompoundAnimation_Animation_AnimationLazyListenerMixin.prototype = {};
  A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin.prototype = {};
  A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin.prototype = {};
  A.Threshold.prototype = {
    transformInternal$1(t) {
      return t < this.threshold ? 0 : 1;
    }
  };
  A.ButtonStyleButton.prototype = {
    createState$0() {
      return new A._ButtonStyleState(null, null, C._StateLifecycle_0);
    }
  };
  A._ButtonStyleState.prototype = {
    handleStatesControllerChange$0() {
      this.setState$1(new A._ButtonStyleState_handleStatesControllerChange_closure());
    },
    get$statesController() {
      var t1 = this._widget.statesController;
      if (t1 == null) {
        t1 = this.internalStatesController;
        t1.toString;
      }
      return t1;
    },
    initStatesController$0() {
      var t1, _this = this;
      if (_this._widget.statesController == null)
        _this.internalStatesController = B.MaterialStatesController$(null);
      t1 = _this.get$statesController();
      _this._widget.toString;
      t1.update$2(0, C.MaterialState_6, false);
      _this.get$statesController().addListener$1(0, _this.get$handleStatesControllerChange());
    },
    initState$0() {
      this.super$State$initState();
      this.initStatesController$0();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      type$.ButtonStyleButton._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.statesController;
      if (_this._widget.statesController != t1) {
        if (t1 != null)
          t1.removeListener$1(0, _this.get$handleStatesControllerChange());
        if (_this._widget.statesController != null) {
          t1 = _this.internalStatesController;
          if (t1 != null)
            t1.dispose$0();
          _this.internalStatesController = null;
        }
        _this.initStatesController$0();
      }
      _this._widget.toString;
    },
    dispose$0() {
      var t1, _this = this;
      _this.get$statesController().removeListener$1(0, _this.get$handleStatesControllerChange());
      t1 = _this.internalStatesController;
      if (t1 != null)
        t1.dispose$0();
      t1 = _this.controller;
      if (t1 != null)
        t1.dispose$0();
      _this.super$__ButtonStyleState_State_TickerProviderStateMixin$dispose();
    },
    build$1(context) {
      var resolvedElevation, resolvedTextStyle, t2, resolvedBackgroundColor, resolvedForegroundColor, resolvedShadowColor, resolvedSurfaceTintColor, resolvedPadding, t3, resolvedMinimumSize, resolvedFixedSize, resolvedMaximumSize, resolvedIconColor, resolvedIconSize, resolvedSide, resolvedShape, resolvedVisualDensity, resolvedTapTargetSize, resolvedAnimationDuration, resolvedEnableFeedback, resolvedAlignment, densityAdjustment, resolvedSplashFactory, effectiveConstraints, size, dy, dx, padding, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, minSize, _this = this, _null = null,
        t1 = _this._widget,
        effectiveValue = new A._ButtonStyleState_build_effectiveValue(t1.style, t1.themeStyleOf$1(context), _this._widget.defaultStyleOf$1(context)),
        resolve = new A._ButtonStyleState_build_resolve(_this, effectiveValue);
      t1 = type$.nullable_double;
      resolvedElevation = resolve.call$1$1(new A._ButtonStyleState_build_closure(), t1);
      resolvedTextStyle = resolve.call$1$1(new A._ButtonStyleState_build_closure0(), type$.nullable_TextStyle);
      t2 = type$.nullable_Color;
      resolvedBackgroundColor = resolve.call$1$1(new A._ButtonStyleState_build_closure1(), t2);
      resolvedForegroundColor = resolve.call$1$1(new A._ButtonStyleState_build_closure2(), t2);
      resolvedShadowColor = resolve.call$1$1(new A._ButtonStyleState_build_closure3(), t2);
      resolvedSurfaceTintColor = resolve.call$1$1(new A._ButtonStyleState_build_closure4(), t2);
      resolvedPadding = resolve.call$1$1(new A._ButtonStyleState_build_closure5(), type$.nullable_EdgeInsetsGeometry);
      t3 = type$.nullable_Size;
      resolvedMinimumSize = resolve.call$1$1(new A._ButtonStyleState_build_closure6(), t3);
      resolvedFixedSize = resolve.call$1$1(new A._ButtonStyleState_build_closure7(), t3);
      resolvedMaximumSize = resolve.call$1$1(new A._ButtonStyleState_build_closure8(), t3);
      resolvedIconColor = resolve.call$1$1(new A._ButtonStyleState_build_closure9(), t2);
      resolvedIconSize = resolve.call$1$1(new A._ButtonStyleState_build_closure10(), t1);
      resolvedSide = resolve.call$1$1(new A._ButtonStyleState_build_closure11(), type$.nullable_BorderSide);
      resolvedShape = resolve.call$1$1(new A._ButtonStyleState_build_closure12(), type$.nullable_OutlinedBorder);
      resolvedVisualDensity = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure13(), type$.VisualDensity);
      resolvedTapTargetSize = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure14(), type$.MaterialTapTargetSize);
      resolvedAnimationDuration = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure15(), type$.Duration);
      resolvedEnableFeedback = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure16(), type$.bool);
      resolvedAlignment = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure17(), type$.AlignmentGeometry);
      densityAdjustment = new B.Offset(resolvedVisualDensity.horizontal, resolvedVisualDensity.vertical).$mul(0, 4);
      resolvedSplashFactory = effectiveValue.call$1$1(new A._ButtonStyleState_build_closure18(), type$.InteractiveInkFeatureFactory);
      t1 = resolvedMinimumSize._dx;
      t2 = resolvedMinimumSize._dy;
      effectiveConstraints = resolvedVisualDensity.effectiveConstraints$1(new B.BoxConstraints(t1, resolvedMaximumSize._dx, t2, resolvedMaximumSize._dy));
      if (resolvedFixedSize != null) {
        size = effectiveConstraints.constrain$1(resolvedFixedSize);
        t1 = size._dx;
        if (isFinite(t1))
          effectiveConstraints = effectiveConstraints.copyWith$2$maxWidth$minWidth(t1, t1);
        t1 = size._dy;
        if (isFinite(t1))
          effectiveConstraints = effectiveConstraints.copyWith$2$maxHeight$minHeight(t1, t1);
      }
      dy = densityAdjustment._dy;
      t1 = densityAdjustment._dx;
      dx = Math.max(0, t1);
      padding = resolvedPadding.add$1(0, new B.EdgeInsets(dx, dy, dx, dy)).clamp$2(0, C.EdgeInsets_0_0_0_0, C._MixedEdgeInsets_QWq);
      if (resolvedAnimationDuration._duration > 0) {
        t2 = _this.elevation;
        if (t2 != null) {
          t3 = _this.backgroundColor;
          if (t3 != null)
            if (t2 !== resolvedElevation)
              if (t3.get$value(t3) !== resolvedBackgroundColor.get$value(resolvedBackgroundColor)) {
                t2 = _this.backgroundColor;
                t2 = (t2.get$value(t2) >>> 24 & 255) / 255 === 1 && (resolvedBackgroundColor.get$value(resolvedBackgroundColor) >>> 24 & 255) / 255 < 1 && resolvedElevation === 0;
              } else
                t2 = false;
            else
              t2 = false;
          else
            t2 = false;
        } else
          t2 = false;
      } else
        t2 = false;
      if (t2) {
        t2 = _this.controller;
        if (!J.$eq$(t2 == null ? _null : t2.duration, resolvedAnimationDuration)) {
          t2 = _this.controller;
          if (t2 != null)
            t2.dispose$0();
          t2 = B.AnimationController$(_null, resolvedAnimationDuration, _null, _null, _this);
          t3 = type$.void_Function_AnimationStatus._as(new A._ButtonStyleState_build_closure19(_this));
          t2.didRegisterListener$0();
          t4 = t2.AnimationLocalStatusListenersMixin__statusListeners;
          t4.$ti._precomputed1._as(t3);
          t4._isDirty = true;
          C.JSArray_methods.add$1(t4._list, t3);
          _this.controller = t2;
        }
        resolvedBackgroundColor = _this.backgroundColor;
        _this.controller.set$value(0, 0);
        _this.controller.forward$0(0);
      }
      _this.elevation = resolvedElevation;
      _this.backgroundColor = resolvedBackgroundColor;
      resolvedElevation.toString;
      t2 = resolvedTextStyle == null ? _null : resolvedTextStyle.copyWith$1$color(resolvedForegroundColor);
      t3 = resolvedShape.copyWith$1$side(resolvedSide);
      t4 = resolvedBackgroundColor == null ? C.MaterialType_4 : C.MaterialType_3;
      t5 = _this._widget;
      t6 = t5.clipBehavior;
      t7 = t5.onPressed;
      t8 = t5.onLongPress;
      t9 = t5.onHover;
      t10 = t5.focusNode;
      t5 = t5.onFocusChange;
      t11 = resolvedShape.copyWith$1$side(resolvedSide);
      t12 = _this.get$statesController();
      t13 = resolvedIconColor == null ? resolvedForegroundColor : resolvedIconColor;
      resolvedAlignment.toString;
      t4 = B.Material$(resolvedAnimationDuration, _null, B.InkWell$(false, _null, true, B.IconTheme_merge(new B.Padding(padding, new B.Align(resolvedAlignment, 1, 1, _this._widget.child, _null), _null), new B.IconThemeData(resolvedIconSize, _null, _null, _null, _null, t13, _null, _null)), t11, resolvedEnableFeedback, _null, t10, C.Color_0, _null, new A._MouseCursor(new A._ButtonStyleState_build_closure20(effectiveValue)), t5, _null, t9, t8, t7, new B._MaterialStatePropertyWith(new A._ButtonStyleState_build_closure21(effectiveValue), type$._MaterialStatePropertyWith_nullable_Color), _null, resolvedSplashFactory, t12), t6, resolvedBackgroundColor, resolvedElevation, _null, resolvedShadowColor, t3, resolvedSurfaceTintColor, t2, t4);
      switch (resolvedTapTargetSize.index) {
        case 0:
          minSize = new B.Size(48 + t1, 48 + dy);
          break;
        case 1:
          minSize = C.Size_0_0;
          break;
        default:
          minSize = _null;
      }
      return B.Semantics$(true, _null, new A._InputPadding0(minSize, new B.ConstrainedBox(effectiveConstraints, t4, _null), _null), true, _null, true, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    $isTickerProvider: 1
  };
  A._MouseCursor.prototype = {
    resolve$1(states) {
      var t1 = this.resolveCallback.call$1(type$.Set_MaterialState._as(states));
      t1.toString;
      return t1;
    },
    get$debugDescription() {
      return "ButtonStyleButton_MouseCursor";
    }
  };
  A._InputPadding0.prototype = {
    createRenderObject$1(context) {
      var t1 = new A._RenderInputPadding0(this.minSize, null, B.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$._RenderInputPadding._as(renderObject).set$minSize(this.minSize);
    }
  };
  A._RenderInputPadding0.prototype = {
    set$minSize(value) {
      if (this._button_style_button$_minSize.$eq(0, value))
        return;
      this._button_style_button$_minSize = value;
      this.markNeedsLayout$0();
    },
    _computeSize$2$constraints$layoutChild(constraints, layoutChild) {
      var t1, childSize, t2;
      type$.Size_Function_RenderBox_BoxConstraints._as(layoutChild);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        childSize = layoutChild.call$2(t1, constraints);
        t1 = childSize._dx;
        t2 = this._button_style_button$_minSize;
        return constraints.constrain$1(new B.Size(Math.max(t1, t2._dx), Math.max(childSize._dy, t2._dy)));
      }
      return C.Size_0_0;
    },
    computeDryLayout$1(constraints) {
      return this._computeSize$2$constraints$layoutChild(constraints, B.layout_helper_ChildLayoutHelper_dryLayoutChild$closure());
    },
    performLayout$0() {
      var t2, t3, _this = this,
        t1 = _this._computeSize$2$constraints$layoutChild(type$.BoxConstraints._as(B.RenderObject.prototype.get$constraints.call(_this)), B.layout_helper_ChildLayoutHelper_layoutChild$closure());
      _this._size = t1;
      t2 = _this.RenderObjectWithChildMixin__child;
      if (t2 != null) {
        t3 = t2.parentData;
        t3.toString;
        type$.BoxParentData._as(t3);
        t2 = t2._size;
        t2.toString;
        t3.offset = C.Alignment_0_0.alongOffset$1(type$.Offset._as(t1.$sub(0, t2)));
      }
    },
    hitTest$2$position(result, position) {
      var center;
      if (this.super$RenderBox$hitTest(result, position))
        return true;
      center = this.RenderObjectWithChildMixin__child._size.center$1(C.Offset_0_0);
      return result.addWithRawTransform$3$hitTest$position$transform(new A._RenderInputPadding_hitTest_closure0(this, center), center, B.MatrixUtils_forceToPoint(center));
    }
  };
  A.__ButtonStyleState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    }
  };
  A._DividerDefaultsM2.prototype = {
    get$color(_) {
      return B.Theme_of(this.context).dividerColor;
    }
  };
  A.FlexibleSpaceBarSettings.prototype = {
    updateShouldNotify$1(oldWidget) {
      var _this = this;
      type$.FlexibleSpaceBarSettings._as(oldWidget);
      return _this.toolbarOpacity !== oldWidget.toolbarOpacity || _this.minExtent !== oldWidget.minExtent || _this.maxExtent !== oldWidget.maxExtent || _this.currentExtent !== oldWidget.currentExtent || false;
    }
  };
  A.FloatingActionButtonLocation.prototype = {
    toString$0(_) {
      return "FloatingActionButtonLocation";
    }
  };
  A.StandardFabLocation.prototype = {
    getOffset$1(scaffoldGeometry) {
      var t1 = this.getOffsetX$2(scaffoldGeometry, 0),
        contentBottom = scaffoldGeometry.contentBottom,
        bottomSheetHeight = scaffoldGeometry.bottomSheetSize._dy,
        fabHeight = scaffoldGeometry.floatingActionButtonSize._dy,
        snackBarHeight = scaffoldGeometry.snackBarSize._dy,
        fabY = contentBottom - fabHeight - Math.max(16, scaffoldGeometry.minViewPadding.bottom - (scaffoldGeometry.scaffoldSize._dy - contentBottom) + 16);
      if (snackBarHeight > 0)
        fabY = Math.min(fabY, contentBottom - snackBarHeight - fabHeight - 16);
      return new B.Offset(t1, (bottomSheetHeight > 0 ? Math.min(fabY, contentBottom - bottomSheetHeight - fabHeight / 2) : fabY) + 0);
    }
  };
  A.FabFloatOffsetY.prototype = {};
  A.FabEndOffsetX.prototype = {
    getOffsetX$2(scaffoldGeometry, adjustment) {
      switch (scaffoldGeometry.textDirection.index) {
        case 0:
          return 16 + scaffoldGeometry.minInsets.left - adjustment;
        case 1:
          return scaffoldGeometry.scaffoldSize._dx - 16 - scaffoldGeometry.minInsets.right - scaffoldGeometry.floatingActionButtonSize._dx + adjustment;
      }
    }
  };
  A._EndFloatFabLocation.prototype = {
    toString$0(_) {
      return "FloatingActionButtonLocation.endFloat";
    }
  };
  A.FloatingActionButtonAnimator.prototype = {
    toString$0(_) {
      return "FloatingActionButtonAnimator";
    }
  };
  A._ScalingFabMotionAnimator.prototype = {
    getOffset$3$begin$end$progress(begin, end, progress) {
      if (progress < 0.5)
        return begin;
      else
        return end;
    }
  };
  A._AnimationSwap.prototype = {
    get$value(_) {
      var _this = this,
        t1 = _this.parent.__AnimationController__value_A;
      t1 === $ && B.throwLateFieldNI("_value");
      if (t1 < _this.swapThreshold) {
        t1 = _this.first;
        t1 = t1.get$value(t1);
      } else {
        t1 = _this.next;
        t1 = t1.get$value(t1);
      }
      return t1;
    }
  };
  A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX.prototype = {};
  A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY.prototype = {};
  A.IconButton.prototype = {
    build$1(context) {
      var result, _this = this, _null = null,
        theme = B.Theme_of(context),
        adjustedConstraints = theme.visualDensity.effectiveConstraints$1(D.BoxConstraints_mlX1),
        t1 = _this.iconSize,
        effectiveIconSize = t1 == null ? B.IconTheme_of(context).size : t1;
      if (effectiveIconSize == null)
        effectiveIconSize = 24;
      result = new B.ConstrainedBox(adjustedConstraints, new B.Padding(D.EdgeInsets_8_8_8_8, B.SizedBox$(new B.Align(C.Alignment_0_0, _null, _null, B.IconTheme_merge(_this.icon, new B.IconThemeData(effectiveIconSize, _null, _null, _null, _null, _this.color, _null, _null)), _null), effectiveIconSize, effectiveIconSize), _null), _null);
      t1 = _this.tooltip;
      if (t1 != null)
        result = B.Tooltip$(result, _null, t1, _null, _null);
      t1 = Math.max(35, (effectiveIconSize + Math.min(D.EdgeInsets_8_8_8_8.get$horizontal(), D.EdgeInsets_8_8_8_8.get$_top(D.EdgeInsets_8_8_8_8) + D.EdgeInsets_8_8_8_8.get$_bottom(D.EdgeInsets_8_8_8_8))) * 0.7);
      return B.Semantics$(true, _null, B.InkResponse$(false, _null, true, result, false, _null, true, false, theme.focusColor, _null, theme.highlightColor, C.BoxShape_1, theme.hoverColor, _null, C.SystemMouseCursor_click, _null, _null, _null, _null, _null, _this.onPressed, _null, _null, _null, _null, t1, theme.splashColor, _null, _null), false, _null, true, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  A.ListTileStyle.prototype = {
    _enumToString$0() {
      return "ListTileStyle." + this._core$_name;
    }
  };
  A.ListTileTheme.prototype = {
    get$data(_) {
      return this._list_tile_theme$_data;
    },
    wrap$2(_, context, child) {
      var t1 = this._list_tile_theme$_data;
      return A.ListTileTheme$(child, B.ListTileThemeData$(t1.contentPadding, t1.dense, t1.enableFeedback, t1.horizontalTitleGap, t1.iconColor, t1.minLeadingWidth, t1.minVerticalPadding, null, t1.selectedColor, t1.selectedTileColor, t1.shape, t1.style, t1.textColor, t1.tileColor, null), null);
    },
    updateShouldNotify$1(oldWidget) {
      type$.ListTileTheme._as(oldWidget);
      return !this.get$data(this).$eq(0, oldWidget.get$data(oldWidget));
    }
  };
  A.MaterialStateProperty.prototype = {};
  A.MaterialStatePropertyAll.prototype = {
    resolve$1(states) {
      type$.Set_MaterialState._as(states);
      return this.value;
    },
    toString$0(_) {
      var _s25_ = "MaterialStatePropertyAll(",
        t1 = this.value;
      if (typeof t1 == "number")
        return _s25_ + B.debugFormatDouble(t1) + ")";
      else
        return _s25_ + B.S(t1) + ")";
    },
    $isMaterialStateProperty: 1
  };
  A._ScaffoldSlot.prototype = {
    _enumToString$0() {
      return "_ScaffoldSlot." + this._core$_name;
    }
  };
  A.ScaffoldPrelayoutGeometry.prototype = {};
  A.ScaffoldGeometry.prototype = {
    copyWith$2$bottomNavigationBarTop$floatingActionButtonArea(bottomNavigationBarTop, floatingActionButtonArea) {
      var t1 = bottomNavigationBarTop == null ? this.bottomNavigationBarTop : bottomNavigationBarTop;
      return new A.ScaffoldGeometry(t1, floatingActionButtonArea == null ? this.floatingActionButtonArea : floatingActionButtonArea);
    }
  };
  A._ScaffoldGeometryNotifier.prototype = {
    _updateWith$3$bottomNavigationBarTop$floatingActionButtonArea$floatingActionButtonScale(bottomNavigationBarTop, floatingActionButtonArea, floatingActionButtonScale) {
      var _this = this;
      _this.floatingActionButtonScale = floatingActionButtonScale == null ? _this.floatingActionButtonScale : floatingActionButtonScale;
      _this.geometry = _this.geometry.copyWith$2$bottomNavigationBarTop$floatingActionButtonArea(bottomNavigationBarTop, floatingActionButtonArea);
      _this.notifyListeners$0();
    },
    _updateWith$1$floatingActionButtonScale(floatingActionButtonScale) {
      return this._updateWith$3$bottomNavigationBarTop$floatingActionButtonArea$floatingActionButtonScale(null, null, floatingActionButtonScale);
    },
    _updateWith$2$bottomNavigationBarTop$floatingActionButtonArea(bottomNavigationBarTop, floatingActionButtonArea) {
      return this._updateWith$3$bottomNavigationBarTop$floatingActionButtonArea$floatingActionButtonScale(bottomNavigationBarTop, floatingActionButtonArea, null);
    },
    $isValueListenable: 1
  };
  A._BodyBoxConstraints.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!_this.super$BoxConstraints$$eq(0, other))
        return false;
      return other instanceof A._BodyBoxConstraints && other.materialBannerHeight === _this.materialBannerHeight && other.bottomWidgetsHeight === _this.bottomWidgetsHeight && other.appBarHeight === _this.appBarHeight;
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(B.BoxConstraints.prototype.get$hashCode.call(_this, _this), _this.materialBannerHeight, _this.bottomWidgetsHeight, _this.appBarHeight, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue);
    }
  };
  A._BodyBuilder.prototype = {
    build$1(context) {
      return this.body;
    }
  };
  A._ScaffoldLayout.prototype = {
    performLayout$1(size) {
      var appBarHeight, contentTop, bottomWidgetsHeight, bottomNavigationBarTop, materialBannerSize, t2, contentBottom, bodyMaxHeight, t3, bottomSheetSize, floatingActionButtonRect, fabSize, currentGeometry, currentFabOffset, fabOffset, t4, t5, hasCustomWidth, snackBarSize, snackBarYOffsetBase, xOffset, _this = this,
        looseConstraints = A.BoxConstraints$loose(size),
        t1 = size._dx,
        fullWidthConstraints = looseConstraints.tighten$1$width(t1),
        bottom = size._dy;
      if (_this._idToChild.$index(0, D._ScaffoldSlot_1) != null) {
        appBarHeight = _this.layoutChild$2(D._ScaffoldSlot_1, fullWidthConstraints)._dy;
        _this.positionChild$2(D._ScaffoldSlot_1, C.Offset_0_0);
        contentTop = appBarHeight;
      } else {
        contentTop = 0;
        appBarHeight = 0;
      }
      if (_this._idToChild.$index(0, D._ScaffoldSlot_7) != null) {
        bottomWidgetsHeight = 0 + _this.layoutChild$2(D._ScaffoldSlot_7, fullWidthConstraints)._dy;
        bottomNavigationBarTop = Math.max(0, bottom - bottomWidgetsHeight);
        _this.positionChild$2(D._ScaffoldSlot_7, new B.Offset(0, bottomNavigationBarTop));
      } else {
        bottomWidgetsHeight = 0;
        bottomNavigationBarTop = null;
      }
      if (_this._idToChild.$index(0, D._ScaffoldSlot_6) != null) {
        bottomWidgetsHeight += _this.layoutChild$2(D._ScaffoldSlot_6, new B.BoxConstraints(0, fullWidthConstraints.maxWidth, 0, Math.max(0, bottom - bottomWidgetsHeight - contentTop)))._dy;
        _this.positionChild$2(D._ScaffoldSlot_6, new B.Offset(0, Math.max(0, bottom - bottomWidgetsHeight)));
      }
      if (_this._idToChild.$index(0, D._ScaffoldSlot_5) != null) {
        materialBannerSize = _this.layoutChild$2(D._ScaffoldSlot_5, fullWidthConstraints);
        _this.positionChild$2(D._ScaffoldSlot_5, new B.Offset(0, appBarHeight));
        if (!_this.extendBodyBehindMaterialBanner)
          contentTop += materialBannerSize._dy;
      } else
        materialBannerSize = C.Size_0_0;
      t2 = _this.minInsets;
      contentBottom = Math.max(0, bottom - Math.max(t2.bottom, bottomWidgetsHeight));
      if (_this._idToChild.$index(0, D._ScaffoldSlot_0) != null) {
        bodyMaxHeight = Math.max(0, contentBottom - contentTop);
        t3 = _this.extendBody;
        if (t3)
          bodyMaxHeight = B.clampDouble(bodyMaxHeight + bottomWidgetsHeight, 0, looseConstraints.maxHeight - contentTop);
        t3 = t3 ? bottomWidgetsHeight : 0;
        _this.layoutChild$2(D._ScaffoldSlot_0, new A._BodyBoxConstraints(t3, appBarHeight, materialBannerSize._dy, 0, fullWidthConstraints.maxWidth, 0, bodyMaxHeight));
        _this.positionChild$2(D._ScaffoldSlot_0, new B.Offset(0, contentTop));
      }
      if (_this._idToChild.$index(0, D._ScaffoldSlot_2) != null) {
        _this.layoutChild$2(D._ScaffoldSlot_2, new B.BoxConstraints(0, fullWidthConstraints.maxWidth, 0, contentBottom));
        _this.positionChild$2(D._ScaffoldSlot_2, C.Offset_0_0);
      }
      t3 = _this._idToChild.$index(0, D._ScaffoldSlot_4) != null && !_this.isSnackBarFloating ? _this.layoutChild$2(D._ScaffoldSlot_4, fullWidthConstraints) : C.Size_0_0;
      if (_this._idToChild.$index(0, D._ScaffoldSlot_3) != null) {
        bottomSheetSize = _this.layoutChild$2(D._ScaffoldSlot_3, new B.BoxConstraints(0, fullWidthConstraints.maxWidth, 0, Math.max(0, contentBottom - contentTop)));
        _this.positionChild$2(D._ScaffoldSlot_3, new B.Offset((t1 - bottomSheetSize._dx) / 2, contentBottom - bottomSheetSize._dy));
      } else
        bottomSheetSize = C.Size_0_0;
      floatingActionButtonRect = B._Cell$named("floatingActionButtonRect");
      if (_this._idToChild.$index(0, D._ScaffoldSlot_8) != null) {
        fabSize = _this.layoutChild$2(D._ScaffoldSlot_8, looseConstraints);
        currentGeometry = new A.ScaffoldPrelayoutGeometry(fabSize, bottomSheetSize, contentBottom, t2, _this.minViewPadding, size, t3, _this.textDirection);
        currentFabOffset = _this.currentFloatingActionButtonLocation.getOffset$1(currentGeometry);
        fabOffset = _this.floatingActionButtonMotionAnimator.getOffset$3$begin$end$progress(_this.previousFloatingActionButtonLocation.getOffset$1(currentGeometry), currentFabOffset, _this.floatingActionButtonMoveAnimationProgress);
        _this.positionChild$2(D._ScaffoldSlot_8, fabOffset);
        t4 = fabOffset._dx;
        t5 = fabOffset._dy;
        floatingActionButtonRect.__late_helper$_value = new B.Rect(t4, t5, t4 + fabSize._dx, t5 + fabSize._dy);
      }
      if (_this._idToChild.$index(0, D._ScaffoldSlot_4) != null) {
        t4 = _this.snackBarWidth;
        hasCustomWidth = t4 != null && t4 < t1;
        if (t3.$eq(0, C.Size_0_0)) {
          snackBarSize = _this.layoutChild$2(D._ScaffoldSlot_4, hasCustomWidth ? looseConstraints : fullWidthConstraints);
          t3 = snackBarSize;
        }
        t5 = floatingActionButtonRect._readLocal$0();
        if (!new B.Size(t5.right - t5.left, t5.bottom - t5.top).$eq(0, C.Size_0_0) && _this.isSnackBarFloating) {
          snackBarYOffsetBase = floatingActionButtonRect._readLocal$0().top;
          t5 = snackBarYOffsetBase;
        } else {
          snackBarYOffsetBase = _this.isSnackBarFloating ? Math.min(contentBottom, bottom - _this.minViewPadding.bottom) : contentBottom;
          t5 = snackBarYOffsetBase;
        }
        if (hasCustomWidth) {
          t4.toString;
          xOffset = (t1 - t4) / 2;
        } else
          xOffset = 0;
        _this.positionChild$2(D._ScaffoldSlot_4, new B.Offset(xOffset, t5 - t3._dy));
      }
      if (_this._idToChild.$index(0, D._ScaffoldSlot_11) != null) {
        _this.layoutChild$2(D._ScaffoldSlot_11, fullWidthConstraints.tighten$1$height(t2.top));
        _this.positionChild$2(D._ScaffoldSlot_11, C.Offset_0_0);
      }
      if (_this._idToChild.$index(0, D._ScaffoldSlot_9) != null) {
        _this.layoutChild$2(D._ScaffoldSlot_9, B.BoxConstraints$tight(size));
        _this.positionChild$2(D._ScaffoldSlot_9, C.Offset_0_0);
      }
      if (_this._idToChild.$index(0, D._ScaffoldSlot_10) != null) {
        _this.layoutChild$2(D._ScaffoldSlot_10, B.BoxConstraints$tight(size));
        _this.positionChild$2(D._ScaffoldSlot_10, C.Offset_0_0);
      }
      _this.geometryNotifier._updateWith$2$bottomNavigationBarTop$floatingActionButtonArea(bottomNavigationBarTop, floatingActionButtonRect._readLocal$0());
    },
    shouldRelayout$1(oldDelegate) {
      var _this = this;
      type$._ScaffoldLayout._as(oldDelegate);
      return !oldDelegate.minInsets.$eq(0, _this.minInsets) || !oldDelegate.minViewPadding.$eq(0, _this.minViewPadding) || oldDelegate.textDirection !== _this.textDirection || oldDelegate.floatingActionButtonMoveAnimationProgress !== _this.floatingActionButtonMoveAnimationProgress || oldDelegate.previousFloatingActionButtonLocation !== _this.previousFloatingActionButtonLocation || oldDelegate.currentFloatingActionButtonLocation !== _this.currentFloatingActionButtonLocation || oldDelegate.extendBody !== _this.extendBody || false;
    }
  };
  A._FloatingActionButtonTransition.prototype = {
    createState$0() {
      return new A._FloatingActionButtonTransitionState(null, null, C._StateLifecycle_0);
    }
  };
  A._FloatingActionButtonTransitionState.prototype = {
    initState$0() {
      var t1, t2, t3, _this = this;
      _this.super$State$initState();
      t1 = B.AnimationController$(null, C.Duration_200000, null, null, _this);
      t2 = type$.void_Function_AnimationStatus._as(_this.get$_handlePreviousAnimationStatusChanged());
      t1.didRegisterListener$0();
      t3 = t1.AnimationLocalStatusListenersMixin__statusListeners;
      t3.$ti._precomputed1._as(t2);
      t3._isDirty = true;
      C.JSArray_methods.add$1(t3._list, t2);
      _this.___FloatingActionButtonTransitionState__previousController_A = t1;
      _this._scaffold$_updateAnimations$0();
      t1 = _this._widget;
      if (t1.child != null)
        t1.currentController.set$value(0, 1);
      else
        t1.geometryNotifier._updateWith$1$floatingActionButtonScale(0);
    },
    dispose$0() {
      var t1 = this.___FloatingActionButtonTransitionState__previousController_A;
      t1 === $ && B.throwLateFieldNI("_previousController");
      t1.dispose$0();
      this.super$__FloatingActionButtonTransitionState_State_TickerProviderStateMixin$dispose();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, oldChildIsNull, t2, newChildIsNull, t3, t4, t5, _this = this;
      type$._FloatingActionButtonTransition._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = _this._widget;
      if (oldWidget.fabMotionAnimator !== t1.fabMotionAnimator || oldWidget.fabMoveAnimation !== t1.fabMoveAnimation)
        _this._scaffold$_updateAnimations$0();
      t1 = oldWidget.child;
      oldChildIsNull = t1 == null;
      t2 = _this._widget.child;
      newChildIsNull = t2 == null;
      if (oldChildIsNull === newChildIsNull) {
        t3 = oldChildIsNull ? null : t1.key;
        t2 = J.$eq$(t3, newChildIsNull ? null : t2.key);
      } else
        t2 = false;
      if (t2)
        return;
      t2 = _this.___FloatingActionButtonTransitionState__previousController_A;
      t2 === $ && B.throwLateFieldNI("_previousController");
      t3 = t2.__AnimationController__status_A;
      t3 === $ && B.throwLateFieldNI("_status");
      if (t3 === C.AnimationStatus_0) {
        t3 = _this._widget;
        t4 = t3.currentController;
        t5 = t4.__AnimationController__value_A;
        t5 === $ && B.throwLateFieldNI("_value");
        if (t5 === 0 || oldChildIsNull) {
          _this._previousChild = null;
          if (t3.child != null)
            t4.forward$0(0);
        } else {
          _this._previousChild = t1;
          t2.set$value(0, t5);
          t2.reverse$0(0);
          _this._widget.currentController.set$value(0, 0);
        }
      }
    },
    _scaffold$_updateAnimations$0() {
      var previousExitScaleAnimation, t2, t3, currentEntranceScaleAnimation, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, moveScaleAnimation, moveRotationAnimation, _this = this, _null = null,
        t1 = _this.___FloatingActionButtonTransitionState__previousController_A;
      t1 === $ && B.throwLateFieldNI("_previousController");
      previousExitScaleAnimation = B.CurvedAnimation$(C.Cubic_JUR, t1, _null);
      t1 = type$.Tween_double;
      t2 = type$.Animation_double;
      t3 = t2._as(B.CurvedAnimation$(C.Cubic_JUR, _this.___FloatingActionButtonTransitionState__previousController_A, _null));
      currentEntranceScaleAnimation = B.CurvedAnimation$(C.Cubic_JUR, _this._widget.currentController, _null);
      t4 = _this._widget;
      t5 = t4.currentController;
      t6 = type$.Animatable_double;
      t7 = t6._as($.$get$_FloatingActionButtonTransitionState__entranceTurnTween());
      t5 = t2._as(t2._as(t5));
      t4 = t2._as(t4.fabMoveAnimation);
      t8 = t6._as(new B.CurveTween(new B.FlippedCurve(D.Interval_E4y)));
      t2._as(t4);
      t9 = type$.JSArray_of_void_Function_AnimationStatus;
      t10 = B._setArrayType([], t9);
      t11 = type$.ObserverList_of_void_Function_AnimationStatus;
      t12 = t6._as(new B.CurveTween(D.Interval_E4y));
      t13 = type$.double;
      moveScaleAnimation = A._AnimationSwap$(new B.ReverseAnimation(new B._AnimatedEvaluation(t4, t8, B._instanceType(t8)._eval$1("_AnimatedEvaluation<Animatable.T>")), new B.ObserverList(t10, t11), 0), new B._AnimatedEvaluation(t4, t12, B._instanceType(t12)._eval$1("_AnimatedEvaluation<Animatable.T>")), t4, 0.5, t13);
      t4 = t2._as(_this._widget.fabMoveAnimation);
      t12 = t6._as($.$get$_ScalingFabMotionAnimator__rotationTween());
      t2._as(t4);
      t10 = t6._as($.$get$_ScalingFabMotionAnimator__thresholdCenterTween());
      moveRotationAnimation = A._AnimationSwap$(new B._AnimatedEvaluation(t4, t12, t12.$ti._eval$1("_AnimatedEvaluation<Animatable.T>")), new B.ReverseAnimation(new B._AnimatedEvaluation(t4, t10, B._instanceType(t10)._eval$1("_AnimatedEvaluation<Animatable.T>")), new B.ObserverList(B._setArrayType([], t9), t11), 0), t4, 0.5, t13);
      _this.set$___FloatingActionButtonTransitionState__previousScaleAnimation_A(t2._as(A.AnimationMin$(moveScaleAnimation, previousExitScaleAnimation, t13)));
      _this.set$___FloatingActionButtonTransitionState__currentScaleAnimation_A(t2._as(A.AnimationMin$(moveScaleAnimation, currentEntranceScaleAnimation, t13)));
      t13 = _this.___FloatingActionButtonTransitionState__currentScaleAnimation_A;
      t13 === $ && B.throwLateFieldNI("_currentScaleAnimation");
      t6 = t6._as(new B.CurveTween(D.Interval_75R0));
      _this.set$___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_A(t2._as(new B._AnimatedEvaluation(t2._as(t2._as(t13)), t6, B._instanceType(t6)._eval$1("_AnimatedEvaluation<Animatable.T>"))));
      _this.set$___FloatingActionButtonTransitionState__previousRotationAnimation_A(t2._as(B.TrainHoppingAnimation$(new B._AnimatedEvaluation(t3, new B.Tween(1, 1, t1), t1._eval$1("_AnimatedEvaluation<Animatable.T>")), moveRotationAnimation, _null)));
      _this.set$___FloatingActionButtonTransitionState__currentRotationAnimation_A(t2._as(B.TrainHoppingAnimation$(new B._AnimatedEvaluation(t5, t7, t7.$ti._eval$1("_AnimatedEvaluation<Animatable.T>")), moveRotationAnimation, _null)));
      t7 = _this.___FloatingActionButtonTransitionState__currentScaleAnimation_A;
      t5 = type$.void_Function._as(_this.get$_onProgressChanged());
      t7.didRegisterListener$0();
      t7 = t7.AnimationLocalListenersMixin__listeners;
      t7.$ti._precomputed1._as(t5);
      t7._isDirty = true;
      C.JSArray_methods.add$1(t7._list, t5);
      t7 = _this.___FloatingActionButtonTransitionState__previousScaleAnimation_A;
      t7 === $ && B.throwLateFieldNI("_previousScaleAnimation");
      t7.didRegisterListener$0();
      t7 = t7.AnimationLocalListenersMixin__listeners;
      t7.$ti._precomputed1._as(t5);
      t7._isDirty = true;
      C.JSArray_methods.add$1(t7._list, t5);
    },
    _handlePreviousAnimationStatusChanged$1($status) {
      this.setState$1(new A._FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure(this, type$.AnimationStatus._as($status)));
    },
    build$1(context) {
      var t3, t4, _this = this,
        t1 = B._setArrayType([], type$.JSArray_Widget),
        t2 = _this.___FloatingActionButtonTransitionState__previousController_A;
      t2 === $ && B.throwLateFieldNI("_previousController");
      t2 = t2.__AnimationController__status_A;
      t2 === $ && B.throwLateFieldNI("_status");
      if (t2 !== C.AnimationStatus_0) {
        t2 = _this.___FloatingActionButtonTransitionState__previousScaleAnimation_A;
        t2 === $ && B.throwLateFieldNI("_previousScaleAnimation");
        t3 = _this.___FloatingActionButtonTransitionState__previousRotationAnimation_A;
        t3 === $ && B.throwLateFieldNI("_previousRotationAnimation");
        t1.push(B.ScaleTransition$(C.Alignment_0_0, A.RotationTransition$(C.Alignment_0_0, _this._previousChild, t3), t2));
      }
      t2 = _this._widget;
      t2.toString;
      t3 = _this.___FloatingActionButtonTransitionState__currentScaleAnimation_A;
      t3 === $ && B.throwLateFieldNI("_currentScaleAnimation");
      t4 = _this.___FloatingActionButtonTransitionState__currentRotationAnimation_A;
      t4 === $ && B.throwLateFieldNI("_currentRotationAnimation");
      t1.push(B.ScaleTransition$(C.Alignment_0_0, A.RotationTransition$(C.Alignment_0_0, t2.child, t4), t3));
      return new B.Stack(C.Alignment_1_0, null, C.StackFit_0, C.Clip_1, t1, null);
    },
    _onProgressChanged$0() {
      var t2, t3,
        t1 = this.___FloatingActionButtonTransitionState__previousScaleAnimation_A;
      t1 === $ && B.throwLateFieldNI("_previousScaleAnimation");
      t2 = t1.first;
      t2 = t2.get$value(t2);
      t1 = t1.next;
      t1 = t1.get$value(t1);
      t1 = Math.min(B.checkNum(t2), B.checkNum(t1));
      t2 = this.___FloatingActionButtonTransitionState__currentScaleAnimation_A;
      t2 === $ && B.throwLateFieldNI("_currentScaleAnimation");
      t3 = t2.first;
      t3 = t3.get$value(t3);
      t2 = t2.next;
      t2 = t2.get$value(t2);
      t2 = Math.max(t1, Math.min(B.checkNum(t3), B.checkNum(t2)));
      this._widget.geometryNotifier._updateWith$1$floatingActionButtonScale(t2);
    },
    set$___FloatingActionButtonTransitionState__previousScaleAnimation_A(___FloatingActionButtonTransitionState__previousScaleAnimation_A) {
      this.___FloatingActionButtonTransitionState__previousScaleAnimation_A = type$.Animation_double._as(___FloatingActionButtonTransitionState__previousScaleAnimation_A);
    },
    set$___FloatingActionButtonTransitionState__previousRotationAnimation_A(___FloatingActionButtonTransitionState__previousRotationAnimation_A) {
      this.___FloatingActionButtonTransitionState__previousRotationAnimation_A = type$.Animation_double._as(___FloatingActionButtonTransitionState__previousRotationAnimation_A);
    },
    set$___FloatingActionButtonTransitionState__currentScaleAnimation_A(___FloatingActionButtonTransitionState__currentScaleAnimation_A) {
      this.___FloatingActionButtonTransitionState__currentScaleAnimation_A = type$.Animation_double._as(___FloatingActionButtonTransitionState__currentScaleAnimation_A);
    },
    set$___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_A(___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_A) {
      this.___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_A = type$.Animation_double._as(___FloatingActionButtonTransitionState__extendedCurrentScaleAnimation_A);
    },
    set$___FloatingActionButtonTransitionState__currentRotationAnimation_A(___FloatingActionButtonTransitionState__currentRotationAnimation_A) {
      this.___FloatingActionButtonTransitionState__currentRotationAnimation_A = type$.Animation_double._as(___FloatingActionButtonTransitionState__currentRotationAnimation_A);
    },
    $isTickerProvider: 1
  };
  A.Scaffold.prototype = {
    createState$0() {
      var _null = null,
        t1 = type$.LabeledGlobalKey_DrawerControllerState,
        t2 = type$.LabeledGlobalKey_State_StatefulWidget,
        t3 = $.$get$ChangeNotifier__emptyListeners();
      return new A.ScaffoldState(new B.LabeledGlobalKey(_null, t1), new B.LabeledGlobalKey(_null, t1), new B.LabeledGlobalKey(_null, t2), new A.RestorableBool(false, t3), new A.RestorableBool(false, t3), B._setArrayType([], type$.JSArray__StandardBottomSheet), new B.LabeledGlobalKey(_null, t2), C.Color_4278190080, _null, B.LinkedHashMap_LinkedHashMap$_empty(type$.RestorableProperty_nullable_Object, type$.void_Function), _null, true, _null, _null, _null, C._StateLifecycle_0);
    }
  };
  A.ScaffoldState.prototype = {
    get$restorationId() {
      this._widget.toString;
      return null;
    },
    restoreState$2(oldBucket, initialRestore) {
      var _this = this;
      _this.registerForRestoration$2(_this._drawerOpened, "drawer_open");
      _this.registerForRestoration$2(_this._endDrawerOpened, "end_drawer_open");
    },
    _updateSnackBar$0() {
      var messengerSnackBar, _this = this,
        t1 = _this._scaffoldMessenger._snackBars;
      if (!t1.get$isEmpty(t1)) {
        t1 = _this._scaffoldMessenger._snackBars;
        messengerSnackBar = t1.get$first(t1);
      } else
        messengerSnackBar = null;
      if (_this._messengerSnackBar != messengerSnackBar)
        _this.setState$1(new A.ScaffoldState__updateSnackBar_closure(_this, messengerSnackBar));
    },
    _updateMaterialBanner$0() {
      var messengerMaterialBanner, _this = this,
        t1 = _this._scaffoldMessenger._materialBanners;
      if (!t1.get$isEmpty(t1)) {
        t1 = _this._scaffoldMessenger._materialBanners;
        messengerMaterialBanner = t1.get$first(t1);
      } else
        messengerMaterialBanner = null;
      if (_this._messengerMaterialBanner != messengerMaterialBanner)
        _this.setState$1(new A.ScaffoldState__updateMaterialBanner_closure(_this, messengerMaterialBanner));
    },
    _maybeBuildPersistentBottomSheet$0() {
      this._widget.toString;
    },
    _handleStatusBarTap$0() {
      var primaryScrollController,
        t1 = this._framework$_element;
      t1.toString;
      primaryScrollController = B.PrimaryScrollController_maybeOf(t1);
      if (primaryScrollController != null && primaryScrollController._positions.length !== 0)
        primaryScrollController.animateTo$3$curve$duration(0, D.Cubic_YAz, C.Duration_1000000);
    },
    get$_resizeToAvoidBottomInset() {
      this._widget.toString;
      return true;
    },
    initState$0() {
      var t1, _this = this, _null = null;
      _this.super$State$initState();
      t1 = _this._framework$_element;
      t1.toString;
      _this.__ScaffoldState__geometryNotifier_A = new A._ScaffoldGeometryNotifier(t1, D.ScaffoldGeometry_null_null, $.$get$ChangeNotifier__emptyListeners());
      _this._widget.toString;
      _this._floatingActionButtonLocation = D.C__EndFloatFabLocation;
      _this.__ScaffoldState__floatingActionButtonAnimator_A = D.C__ScalingFabMotionAnimator;
      _this._previousFloatingActionButtonLocation = D.C__EndFloatFabLocation;
      _this.__ScaffoldState__floatingActionButtonMoveController_A = B.AnimationController$(_null, new B.Duration(400000), _null, 1, _this);
      _this.__ScaffoldState__floatingActionButtonVisibilityController_A = B.AnimationController$(_null, C.Duration_200000, _null, _null, _this);
    },
    didUpdateWidget$1(oldWidget) {
      this.super$_ScaffoldState_State_TickerProviderStateMixin_RestorationMixin$didUpdateWidget(type$.Scaffold._as(oldWidget));
      this._widget.toString;
    },
    didChangeDependencies$0() {
      var t3, _this = this,
        scope = _this._framework$_element.dependOnInheritedWidgetOfExactType$1$0(type$._ScaffoldMessengerScope),
        currentScaffoldMessenger = scope == null ? null : scope._scaffoldMessengerState,
        t1 = _this._scaffoldMessenger,
        t2 = t1 == null;
      if (!t2)
        t3 = currentScaffoldMessenger == null || t1 !== currentScaffoldMessenger;
      else
        t3 = false;
      if (t3)
        if (!t2)
          t1._scaffolds.remove$1(0, _this);
      _this._scaffoldMessenger = currentScaffoldMessenger;
      if (currentScaffoldMessenger != null) {
        currentScaffoldMessenger._scaffolds.add$1(0, _this);
        if (currentScaffoldMessenger._isRoot$1(_this)) {
          t1 = currentScaffoldMessenger._snackBars;
          if (!t1.get$isEmpty(t1))
            _this._updateSnackBar$0();
          t1 = currentScaffoldMessenger._materialBanners;
          if (!t1.get$isEmpty(t1))
            _this._updateMaterialBanner$0();
        }
      }
      _this._maybeBuildPersistentBottomSheet$0();
      _this.super$_ScaffoldState_State_TickerProviderStateMixin_RestorationMixin$didChangeDependencies();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.__ScaffoldState__geometryNotifier_A;
      t1 === $ && B.throwLateFieldNI("_geometryNotifier");
      t1.dispose$0();
      t1 = _this.__ScaffoldState__floatingActionButtonMoveController_A;
      t1 === $ && B.throwLateFieldNI("_floatingActionButtonMoveController");
      t1.dispose$0();
      t1 = _this.__ScaffoldState__floatingActionButtonVisibilityController_A;
      t1 === $ && B.throwLateFieldNI(string$._float);
      t1.dispose$0();
      t1 = _this._scaffoldMessenger;
      if (t1 != null)
        t1._scaffolds.remove$1(0, _this);
      _this._drawerOpened.dispose$0();
      _this._endDrawerOpened.dispose$0();
      _this.super$_ScaffoldState_State_TickerProviderStateMixin_RestorationMixin$dispose();
    },
    _addIfNonNull$9$maintainBottomViewPadding$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, maintainBottomViewPadding, removeBottomInset, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding) {
      var data;
      type$.List_LayoutId._as(children);
      data = this._framework$_element.dependOnInheritedWidgetOfExactType$1$0(type$.MediaQuery).data.removePadding$4$removeBottom$removeLeft$removeRight$removeTop(removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding);
      if (removeBottomInset)
        data = data.removeViewInsets$1$removeBottom(true);
      if (maintainBottomViewPadding && data.viewInsets.bottom !== 0)
        data = data.copyWith$1$padding(data.padding.copyWith$1$bottom(data.viewPadding.bottom));
      if (child != null)
        C.JSArray_methods.add$1(children, A.LayoutId$(new B.MediaQuery(data, child, null), childId));
    },
    _addIfNonNull$8$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, removeBottomInset, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding) {
      return this._addIfNonNull$9$maintainBottomViewPadding$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, false, removeBottomInset, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding);
    },
    _addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding) {
      return this._addIfNonNull$9$maintainBottomViewPadding$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, false, false, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding);
    },
    _addIfNonNull$8$maintainBottomViewPadding$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, maintainBottomViewPadding, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding) {
      return this._addIfNonNull$9$maintainBottomViewPadding$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, child, childId, maintainBottomViewPadding, false, removeBottomPadding, removeLeftPadding, removeRightPadding, removeTopPadding);
    },
    _buildEndDrawer$2(children, textDirection) {
      type$.List_LayoutId._as(children);
      this._widget.toString;
    },
    _buildDrawer$2(children, textDirection) {
      type$.List_LayoutId._as(children);
      this._widget.toString;
    },
    build$1(context) {
      var textDirection, children, t2, t3, elevation, t4, minInsets, minViewPadding, _this = this, _null = null, _box_0 = {},
        mediaQuery = context.dependOnInheritedWidgetOfExactType$1$0(type$.MediaQuery).data,
        themeData = B.Theme_of(context),
        t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      textDirection = t1.textDirection;
      children = B._setArrayType([], type$.JSArray_LayoutId);
      t1 = _this._widget;
      t2 = t1.body;
      t3 = t1.appBar;
      t1 = t1.bottomNavigationBar != null || false;
      _this.get$_resizeToAvoidBottomInset();
      _this._addIfNonNull$8$removeBottomInset$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, new A._BodyBuilder(new B.KeyedSubtree(t2, _this._bodyKey), false, false, _null), D._ScaffoldSlot_0, true, t1, false, false, t3 != null);
      if (_this._showBodyScrim)
        _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, new B.ModalBarrier(_this._bodyScrimColor, false, _null, true, _null, _null), D._ScaffoldSlot_2, true, true, true, true);
      t1 = _this._widget.appBar;
      if (t1 != null) {
        t1 = _this._appBarMaxHeight = A.AppBar_preferredHeightFor(context, t1.preferredSize) + mediaQuery.padding.top;
        t2 = _this._widget.appBar;
        t2.toString;
        _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, new B.ConstrainedBox(new B.BoxConstraints(0, 1 / 0, 0, t1), new A.FlexibleSpaceBarSettings(1, t1, t1, t1, _null, t2, _null), _null), D._ScaffoldSlot_1, true, false, false, false);
      }
      _box_0.isSnackBarFloating = false;
      _box_0.snackBarWidth = null;
      if (_this._currentBottomSheet != null || _this._dismissedBottomSheets.length !== 0) {
        t1 = B.List_List$of(_this._dismissedBottomSheets, true, type$.Widget);
        t2 = _this._currentBottomSheet;
        if (t2 != null)
          t1.push(t2._scaffold$_widget);
        _this.get$_resizeToAvoidBottomInset();
        _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, new B.Stack(C.Alignment_0_1, _null, C.StackFit_0, C.Clip_1, t1, _null), D._ScaffoldSlot_3, true, false, false, true);
      }
      t1 = _this._messengerSnackBar;
      if (t1 != null) {
        _box_0.isSnackBarFloating = false;
        _box_0.snackBarWidth = themeData.snackBarTheme.width;
        t1 = t1._scaffold$_widget;
        t2 = _this._widget.bottomNavigationBar != null || false;
        _this.get$_resizeToAvoidBottomInset();
        _this._addIfNonNull$8$maintainBottomViewPadding$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, t1, D._ScaffoldSlot_4, false, t2, false, false, true);
      }
      _box_0.extendBodyBehindMaterialBanner = false;
      if (_this._messengerMaterialBanner != null) {
        context.dependOnInheritedWidgetOfExactType$1$0(type$.MaterialBannerTheme);
        t1 = B.Theme_of(context);
        t2 = _this._messengerMaterialBanner;
        if (t2 != null) {
          t2 = t2._scaffold$_widget;
          t2.get$elevation(t2);
        }
        elevation = t1.bannerTheme.elevation;
        _box_0.extendBodyBehindMaterialBanner = (elevation == null ? 0 : elevation) !== 0;
        t1 = _this._messengerMaterialBanner;
        t1 = t1 == null ? _null : t1._scaffold$_widget;
        t2 = _this._widget.appBar;
        _this.get$_resizeToAvoidBottomInset();
        _this._addIfNonNull$8$maintainBottomViewPadding$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, t1, D._ScaffoldSlot_5, false, true, false, false, t2 != null);
      }
      t1 = _this._widget;
      t1 = t1.bottomNavigationBar;
      if (t1 != null) {
        _this.get$_resizeToAvoidBottomInset();
        _this._addIfNonNull$8$maintainBottomViewPadding$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, t1, D._ScaffoldSlot_7, false, false, false, false, true);
      }
      t1 = _this.__ScaffoldState__floatingActionButtonMoveController_A;
      t1 === $ && B.throwLateFieldNI("_floatingActionButtonMoveController");
      t2 = _this.__ScaffoldState__floatingActionButtonAnimator_A;
      t2 === $ && B.throwLateFieldNI("_floatingActionButtonAnimator");
      t3 = _this.__ScaffoldState__geometryNotifier_A;
      t3 === $ && B.throwLateFieldNI("_geometryNotifier");
      t4 = _this.__ScaffoldState__floatingActionButtonVisibilityController_A;
      t4 === $ && B.throwLateFieldNI(string$._float);
      _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, new A._FloatingActionButtonTransition(_this._widget.floatingActionButton, t1, t2, t3, t4, _null), D._ScaffoldSlot_8, true, true, true, true);
      switch (themeData.platform.index) {
        case 2:
        case 4:
          _this._addIfNonNull$7$removeBottomPadding$removeLeftPadding$removeRightPadding$removeTopPadding(children, B.GestureDetector$(C.HitTestBehavior_1, _null, C.DragStartBehavior_1, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _this.get$_handleStatusBarTap(), _null, _null, _null, _null, _null, _null), D._ScaffoldSlot_11, true, false, false, true);
          break;
        case 0:
        case 1:
        case 3:
        case 5:
          break;
      }
      t1 = _this._endDrawerOpened;
      t2 = t1._restoration_properties$_value;
      if (B.boolConversionCheck(t2 == null ? B._instanceType(t1)._eval$1("RestorableValue.T")._as(t2) : t2)) {
        _this._buildDrawer$2(children, textDirection);
        _this._buildEndDrawer$2(children, textDirection);
      } else {
        _this._buildEndDrawer$2(children, textDirection);
        _this._buildDrawer$2(children, textDirection);
      }
      _this.get$_resizeToAvoidBottomInset();
      t1 = mediaQuery.viewInsets.bottom;
      minInsets = mediaQuery.padding.copyWith$1$bottom(t1);
      _this.get$_resizeToAvoidBottomInset();
      t1 = t1 !== 0 ? 0 : _null;
      minViewPadding = mediaQuery.viewPadding.copyWith$1$bottom(t1);
      if (minInsets.bottom <= 0)
        _this._widget.toString;
      t1 = _this._widget.backgroundColor;
      if (t1 == null)
        t1 = themeData.scaffoldBackgroundColor;
      return new A._ScaffoldScope(false, new A.ScrollNotificationObserver(B.Material$(C.Duration_200000, _null, B.AnimatedBuilder$(_this.__ScaffoldState__floatingActionButtonMoveController_A, new A.ScaffoldState_build_closure(_box_0, _this, false, minInsets, minViewPadding, textDirection, children), _null), C.Clip_0, t1, 0, _null, _null, _null, _null, _null, C.MaterialType_0), _null), _null);
    },
    set$_messengerSnackBar(_messengerSnackBar) {
      this._messengerSnackBar = type$.nullable_ScaffoldFeatureController_SnackBar_SnackBarClosedReason._as(_messengerSnackBar);
    },
    set$_messengerMaterialBanner(_messengerMaterialBanner) {
      this._messengerMaterialBanner = type$.nullable_ScaffoldFeatureController_MaterialBanner_MaterialBannerClosedReason._as(_messengerMaterialBanner);
    },
    $isTickerProvider: 1
  };
  A._DismissDrawerAction.prototype = {
    isEnabled$1(_, intent) {
      var t1, t2, t3;
      type$.DismissIntent._as(intent);
      t1 = this.context;
      t2 = A.Scaffold_of(t1)._drawerOpened;
      t3 = t2._restoration_properties$_value;
      if (!(t3 == null ? B._instanceType(t2)._eval$1("RestorableValue.T")._as(t3) : t3)) {
        t1 = A.Scaffold_of(t1)._endDrawerOpened;
        t2 = t1._restoration_properties$_value;
        t1 = t2 == null ? B._instanceType(t1)._eval$1("RestorableValue.T")._as(t2) : t2;
      } else
        t1 = true;
      return t1;
    },
    invoke$1(intent) {
      var t1;
      type$.DismissIntent._as(intent);
      t1 = this.context;
      A.Scaffold_of(t1)._widget.toString;
      A.Scaffold_of(t1)._widget.toString;
    }
  };
  A._ScaffoldScope.prototype = {
    updateShouldNotify$1(oldWidget) {
      return this.hasDrawer !== type$._ScaffoldScope._as(oldWidget).hasDrawer;
    }
  };
  A._ScaffoldState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    }
  };
  A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin.prototype = {
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(type$.Scaffold._as(oldWidget));
      this.didUpdateRestorationId$0();
    },
    didChangeDependencies$0() {
      var oldBucket, needsRestore, t1, didReplaceBucket, _this = this;
      _this.super$State$didChangeDependencies();
      oldBucket = _this.RestorationMixin__bucket;
      needsRestore = _this.get$restorePending();
      t1 = _this._framework$_element;
      t1.toString;
      t1 = B.RestorationScope_maybeOf(t1);
      _this.RestorationMixin__currentParent = t1;
      didReplaceBucket = _this._updateBucketIfNecessary$2$parent$restorePending(t1, needsRestore);
      if (needsRestore) {
        _this.restoreState$2(oldBucket, _this.RestorationMixin__firstRestorePending);
        _this.RestorationMixin__firstRestorePending = false;
      }
      if (didReplaceBucket)
        if (oldBucket != null)
          oldBucket.dispose$0();
    },
    dispose$0() {
      var t1, _this = this;
      _this.RestorationMixin__properties.forEach$1(0, new A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure());
      t1 = _this.RestorationMixin__bucket;
      if (t1 != null)
        t1.dispose$0();
      _this.RestorationMixin__bucket = null;
      _this.super$_ScaffoldState_State_TickerProviderStateMixin$dispose();
    }
  };
  A.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    }
  };
  A.MultiChildLayoutParentData.prototype = {
    toString$0(_) {
      return this.super$BoxParentData$toString(0) + "; id=" + B.S(this.id);
    }
  };
  A.MultiChildLayoutDelegate.prototype = {
    layoutChild$2(childId, constraints) {
      var t1,
        child = this._idToChild.$index(0, childId);
      child.layout$2$parentUsesSize(constraints, true);
      t1 = child._size;
      t1.toString;
      return t1;
    },
    positionChild$2(childId, offset) {
      var t1 = this._idToChild.$index(0, childId).parentData;
      t1.toString;
      type$.MultiChildLayoutParentData._as(t1).offset = offset;
    },
    _callPerformLayout$2(size, firstChild) {
      var previousIdToChild, childParentData, t1, t2, t3, t4, child, _this = this;
      type$.nullable_RenderBox._as(firstChild);
      previousIdToChild = _this._idToChild;
      try {
        _this.set$_idToChild(B.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$.RenderBox));
        for (t1 = type$.MultiChildLayoutParentData, t2 = firstChild; t2 != null; t2 = child) {
          t3 = t2.parentData;
          t3.toString;
          childParentData = t1._as(t3);
          t3 = _this._idToChild;
          t3.toString;
          t4 = childParentData.id;
          t4.toString;
          t3.$indexSet(0, t4, t2);
          child = childParentData.ContainerParentDataMixin_nextSibling;
        }
        _this.performLayout$1(size);
      } finally {
        _this.set$_idToChild(previousIdToChild);
      }
    },
    toString$0(_) {
      return "MultiChildLayoutDelegate";
    },
    set$_idToChild(_idToChild) {
      this._idToChild = type$.nullable_Map_Object_RenderBox._as(_idToChild);
    }
  };
  A.RenderCustomMultiChildLayoutBox.prototype = {
    setupParentData$1(child) {
      type$.RenderBox._as(child);
      if (!(child.parentData instanceof A.MultiChildLayoutParentData))
        child.parentData = new A.MultiChildLayoutParentData(null, null, C.Offset_0_0);
    },
    set$delegate(newDelegate) {
      var _this = this,
        t1 = _this._custom_layout$_delegate;
      if (t1 === newDelegate)
        return;
      if (B.getRuntimeType(newDelegate) !== B.getRuntimeType(t1) || newDelegate.shouldRelayout$1(t1))
        _this.markNeedsLayout$0();
      _this._custom_layout$_delegate = newDelegate;
      _this._node$_owner != null;
    },
    attach$1(owner) {
      this.super$_RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin$attach(type$.PipelineOwner._as(owner));
    },
    detach$0(_) {
      this.super$_RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin$detach(0);
    },
    computeDryLayout$1(constraints) {
      return constraints.constrain$1(new B.Size(B.clampDouble(1 / 0, constraints.minWidth, constraints.maxWidth), B.clampDouble(1 / 0, constraints.minHeight, constraints.maxHeight)));
    },
    performLayout$0() {
      var _this = this,
        t1 = type$.BoxConstraints._as(B.RenderObject.prototype.get$constraints.call(_this));
      t1 = t1.constrain$1(new B.Size(B.clampDouble(1 / 0, t1.minWidth, t1.maxWidth), B.clampDouble(1 / 0, t1.minHeight, t1.maxHeight)));
      _this._size = t1;
      _this._custom_layout$_delegate._callPerformLayout$2(t1, _this.ContainerRenderObjectMixin__firstChild);
    },
    paint$2(context, offset) {
      this.defaultPaint$2(context, offset);
    },
    hitTestChildren$2$position(result, position) {
      return this.defaultHitTestChildren$2$position(result, position);
    }
  };
  A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      type$.PipelineOwner._as(owner);
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.MultiChildLayoutParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0(_) {
      var child, t1, t2;
      this.super$AbstractNode$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.MultiChildLayoutParentData; child != null;) {
        child.detach$0(0);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  A.LayoutId.prototype = {
    applyParentData$1(renderObject) {
      var t2, targetParent,
        t1 = renderObject.parentData;
      t1.toString;
      type$.MultiChildLayoutParentData._as(t1);
      t2 = this.id;
      if (t1.id !== t2) {
        t1.id = t2;
        targetParent = renderObject.get$parent(renderObject);
        if (targetParent instanceof B.RenderObject)
          targetParent.markNeedsLayout$0();
      }
    }
  };
  A.CustomMultiChildLayout.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderCustomMultiChildLayoutBox(this.delegate, 0, null, null, B.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.addAll$1(0, null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$.RenderCustomMultiChildLayoutBox._as(renderObject).set$delegate(this.delegate);
    }
  };
  A.Flexible.prototype = {
    applyParentData$1(renderObject) {
      var t2, needsLayout, targetParent,
        t1 = renderObject.parentData;
      t1.toString;
      type$.FlexParentData._as(t1);
      t2 = this.flex;
      if (t1.flex !== t2) {
        t1.flex = t2;
        needsLayout = true;
      } else
        needsLayout = false;
      t2 = this.fit;
      if (t1.fit !== t2) {
        t1.fit = t2;
        needsLayout = true;
      }
      if (needsLayout) {
        targetParent = renderObject.get$parent(renderObject);
        if (targetParent instanceof B.RenderObject)
          targetParent.markNeedsLayout$0();
      }
    }
  };
  A.StatefulBuilder.prototype = {
    createState$0() {
      return new A._StatefulBuilderState(C._StateLifecycle_0);
    },
    builder$2(arg0, arg1) {
      return this.builder.call$2(arg0, arg1);
    }
  };
  A._StatefulBuilderState.prototype = {
    build$1(context) {
      return this._widget.builder$2(context, this.get$setState());
    }
  };
  A.ConstrainedLayoutBuilder.prototype = {
    createElement$0(_) {
      return new A._LayoutBuilderElement(this, C._ElementLifecycle_0, B._instanceType(this)._eval$1("_LayoutBuilderElement<ConstrainedLayoutBuilder.0>"));
    }
  };
  A._LayoutBuilderElement.prototype = {
    get$renderObject() {
      return this.$ti._eval$1("RenderConstrainedLayoutBuilder<1,RenderObject>")._as(B.RenderObjectElement.prototype.get$renderObject.call(this));
    },
    visitChildren$1(visitor) {
      var t1;
      type$.void_Function_Element._as(visitor);
      t1 = this._layout_builder$_child;
      if (t1 != null)
        visitor.call$1(t1);
    },
    forgetChild$1(child) {
      this._layout_builder$_child = null;
      this.super$Element$forgetChild(child);
    },
    mount$2($parent, newSlot) {
      var _this = this;
      _this.super$RenderObjectElement$mount($parent, newSlot);
      _this.$ti._eval$1("RenderConstrainedLayoutBuilder<1,RenderObject>")._as(B.RenderObjectElement.prototype.get$renderObject.call(_this)).updateCallback$1(_this.get$_layout());
    },
    update$1(_, newWidget) {
      var _this = this,
        t1 = _this.$ti;
      _this.super$RenderObjectElement$update(0, t1._eval$1("ConstrainedLayoutBuilder<1>")._as(newWidget));
      t1 = t1._eval$1("RenderConstrainedLayoutBuilder<1,RenderObject>");
      t1._as(B.RenderObjectElement.prototype.get$renderObject.call(_this)).updateCallback$1(_this.get$_layout());
      t1 = t1._as(B.RenderObjectElement.prototype.get$renderObject.call(_this));
      t1.RenderConstrainedLayoutBuilder__needsBuild = true;
      t1.markNeedsLayout$0();
    },
    performRebuild$0() {
      var t1 = this.$ti._eval$1("RenderConstrainedLayoutBuilder<1,RenderObject>")._as(B.RenderObjectElement.prototype.get$renderObject.call(this));
      t1.RenderConstrainedLayoutBuilder__needsBuild = true;
      t1.markNeedsLayout$0();
      this.super$RenderObjectElement$performRebuild();
    },
    unmount$0() {
      this.$ti._eval$1("RenderConstrainedLayoutBuilder<1,RenderObject>")._as(B.RenderObjectElement.prototype.get$renderObject.call(this)).updateCallback$1(null);
      this.super$RenderObjectElement$unmount();
    },
    _layout$1(constraints) {
      var _this = this;
      _this.$ti._precomputed1._as(constraints);
      _this._owner.buildScope$2(_this, new A._LayoutBuilderElement__layout_layoutCallback(_this, constraints));
    },
    insertRenderObjectChild$2(child, slot) {
      this.$ti._eval$1("RenderConstrainedLayoutBuilder<1,RenderObject>")._as(B.RenderObjectElement.prototype.get$renderObject.call(this)).set$child(child);
    },
    moveRenderObjectChild$3(child, oldSlot, newSlot) {
    },
    removeRenderObjectChild$2(child, slot) {
      this.$ti._eval$1("RenderConstrainedLayoutBuilder<1,RenderObject>")._as(B.RenderObjectElement.prototype.get$renderObject.call(this)).set$child(null);
    }
  };
  A.RenderConstrainedLayoutBuilder.prototype = {
    updateCallback$1(value) {
      var _this = this;
      B._instanceType(_this)._eval$1("~(RenderConstrainedLayoutBuilder.0)?")._as(value);
      if (J.$eq$(value, _this.RenderConstrainedLayoutBuilder__callback))
        return;
      _this.set$_layout_builder$_callback(value);
      _this.markNeedsLayout$0();
    },
    set$_layout_builder$_callback(_callback) {
      this.RenderConstrainedLayoutBuilder__callback = B._instanceType(this)._eval$1("~(RenderConstrainedLayoutBuilder.0)?")._as(_callback);
    }
  };
  A.LayoutBuilder.prototype = {
    createRenderObject$1(context) {
      var t1 = new A._RenderLayoutBuilder(null, true, null, null, B.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      return t1;
    }
  };
  A._RenderLayoutBuilder.prototype = {
    computeDryLayout$1(constraints) {
      return C.Size_0_0;
    },
    performLayout$0() {
      var _this = this,
        t1 = type$.BoxConstraints,
        constraints = t1._as(B.RenderObject.prototype.get$constraints.call(_this));
      if (_this.RenderConstrainedLayoutBuilder__needsBuild || !t1._as(B.RenderObject.prototype.get$constraints.call(_this)).$eq(0, _this.RenderConstrainedLayoutBuilder__previousConstraints)) {
        _this.RenderConstrainedLayoutBuilder__previousConstraints = t1._as(B.RenderObject.prototype.get$constraints.call(_this));
        _this.RenderConstrainedLayoutBuilder__needsBuild = false;
        t1 = _this.RenderConstrainedLayoutBuilder__callback;
        t1.toString;
        _this.invokeLayoutCallback$1$1(t1, B._instanceType(_this)._eval$1("RenderConstrainedLayoutBuilder.0"));
      }
      t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t1.layout$2$parentUsesSize(constraints, true);
        t1 = _this.RenderObjectWithChildMixin__child._size;
        t1.toString;
        _this._size = constraints.constrain$1(t1);
      } else
        _this._size = new B.Size(B.clampDouble(1 / 0, constraints.minWidth, constraints.maxWidth), B.clampDouble(1 / 0, constraints.minHeight, constraints.maxHeight));
    },
    computeDistanceToActualBaseline$1(baseline) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        return t1.getDistanceToActualBaseline$1(baseline);
      return this.super$RenderBox$computeDistanceToActualBaseline(baseline);
    },
    hitTestChildren$2$position(result, position) {
      var t1 = this.RenderObjectWithChildMixin__child;
      t1 = t1 == null ? null : t1.hitTest$2$position(result, position);
      return t1 === true;
    },
    paint$2(context, offset) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        context.paintChild$2(t1, offset);
    }
  };
  A.__RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin.prototype = {
    attach$1(owner) {
      var t1;
      type$.PipelineOwner._as(owner);
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0(_) {
      var t1;
      this.super$AbstractNode$detach(0);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0(0);
    }
  };
  A.__RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder.prototype = {};
  A.RestorableBool.prototype = {};
  A._ScrollNotificationObserverScope.prototype = {
    updateShouldNotify$1(old) {
      return this._scrollNotificationObserverState !== type$._ScrollNotificationObserverScope._as(old)._scrollNotificationObserverState;
    }
  };
  A._ListenerEntry.prototype = {
    listener$1($receiver, arg0) {
      return this.listener.call$1(arg0);
    }
  };
  A.ScrollNotificationObserver.prototype = {
    createState$0() {
      return new A.ScrollNotificationObserverState(new A.LinkedList(type$.LinkedList__ListenerEntry), C._StateLifecycle_0);
    }
  };
  A.ScrollNotificationObserverState.prototype = {
    removeListener$1(_, listener) {
      var t1, t2, entry, next, _null = null;
      type$.void_Function_ScrollNotification._as(listener);
      t1 = this._scroll_notification_observer$_listeners;
      t1.toString;
      t1 = A._LinkedListIterator$(t1, t1.$ti._precomputed1);
      t2 = t1.$ti._precomputed1;
      for (; t1.moveNext$0();) {
        entry = t1._collection$_current;
        if (entry == null)
          entry = t2._as(entry);
        if (J.$eq$(entry.listener, listener)) {
          t1 = entry._collection$_list;
          t1.toString;
          entry = t1.$ti._precomputed1._as(B._instanceType(entry)._eval$1("LinkedListEntry.E")._as(entry));
          ++t1._modificationCount;
          entry._collection$_next.set$_collection$_previous(entry._collection$_previous);
          t2 = entry._collection$_previous;
          next = entry._collection$_next;
          t2.set$_collection$_next(next);
          --t1._collection$_length;
          entry.set$_collection$_previous(_null);
          entry.set$_collection$_next(_null);
          entry.set$_collection$_list(_null);
          if (t1._collection$_length === 0)
            t1.set$_collection$_first(_null);
          else if (entry === t1._collection$_first)
            t1.set$_collection$_first(next);
          return;
        }
      }
    },
    _notifyListeners$1(notification) {
      var entry, exception, stack, localListeners, _i, exception0, rti, t2, t3, _this = this,
        t1 = _this._scroll_notification_observer$_listeners;
      if (t1._collection$_length === 0)
        return;
      localListeners = B.List_List$of(t1, true, type$._ListenerEntry);
      for (t1 = localListeners.length, _i = 0; _i < t1; ++_i) {
        entry = localListeners[_i];
        try {
          if (entry._collection$_list != null)
            J.listener$1$z(entry, notification);
        } catch (exception0) {
          exception = B.unwrapException(exception0);
          stack = B.getTraceFromException(exception0);
          rti = _this instanceof B.Closure ? B.closureFunctionType(_this) : null;
          t2 = B.ErrorDescription$("while dispatching notifications for " + B.createRuntimeType(rti == null ? B.instanceType(_this) : rti).toString$0(0));
          t3 = $.$get$FlutterError_onError();
          if (t3 != null)
            t3.call$1(new B.FlutterErrorDetails(exception, stack, "widget library", t2, new A.ScrollNotificationObserverState__notifyListeners_closure(_this), false));
        }
      }
    },
    build$1(context) {
      var _this = this;
      return new B.NotificationListener(new A.ScrollNotificationObserverState_build_closure(_this), new B.NotificationListener(new A.ScrollNotificationObserverState_build_closure0(_this), new A._ScrollNotificationObserverScope(_this, _this._widget.child, null), null, type$.NotificationListener_ScrollNotification), null, type$.NotificationListener_ScrollMetricsNotification);
    },
    dispose$0() {
      this.set$_scroll_notification_observer$_listeners(null);
      this.super$State$dispose();
    },
    set$_scroll_notification_observer$_listeners(_listeners) {
      this._scroll_notification_observer$_listeners = type$.nullable_LinkedList__ListenerEntry._as(_listeners);
    }
  };
  A._ConvertedScrollMetricsNotification.prototype = {};
  A.RotationTransition.prototype = {
    build$1(context) {
      var useFilterQuality,
        t1 = type$.Animation_double._as(this.listenable);
      switch (t1.get$status(t1)) {
        case C.AnimationStatus_0:
        case C.AnimationStatus_3:
          useFilterQuality = false;
          break;
        case C.AnimationStatus_1:
        case C.AnimationStatus_2:
          useFilterQuality = true;
          break;
        default:
          useFilterQuality = null;
      }
      t1 = t1.get$value(t1);
      if (typeof t1 !== "number")
        return t1.$mul();
      B.boolConversionCheck(useFilterQuality);
      return A.Transform$rotate(this.alignment, t1 * 3.141592653589793 * 2, this.child, null);
    }
  };
  var typesOffset = hunkHelpers.updateTypes(["~()", "~(AnimationStatus)", "ListTileTheme(BuildContext)", "~(Object?)"]);
  A._ButtonStyleState_handleStatesControllerChange_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._ButtonStyleState_build_effectiveValue.prototype = {
    call$1$1(getProperty, $T) {
      var widgetValue, themeValue, defaultValue, t1;
      $T._eval$1("0?(ButtonStyle?)")._as(getProperty);
      widgetValue = getProperty.call$1(this.widgetStyle);
      themeValue = getProperty.call$1(this.themeStyle);
      defaultValue = getProperty.call$1(this.defaultStyle);
      t1 = widgetValue == null ? themeValue : widgetValue;
      return t1 == null ? defaultValue : t1;
    },
    call$1(getProperty) {
      return this.call$1$1(getProperty, type$.dynamic);
    },
    $signature: 433
  };
  A._ButtonStyleState_build_resolve.prototype = {
    call$1$1(getProperty, $T) {
      return this.effectiveValue.call$1$1(new A._ButtonStyleState_build_resolve_closure(this.$this, $T._eval$1("MaterialStateProperty<0>?(ButtonStyle?)")._as(getProperty), $T), $T);
    },
    call$1(getProperty) {
      return this.call$1$1(getProperty, type$.dynamic);
    },
    $signature: 434
  };
  A._ButtonStyleState_build_resolve_closure.prototype = {
    call$1(style) {
      var t1 = this.getProperty.call$1(style);
      return t1 == null ? null : t1.resolve$1(this.$this.get$statesController()._change_notifier$_value);
    },
    $signature() {
      return this.T._eval$1("0?(ButtonStyle?)");
    }
  };
  A._ButtonStyleState_build_closure.prototype = {
    call$1(style) {
      return style == null ? null : style.get$elevation(style);
    },
    $signature: 158
  };
  A._ButtonStyleState_build_closure0.prototype = {
    call$1(style) {
      return style == null ? null : style.get$textStyle();
    },
    $signature: 436
  };
  A._ButtonStyleState_build_closure1.prototype = {
    call$1(style) {
      return style == null ? null : style.get$backgroundColor(style);
    },
    $signature: 51
  };
  A._ButtonStyleState_build_closure2.prototype = {
    call$1(style) {
      return style == null ? null : style.get$foregroundColor();
    },
    $signature: 51
  };
  A._ButtonStyleState_build_closure3.prototype = {
    call$1(style) {
      return style == null ? null : style.get$shadowColor(style);
    },
    $signature: 51
  };
  A._ButtonStyleState_build_closure4.prototype = {
    call$1(style) {
      return style == null ? null : style.get$surfaceTintColor();
    },
    $signature: 51
  };
  A._ButtonStyleState_build_closure5.prototype = {
    call$1(style) {
      return style == null ? null : style.get$padding(style);
    },
    $signature: 438
  };
  A._ButtonStyleState_build_closure6.prototype = {
    call$1(style) {
      return style == null ? null : style.get$minimumSize();
    },
    $signature: 97
  };
  A._ButtonStyleState_build_closure7.prototype = {
    call$1(style) {
      return style == null ? null : style.fixedSize;
    },
    $signature: 97
  };
  A._ButtonStyleState_build_closure8.prototype = {
    call$1(style) {
      return style == null ? null : style.get$maximumSize();
    },
    $signature: 97
  };
  A._ButtonStyleState_build_closure9.prototype = {
    call$1(style) {
      return style == null ? null : style.iconColor;
    },
    $signature: 51
  };
  A._ButtonStyleState_build_closure10.prototype = {
    call$1(style) {
      return style == null ? null : style.get$iconSize();
    },
    $signature: 158
  };
  A._ButtonStyleState_build_closure11.prototype = {
    call$1(style) {
      return style == null ? null : style.side;
    },
    $signature: 440
  };
  A._ButtonStyleState_build_closure12.prototype = {
    call$1(style) {
      return style == null ? null : style.get$shape(style);
    },
    $signature: 441
  };
  A._ButtonStyleState_build_closure20.prototype = {
    call$1(states) {
      return this.effectiveValue.call$1$1(new A._ButtonStyleState_build__closure0(type$.Set_MaterialState._as(states)), type$.MouseCursor);
    },
    $signature: 442
  };
  A._ButtonStyleState_build__closure0.prototype = {
    call$1(style) {
      var t1;
      if (style == null)
        t1 = null;
      else {
        t1 = style.get$mouseCursor();
        t1 = t1 == null ? null : t1.resolve$1(this.states);
      }
      return t1;
    },
    $signature: 443
  };
  A._ButtonStyleState_build_closure21.prototype = {
    call$1(states) {
      return this.effectiveValue.call$1$1(new A._ButtonStyleState_build__closure(type$.Set_MaterialState._as(states)), type$.Color);
    },
    $signature: 160
  };
  A._ButtonStyleState_build__closure.prototype = {
    call$1(style) {
      var t1;
      if (style == null)
        t1 = null;
      else {
        t1 = style.get$overlayColor();
        t1 = t1 == null ? null : t1.resolve$1(this.states);
      }
      return t1;
    },
    $signature: 445
  };
  A._ButtonStyleState_build_closure13.prototype = {
    call$1(style) {
      return style == null ? null : style.get$visualDensity();
    },
    $signature: 446
  };
  A._ButtonStyleState_build_closure14.prototype = {
    call$1(style) {
      return style == null ? null : style.get$tapTargetSize();
    },
    $signature: 447
  };
  A._ButtonStyleState_build_closure15.prototype = {
    call$1(style) {
      return style == null ? null : style.animationDuration;
    },
    $signature: 448
  };
  A._ButtonStyleState_build_closure16.prototype = {
    call$1(style) {
      return style == null ? null : style.enableFeedback;
    },
    $signature: 449
  };
  A._ButtonStyleState_build_closure17.prototype = {
    call$1(style) {
      return style == null ? null : style.alignment;
    },
    $signature: 450
  };
  A._ButtonStyleState_build_closure18.prototype = {
    call$1(style) {
      return style == null ? null : style.get$splashFactory();
    },
    $signature: 451
  };
  A._ButtonStyleState_build_closure19.prototype = {
    call$1($status) {
      if (type$.AnimationStatus._as($status) === C.AnimationStatus_3)
        this.$this.setState$1(new A._ButtonStyleState_build__closure1());
    },
    $signature: 7
  };
  A._ButtonStyleState_build__closure1.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._RenderInputPadding_hitTest_closure0.prototype = {
    call$2(result, position) {
      return this.$this.RenderObjectWithChildMixin__child.hitTest$2$position(result, this.center);
    },
    $signature: 12
  };
  A.ListTileTheme_merge_closure.prototype = {
    call$1(context) {
      var t2, t3, _this = this,
        $parent = A.ListTileTheme_of(type$.BuildContext._as(context)),
        t1 = _this.style;
      if (t1 == null)
        t1 = $parent.style;
      t2 = _this.iconColor;
      if (t2 == null)
        t2 = $parent.iconColor;
      t3 = _this.textColor;
      if (t3 == null)
        t3 = $parent.textColor;
      return A.ListTileTheme$(_this.child, B.ListTileThemeData$($parent.contentPadding, $parent.dense, $parent.enableFeedback, $parent.horizontalTitleGap, t2, $parent.minLeadingWidth, $parent.minVerticalPadding, null, $parent.selectedColor, $parent.selectedTileColor, $parent.shape, t1, t3, $parent.tileColor, null), _this.key);
    },
    $signature: typesOffset + 2
  };
  A._FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure.prototype = {
    call$0() {
      if (this.status === C.AnimationStatus_0) {
        var t1 = this.$this._widget;
        if (t1.child != null)
          t1.currentController.forward$0(0);
      }
    },
    $signature: 0
  };
  A.ScaffoldState__updateSnackBar_closure.prototype = {
    call$0() {
      this.$this.set$_messengerSnackBar(this.messengerSnackBar);
    },
    $signature: 0
  };
  A.ScaffoldState__updateMaterialBanner_closure.prototype = {
    call$0() {
      this.$this.set$_messengerMaterialBanner(this.messengerMaterialBanner);
    },
    $signature: 0
  };
  A.ScaffoldState_build_closure.prototype = {
    call$2(context, child) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, _this = this;
      type$.BuildContext._as(context);
      type$.nullable_Widget._as(child);
      t1 = B.LinkedHashMap_LinkedHashMap$_literal([C.Type_DismissIntent_Fb0, new A._DismissDrawerAction(context, new B.ObserverList(B._setArrayType([], type$.JSArray_of_void_Function_Action_Intent), type$.ObserverList_of_void_Function_Action_Intent))], type$.Type, type$.Action_Intent);
      t2 = _this.$this;
      t2._widget.toString;
      t3 = t2._floatingActionButtonLocation;
      t3.toString;
      t4 = t2.__ScaffoldState__floatingActionButtonMoveController_A;
      t4 === $ && B.throwLateFieldNI("_floatingActionButtonMoveController");
      t4 = t4.__AnimationController__value_A;
      t4 === $ && B.throwLateFieldNI("_value");
      t5 = t2.__ScaffoldState__floatingActionButtonAnimator_A;
      t5 === $ && B.throwLateFieldNI("_floatingActionButtonAnimator");
      t6 = t2.__ScaffoldState__geometryNotifier_A;
      t6 === $ && B.throwLateFieldNI("_geometryNotifier");
      t2 = t2._previousFloatingActionButtonLocation;
      t2.toString;
      t7 = _this._box_0;
      t8 = t7.isSnackBarFloating;
      t9 = t7.extendBodyBehindMaterialBanner;
      return B.Actions$(t1, new A.CustomMultiChildLayout(new A._ScaffoldLayout(_this.extendBody, false, _this.minInsets, _this.minViewPadding, _this.textDirection, t6, t2, t3, t4, t5, t8, t7.snackBarWidth, t9), _this.children, null));
    },
    $signature: 452
  };
  A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure.prototype = {
    call$2(property, listener) {
      type$.RestorableProperty_nullable_Object._as(property);
      type$.void_Function._as(listener);
      if (!property._restoration0$_disposed)
        property.removeListener$1(0, listener);
    },
    $signature: 42
  };
  A._LayoutBuilderElement__layout_layoutCallback.prototype = {
    call$0() {
      var e, stack, e0, stack0, t1, t2, t3, exception, built0, _this = this, built = null;
      try {
        t1 = _this.$this;
        t2 = t1._widget;
        t2.toString;
        t3 = t1.$ti;
        built = t3._eval$1("Widget(BuildContext,1)")._as(t3._eval$1("ConstrainedLayoutBuilder<1>")._as(t2).builder).call$2(t1, _this.constraints);
        t1._widget.toString;
      } catch (exception) {
        e = B.unwrapException(exception);
        stack = B.getTraceFromException(exception);
        t1 = _this.$this;
        built0 = B.ErrorWidget__defaultErrorWidgetBuilder(A._reportException0(B.ErrorDescription$("building " + t1._widget.toString$0(0)), e, stack, new A._LayoutBuilderElement__layout_layoutCallback_closure(t1)));
        built = built0;
      }
      try {
        t1 = _this.$this;
        t1._layout_builder$_child = t1.updateChild$3(t1._layout_builder$_child, built, null);
      } catch (exception) {
        e0 = B.unwrapException(exception);
        stack0 = B.getTraceFromException(exception);
        t1 = _this.$this;
        built0 = B.ErrorWidget__defaultErrorWidgetBuilder(A._reportException0(B.ErrorDescription$("building " + t1._widget.toString$0(0)), e0, stack0, new A._LayoutBuilderElement__layout_layoutCallback_closure0(t1)));
        built = built0;
        t1._layout_builder$_child = t1.updateChild$3(null, built, t1._slot);
      }
    },
    $signature: 0
  };
  A._LayoutBuilderElement__layout_layoutCallback_closure.prototype = {
    call$0() {
      var t1 = B._setArrayType([], type$.JSArray_DiagnosticsNode);
      return t1;
    },
    $signature: 21
  };
  A._LayoutBuilderElement__layout_layoutCallback_closure0.prototype = {
    call$0() {
      var t1 = B._setArrayType([], type$.JSArray_DiagnosticsNode);
      return t1;
    },
    $signature: 21
  };
  A.ScrollNotificationObserverState__notifyListeners_closure.prototype = {
    call$0() {
      var _null = null,
        t1 = this.$this;
      return B._setArrayType([B.DiagnosticsProperty$("The " + B.getRuntimeType(t1).toString$0(0) + " sending notification was", t1, true, C.C__NoDefaultValue, _null, false, _null, _null, C.DiagnosticLevel_3, _null, false, true, true, C.DiagnosticsTreeStyle_9, _null, type$.ScrollNotificationObserverState)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 21
  };
  A.ScrollNotificationObserverState_build_closure.prototype = {
    call$1(notification) {
      var t1;
      type$.ScrollMetricsNotification._as(notification);
      t1 = new A._ConvertedScrollMetricsNotification(null, null, notification.metrics, notification.context, 0);
      t1.ViewportNotificationMixin__depth = notification.ViewportNotificationMixin__depth;
      this.$this._notifyListeners$1(t1);
      return false;
    },
    $signature: 141
  };
  A.ScrollNotificationObserverState_build_closure0.prototype = {
    call$1(notification) {
      this.$this._notifyListeners$1(type$.ScrollNotification._as(notification));
      return false;
    },
    $signature: 43
  };
  (function aliases() {
    var _ = A.__ButtonStyleState_State_TickerProviderStateMixin.prototype;
    _.super$__ButtonStyleState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A._ScaffoldState_State_TickerProviderStateMixin.prototype;
    _.super$_ScaffoldState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin.prototype;
    _.super$_ScaffoldState_State_TickerProviderStateMixin_RestorationMixin$didUpdateWidget = _.didUpdateWidget$1;
    _.super$_ScaffoldState_State_TickerProviderStateMixin_RestorationMixin$didChangeDependencies = _.didChangeDependencies$0;
    _.super$_ScaffoldState_State_TickerProviderStateMixin_RestorationMixin$dispose = _.dispose$0;
    _ = A.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin.prototype;
    _.super$__FloatingActionButtonTransitionState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin.prototype;
    _.super$_RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin$attach = _.attach$1;
    _.super$_RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin$detach = _.detach$0;
  })();
  (function installTearOffs() {
    var _instance_1_u = hunkHelpers._instance_1u,
      _instance_0_u = hunkHelpers._instance_0u;
    var _;
    _instance_1_u(_ = A.CompoundAnimation.prototype, "get$_maybeNotifyStatusListeners", "_maybeNotifyStatusListeners$1", 1);
    _instance_0_u(_, "get$_maybeNotifyListeners", "_maybeNotifyListeners$0", 0);
    _instance_0_u(A._ButtonStyleState.prototype, "get$handleStatesControllerChange", "handleStatesControllerChange$0", 0);
    _instance_1_u(_ = A._FloatingActionButtonTransitionState.prototype, "get$_handlePreviousAnimationStatusChanged", "_handlePreviousAnimationStatusChanged$1", 1);
    _instance_0_u(_, "get$_onProgressChanged", "_onProgressChanged$0", 0);
    _instance_0_u(A.ScaffoldState.prototype, "get$_handleStatusBarTap", "_handleStatusBarTap$0", 0);
    _instance_1_u(A._LayoutBuilderElement.prototype, "get$_layout", "_layout$1", 3);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _mixinHard = hunkHelpers.mixinHard,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A.LinkedList, B.Iterable);
    _inheritMany(B.Object, [A._LinkedListIterator, A.LinkedListEntry, A.FloatingActionButtonLocation, A.FabFloatOffsetY, A.FabEndOffsetX, A.FloatingActionButtonAnimator, A.MaterialStateProperty, A.MaterialStatePropertyAll, A.ScaffoldPrelayoutGeometry, A.ScaffoldGeometry, A.MultiChildLayoutDelegate, A.RenderConstrainedLayoutBuilder]);
    _inherit(A._CompoundAnimation_Animation_AnimationLazyListenerMixin, B.Animation);
    _inherit(A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin, A._CompoundAnimation_Animation_AnimationLazyListenerMixin);
    _inherit(A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin);
    _inherit(A.CompoundAnimation, A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin);
    _inheritMany(A.CompoundAnimation, [A.AnimationMin, A._AnimationSwap]);
    _inherit(A.Threshold, B.Curve);
    _inheritMany(B.StatefulWidget, [A.ButtonStyleButton, A._FloatingActionButtonTransition, A.Scaffold, A.StatefulBuilder, A.ScrollNotificationObserver]);
    _inheritMany(B.State, [A.__ButtonStyleState_State_TickerProviderStateMixin, A.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin, A._ScaffoldState_State_TickerProviderStateMixin, A._StatefulBuilderState, A.ScrollNotificationObserverState]);
    _inherit(A._ButtonStyleState, A.__ButtonStyleState_State_TickerProviderStateMixin);
    _inheritMany(B.Closure0Args, [A._ButtonStyleState_handleStatesControllerChange_closure, A._ButtonStyleState_build__closure1, A._FloatingActionButtonTransitionState__handlePreviousAnimationStatusChanged_closure, A.ScaffoldState__updateSnackBar_closure, A.ScaffoldState__updateMaterialBanner_closure, A._LayoutBuilderElement__layout_layoutCallback, A._LayoutBuilderElement__layout_layoutCallback_closure, A._LayoutBuilderElement__layout_layoutCallback_closure0, A.ScrollNotificationObserverState__notifyListeners_closure]);
    _inheritMany(B.Closure, [A._ButtonStyleState_build_effectiveValue, A._ButtonStyleState_build_resolve, A._ButtonStyleState_build_resolve_closure, A._ButtonStyleState_build_closure, A._ButtonStyleState_build_closure0, A._ButtonStyleState_build_closure1, A._ButtonStyleState_build_closure2, A._ButtonStyleState_build_closure3, A._ButtonStyleState_build_closure4, A._ButtonStyleState_build_closure5, A._ButtonStyleState_build_closure6, A._ButtonStyleState_build_closure7, A._ButtonStyleState_build_closure8, A._ButtonStyleState_build_closure9, A._ButtonStyleState_build_closure10, A._ButtonStyleState_build_closure11, A._ButtonStyleState_build_closure12, A._ButtonStyleState_build_closure20, A._ButtonStyleState_build__closure0, A._ButtonStyleState_build_closure21, A._ButtonStyleState_build__closure, A._ButtonStyleState_build_closure13, A._ButtonStyleState_build_closure14, A._ButtonStyleState_build_closure15, A._ButtonStyleState_build_closure16, A._ButtonStyleState_build_closure17, A._ButtonStyleState_build_closure18, A._ButtonStyleState_build_closure19, A.ListTileTheme_merge_closure, A.ScrollNotificationObserverState_build_closure, A.ScrollNotificationObserverState_build_closure0]);
    _inherit(A._MouseCursor, B.MaterialStateMouseCursor);
    _inherit(A._InputPadding0, B.SingleChildRenderObjectWidget);
    _inherit(A._RenderInputPadding0, B.RenderShiftedBox);
    _inheritMany(B.Closure2Args, [A._RenderInputPadding_hitTest_closure0, A.ScaffoldState_build_closure, A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure]);
    _inherit(A._DividerDefaultsM2, B.DividerThemeData);
    _inheritMany(B.InheritedWidget, [A.FlexibleSpaceBarSettings, A._ScaffoldScope, A._ScrollNotificationObserverScope]);
    _inherit(A.StandardFabLocation, A.FloatingActionButtonLocation);
    _inherit(A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX, A.StandardFabLocation);
    _inherit(A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY, A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX);
    _inherit(A._EndFloatFabLocation, A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY);
    _inherit(A._ScalingFabMotionAnimator, A.FloatingActionButtonAnimator);
    _inheritMany(B.StatelessWidget, [A.IconButton, A._BodyBuilder]);
    _inheritMany(B._Enum, [A.ListTileStyle, A._ScaffoldSlot]);
    _inherit(A.ListTileTheme, B.InheritedTheme);
    _inherit(A._ScaffoldGeometryNotifier, B.ChangeNotifier);
    _inherit(A._BodyBoxConstraints, B.BoxConstraints);
    _inherit(A._ScaffoldLayout, A.MultiChildLayoutDelegate);
    _inherit(A._FloatingActionButtonTransitionState, A.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin);
    _inherit(A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin, A._ScaffoldState_State_TickerProviderStateMixin);
    _inherit(A.ScaffoldState, A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin);
    _inherit(A._DismissDrawerAction, B.DismissAction);
    _inherit(A.MultiChildLayoutParentData, B.ContainerBoxParentData);
    _inheritMany(B.RenderBox, [A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin, A.__RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin]);
    _inherit(A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin);
    _inherit(A.RenderCustomMultiChildLayoutBox, A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inheritMany(B.ParentDataWidget, [A.LayoutId, A.Flexible]);
    _inherit(A.CustomMultiChildLayout, B.MultiChildRenderObjectWidget);
    _inherit(A.ConstrainedLayoutBuilder, B.RenderObjectWidget);
    _inherit(A._LayoutBuilderElement, B.RenderObjectElement);
    _inherit(A.LayoutBuilder, A.ConstrainedLayoutBuilder);
    _inherit(A.__RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder, A.__RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin);
    _inherit(A._RenderLayoutBuilder, A.__RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder);
    _inherit(A.RestorableBool, B._RestorablePrimitiveValue);
    _inherit(A._ListenerEntry, A.LinkedListEntry);
    _inherit(A._ConvertedScrollMetricsNotification, B.ScrollUpdateNotification);
    _inherit(A.RotationTransition, B.AnimatedWidget);
    _mixin(A._CompoundAnimation_Animation_AnimationLazyListenerMixin, B.AnimationLazyListenerMixin);
    _mixin(A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin, B.AnimationLocalListenersMixin);
    _mixin(A._CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, B.AnimationLocalStatusListenersMixin);
    _mixinHard(A.__ButtonStyleState_State_TickerProviderStateMixin, B.TickerProviderStateMixin);
    _mixin(A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX, A.FabEndOffsetX);
    _mixin(A.__EndFloatFabLocation_StandardFabLocation_FabEndOffsetX_FabFloatOffsetY, A.FabFloatOffsetY);
    _mixinHard(A._ScaffoldState_State_TickerProviderStateMixin, B.TickerProviderStateMixin);
    _mixinHard(A._ScaffoldState_State_TickerProviderStateMixin_RestorationMixin, B.RestorationMixin);
    _mixinHard(A.__FloatingActionButtonTransitionState_State_TickerProviderStateMixin, B.TickerProviderStateMixin);
    _mixinHard(A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin, B.ContainerRenderObjectMixin);
    _mixin(A._RenderCustomMultiChildLayoutBox_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, B.RenderBoxContainerDefaultsMixin);
    _mixinHard(A.__RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin, B.RenderObjectWithChildMixin);
    _mixin(A.__RenderLayoutBuilder_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder, A.RenderConstrainedLayoutBuilder);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"LinkedList":{"Iterable":["1"],"Iterable.E":"1"},"_LinkedListIterator":{"Iterator":["1"]},"CompoundAnimation":{"Animation":["1"],"ValueListenable":["1"],"Listenable":[]},"AnimationMin":{"CompoundAnimation":["1"],"Animation":["1"],"ValueListenable":["1"],"Listenable":[]},"Threshold":{"Curve":[],"ParametricCurve":["double"]},"ButtonStyleButton":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ButtonStyleState":{"TickerProviderStateMixin":["ButtonStyleButton"],"State":["ButtonStyleButton"],"TickerProvider":[],"State.T":"ButtonStyleButton"},"_MouseCursor":{"MouseCursor0":[],"MaterialStateProperty":["MouseCursor0"]},"_InputPadding0":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RenderInputPadding0":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"_DividerDefaultsM2":{"DividerThemeData":[]},"FlexibleSpaceBarSettings":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"StandardFabLocation":{"FloatingActionButtonLocation":[]},"_EndFloatFabLocation":{"FloatingActionButtonLocation":[]},"_ScalingFabMotionAnimator":{"FloatingActionButtonAnimator":[]},"_AnimationSwap":{"CompoundAnimation":["1"],"Animation":["1"],"ValueListenable":["1"],"Listenable":[]},"IconButton":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"ListTileStyle":{"Enum":[]},"ListTileTheme":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"MaterialStatePropertyAll":{"MaterialStateProperty":["1"]},"_FloatingActionButtonTransition":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"Scaffold":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_StandardBottomSheet":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ScaffoldSlot":{"Enum":[]},"_ScaffoldGeometryNotifier":{"ChangeNotifier":[],"ValueListenable":["ScaffoldGeometry"],"Listenable":[]},"_BodyBoxConstraints":{"BoxConstraints":[],"Constraints":[]},"_BodyBuilder":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ScaffoldLayout":{"MultiChildLayoutDelegate":[]},"_FloatingActionButtonTransitionState":{"TickerProviderStateMixin":["_FloatingActionButtonTransition"],"State":["_FloatingActionButtonTransition"],"TickerProvider":[],"State.T":"_FloatingActionButtonTransition"},"ScaffoldState":{"TickerProviderStateMixin":["Scaffold"],"RestorationMixin":["Scaffold"],"State":["Scaffold"],"TickerProvider":[],"State.T":"Scaffold"},"_DismissDrawerAction":{"Action":["DismissIntent"],"Action.T":"DismissIntent"},"_ScaffoldScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"MultiChildLayoutParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[],"ContainerParentDataMixin.0":"RenderBox"},"RenderCustomMultiChildLayoutBox":{"RenderBoxContainerDefaultsMixin":["RenderBox","MultiChildLayoutParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","MultiChildLayoutParentData"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"MultiChildLayoutParentData","ContainerRenderObjectMixin.0":"RenderBox","RenderBoxContainerDefaultsMixin.1":"MultiChildLayoutParentData"},"LayoutId":{"ParentDataWidget":["MultiChildLayoutParentData"],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"ParentDataWidget.T":"MultiChildLayoutParentData"},"StatefulBuilder":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"CustomMultiChildLayout":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Flexible":{"ParentDataWidget":["FlexParentData"],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"ParentDataWidget.T":"FlexParentData"},"_StatefulBuilderState":{"State":["StatefulBuilder"],"State.T":"StatefulBuilder"},"ConstrainedLayoutBuilder":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_LayoutBuilderElement":{"RenderObjectElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"LayoutBuilder":{"ConstrainedLayoutBuilder":["BoxConstraints"],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"ConstrainedLayoutBuilder.0":"BoxConstraints"},"_RenderLayoutBuilder":{"RenderConstrainedLayoutBuilder":["BoxConstraints","RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox","RenderConstrainedLayoutBuilder.0":"BoxConstraints"},"RestorableBool":{"_RestorablePrimitiveValue":["bool"],"_RestorablePrimitiveValueN":["bool"],"RestorableValue":["bool"],"RestorableProperty":["bool"],"ChangeNotifier":[],"Listenable":[],"RestorableValue.T":"bool","_RestorablePrimitiveValueN.T":"bool","_RestorablePrimitiveValue.T":"bool"},"_ScrollNotificationObserverScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ListenerEntry":{"LinkedListEntry":["_ListenerEntry"],"LinkedListEntry.E":"_ListenerEntry"},"ScrollNotificationObserver":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"ScrollNotificationObserverState":{"State":["ScrollNotificationObserver"],"State.T":"ScrollNotificationObserver"},"_ConvertedScrollMetricsNotification":{"ScrollUpdateNotification":[],"ScrollNotification":[],"LayoutChangedNotification":[],"ViewportNotificationMixin":[],"Notification0":[]},"RotationTransition":{"AnimatedWidget":[],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"MaterialBannerTheme":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"DividerTheme":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"DrawerController":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"DrawerControllerState":{"State":["DrawerController"],"TickerProvider":[],"State.T":"DrawerController"}}'));
  B._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"_CompoundAnimation_Animation_AnimationLazyListenerMixin":1,"_CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin":1,"_CompoundAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin":1}'));
  var string$ = {
    _float: "_floatingActionButtonVisibilityController"
  };
  var type$ = (function rtii() {
    var findType = B.findType;
    return {
      Action_Intent: findType("Action<Intent>"),
      AlignmentGeometry: findType("AlignmentGeometry"),
      Animatable_double: findType("Animatable<double>"),
      AnimationStatus: findType("AnimationStatus"),
      Animation_double: findType("Animation<double>"),
      BoxConstraints: findType("BoxConstraints"),
      BoxParentData: findType("BoxParentData"),
      BuildContext: findType("BuildContext"),
      ButtonStyleButton: findType("ButtonStyleButton"),
      Color: findType("Color"),
      ContainerLayer: findType("ContainerLayer"),
      Directionality: findType("Directionality"),
      DismissIntent: findType("DismissIntent"),
      DividerTheme: findType("DividerTheme"),
      Duration: findType("Duration"),
      FlexParentData: findType("FlexParentData"),
      FlexibleSpaceBarSettings: findType("FlexibleSpaceBarSettings"),
      InteractiveInkFeatureFactory: findType("InteractiveInkFeatureFactory"),
      JSArray_DiagnosticsNode: findType("JSArray<DiagnosticsNode>"),
      JSArray_LayoutId: findType("JSArray<LayoutId>"),
      JSArray_Widget: findType("JSArray<Widget>"),
      JSArray__StandardBottomSheet: findType("JSArray<_StandardBottomSheet>"),
      JSArray_of_void_Function: findType("JSArray<~()>"),
      JSArray_of_void_Function_Action_Intent: findType("JSArray<~(Action<Intent>)>"),
      JSArray_of_void_Function_AnimationStatus: findType("JSArray<~(AnimationStatus)>"),
      LabeledGlobalKey_DrawerControllerState: findType("LabeledGlobalKey<DrawerControllerState>"),
      LabeledGlobalKey_State_StatefulWidget: findType("LabeledGlobalKey<State<StatefulWidget>>"),
      LinkedList__ListenerEntry: findType("LinkedList<_ListenerEntry>"),
      ListTileTheme: findType("ListTileTheme"),
      List_LayoutId: findType("List<LayoutId>"),
      MaterialBannerTheme: findType("MaterialBannerTheme"),
      MaterialTapTargetSize: findType("MaterialTapTargetSize"),
      MediaQuery: findType("MediaQuery"),
      MouseCursor: findType("MouseCursor0"),
      MultiChildLayoutParentData: findType("MultiChildLayoutParentData"),
      NotificationListener_ScrollMetricsNotification: findType("NotificationListener<ScrollMetricsNotification>"),
      NotificationListener_ScrollNotification: findType("NotificationListener<ScrollNotification>"),
      Object: findType("Object"),
      ObserverList_of_void_Function: findType("ObserverList<~()>"),
      ObserverList_of_void_Function_Action_Intent: findType("ObserverList<~(Action<Intent>)>"),
      ObserverList_of_void_Function_AnimationStatus: findType("ObserverList<~(AnimationStatus)>"),
      Offset: findType("Offset"),
      PipelineOwner: findType("PipelineOwner"),
      RenderBox: findType("RenderBox"),
      RenderCustomMultiChildLayoutBox: findType("RenderCustomMultiChildLayoutBox"),
      RestorableProperty_nullable_Object: findType("RestorableProperty<Object?>"),
      Scaffold: findType("Scaffold"),
      ScaffoldState: findType("ScaffoldState"),
      ScrollMetricsNotification: findType("ScrollMetricsNotification"),
      ScrollNotification: findType("ScrollNotification"),
      ScrollNotificationObserverState: findType("ScrollNotificationObserverState"),
      Set_MaterialState: findType("Set<MaterialState>"),
      Size_Function_RenderBox_BoxConstraints: findType("Size(RenderBox,BoxConstraints)"),
      Tween_double: findType("Tween<double>"),
      Type: findType("Type"),
      ValueKey_Object: findType("ValueKey<Object>"),
      VisualDensity: findType("VisualDensity"),
      Widget: findType("Widget"),
      _FloatingActionButtonTransition: findType("_FloatingActionButtonTransition"),
      _ListenerEntry: findType("_ListenerEntry"),
      _MaterialStatePropertyWith_nullable_Color: findType("_MaterialStatePropertyWith<Color?>"),
      _RenderInputPadding: findType("_RenderInputPadding0"),
      _ScaffoldLayout: findType("_ScaffoldLayout"),
      _ScaffoldMessengerScope: findType("_ScaffoldMessengerScope"),
      _ScaffoldScope: findType("_ScaffoldScope"),
      _ScrollNotificationObserverScope: findType("_ScrollNotificationObserverScope"),
      bool: findType("bool"),
      double: findType("double"),
      dynamic: findType("@"),
      nullable_BorderSide: findType("BorderSide?"),
      nullable_Color: findType("Color?"),
      nullable_EdgeInsetsGeometry: findType("EdgeInsetsGeometry?"),
      nullable_LinkedList__ListenerEntry: findType("LinkedList<_ListenerEntry>?"),
      nullable_Map_Object_RenderBox: findType("Map<Object,RenderBox>?"),
      nullable_OutlinedBorder: findType("OutlinedBorder?"),
      nullable_RenderBox: findType("RenderBox?"),
      nullable_ScaffoldFeatureController_MaterialBanner_MaterialBannerClosedReason: findType("ScaffoldFeatureController<MaterialBanner,MaterialBannerClosedReason>?"),
      nullable_ScaffoldFeatureController_SnackBar_SnackBarClosedReason: findType("ScaffoldFeatureController<SnackBar,SnackBarClosedReason>?"),
      nullable_Size: findType("Size?"),
      nullable_TextStyle: findType("TextStyle?"),
      nullable_Widget: findType("Widget?"),
      nullable_double: findType("double?"),
      void_Function: findType("~()"),
      void_Function_AnimationStatus: findType("~(AnimationStatus)"),
      void_Function_Element: findType("~(Element)"),
      void_Function_ScrollNotification: findType("~(ScrollNotification)")
    };
  })();
  (function constants() {
    D.AlignmentDirectional_1_0 = new B.AlignmentDirectional(1, 0);
    D.AlignmentDirectional_m1_0 = new B.AlignmentDirectional(-1, 0);
    D.BoxConstraints_mlX1 = new B.BoxConstraints(48, 1 / 0, 48, 1 / 0);
    D.C__EndFloatFabLocation = new A._EndFloatFabLocation();
    D.C__ScalingFabMotionAnimator = new A._ScalingFabMotionAnimator();
    D.Cubic_2jN = new B.Cubic(0.215, 0.61, 0.355, 1);
    D.Cubic_YAz = new B.Cubic(0.075, 0.82, 0.165, 1);
    D.EdgeInsets_8_8_8_8 = new B.EdgeInsets(8, 8, 8, 8);
    D.IconData_57490_MaterialIcons_null_true = new B.IconData(57490, "MaterialIcons", null, true);
    D.IconData_57491_MaterialIcons_null_true = new B.IconData(57491, "MaterialIcons", null, true);
    D.Interval_75R0 = new B.Interval(0, 0.1, C.C__Linear);
    D.Interval_E4y = new B.Interval(0.5, 1, C.Cubic_JUR0);
    D.MaterialState_4 = new B.MaterialState(4, "selected");
    D.ScaffoldGeometry_null_null = new A.ScaffoldGeometry(null, null);
    D.Size_40_40 = new B.Size(40, 40);
    D.SnackBarBehavior_0 = new B.SnackBarBehavior(0, "fixed");
    D.Threshold_znv = new A.Threshold(0.5);
    D._ScaffoldSlot_0 = new A._ScaffoldSlot(0, "body");
    D._ScaffoldSlot_1 = new A._ScaffoldSlot(1, "appBar");
    D._ScaffoldSlot_10 = new A._ScaffoldSlot(10, "endDrawer");
    D._ScaffoldSlot_11 = new A._ScaffoldSlot(11, "statusBar");
    D._ScaffoldSlot_2 = new A._ScaffoldSlot(2, "bodyScrim");
    D._ScaffoldSlot_3 = new A._ScaffoldSlot(3, "bottomSheet");
    D._ScaffoldSlot_4 = new A._ScaffoldSlot(4, "snackBar");
    D._ScaffoldSlot_5 = new A._ScaffoldSlot(5, "materialBanner");
    D._ScaffoldSlot_6 = new A._ScaffoldSlot(6, "persistentFooter");
    D._ScaffoldSlot_7 = new A._ScaffoldSlot(7, "bottomNavigationBar");
    D._ScaffoldSlot_8 = new A._ScaffoldSlot(8, "floatingActionButton");
    D._ScaffoldSlot_9 = new A._ScaffoldSlot(9, "drawer");
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal;
    _lazyFinal($, "_ScalingFabMotionAnimator__rotationTween", "$get$_ScalingFabMotionAnimator__rotationTween", () => B.Tween$(0.75, 1, type$.double));
    _lazyFinal($, "_ScalingFabMotionAnimator__thresholdCenterTween", "$get$_ScalingFabMotionAnimator__thresholdCenterTween", () => B.CurveTween$(D.Threshold_znv));
    _lazyFinal($, "_FloatingActionButtonTransitionState__entranceTurnTween", "$get$_FloatingActionButtonTransitionState__entranceTurnTween", () => B.Tween$(0.875, 1, type$.double).chain$1(B.CurveTween$(C.Cubic_JUR)));
  })();
};

$__dart_deferred_initializers__["NR8cwEaePkt32oxO0YM0SU2ce4c="] = $__dart_deferred_initializers__.current
