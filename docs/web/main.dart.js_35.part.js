// Generated by dart2js (NullSafetyMode.sound, csp, deferred-serialization, intern-composite-values), the Dart to JavaScript compiler version: 2.19.6.
self.$__dart_deferred_initializers__ = self.$__dart_deferred_initializers__ || Object.create(null);
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A = {DefaultEquality: function DefaultEquality(t0) {
      this.$ti = t0;
    }, IterableEquality: function IterableEquality(t0, t1) {
      this._elementEquality = t0;
      this.$ti = t1;
    }, ListEquality: function ListEquality(t0, t1) {
      this._elementEquality = t0;
      this.$ti = t1;
    }, _UnorderedEquality: function _UnorderedEquality() {
    }, SetEquality: function SetEquality(t0, t1) {
      this._elementEquality = t0;
      this.$ti = t1;
    }, _MapEntry: function _MapEntry(t0, t1, t2) {
      this.equality = t0;
      this.key = t1;
      this.value = t2;
    }, MapEquality: function MapEquality(t0, t1, t2) {
      this._keyEquality = t0;
      this._valueEquality = t1;
      this.$ti = t2;
    }, DeepCollectionEquality: function DeepCollectionEquality() {
    },
    SingleChildStatefulElement$(widget) {
      var t1 = new A.SingleChildStatefulElement(null, widget.createState$0(), widget, D._ElementLifecycle_0);
      t1.get$state(t1)._framework$_element = t1;
      t1.get$state(t1).set$_widget(widget);
      return t1;
    },
    _SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin_activate_closure: function _SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin_activate_closure(t0) {
      this.$this = t0;
    },
    SingleChildStatefulWidget: function SingleChildStatefulWidget() {
    },
    SingleChildState: function SingleChildState() {
    },
    SingleChildStatefulElement: function SingleChildStatefulElement(t0, t1, t2, t3) {
      var _ = this;
      _.SingleChildWidgetElementMixin__parent = t0;
      _._framework$_state = t1;
      _._didChangeDependencies = false;
      _._framework$_child = null;
      _._debugDoingBuild = false;
      _._slot = _._notificationTree = _._debugReassembleConfig = _._framework$_parent = null;
      _.__Element__depth_A = $;
      _._widget = t2;
      _._owner = null;
      _._lifecycleState = t3;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugBuiltOnce = _._inDirtyList = false;
    },
    _SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin: function _SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin() {
    }
  },
  J, B, C, D;
  A = hunkHelpers.updateHolder(holdersList[51], A);
  J = holdersList[1];
  B = holdersList[0];
  C = holdersList[70];
  D = holdersList[2];
  A.DefaultEquality.prototype = {$isEquality: 1};
  A.IterableEquality.prototype = {
    equals$2(elements1, elements2) {
      var it1, it2, hasNext,
        t1 = this.$ti._eval$1("Iterable<1>?");
      t1._as(elements1);
      t1._as(elements2);
      if (elements1 === elements2)
        return true;
      it1 = J.get$iterator$ax(elements1);
      it2 = J.get$iterator$ax(elements2);
      for (t1 = this._elementEquality; true;) {
        hasNext = it1.moveNext$0();
        if (hasNext !== it2.moveNext$0())
          return false;
        if (!hasNext)
          return true;
        if (!t1.equals$2(it1.get$current(it1), it2.get$current(it2)))
          return false;
      }
    },
    hash$1(_, elements) {
      var t1, t2, hash;
      this.$ti._eval$1("Iterable<1>?")._as(elements);
      for (t1 = J.get$iterator$ax(elements), t2 = this._elementEquality, hash = 0; t1.moveNext$0();) {
        hash = hash + t2.hash$1(0, t1.get$current(t1)) & 2147483647;
        hash = hash + (hash << 10 >>> 0) & 2147483647;
        hash ^= hash >>> 6;
      }
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A.ListEquality.prototype = {
    equals$2(list1, list2) {
      var $length, t2, t3, i,
        t1 = this.$ti._eval$1("List<1>?");
      t1._as(list1);
      t1._as(list2);
      if (list1 === list2)
        return true;
      t1 = J.getInterceptor$asx(list1);
      $length = t1.get$length(list1);
      t2 = J.getInterceptor$asx(list2);
      if ($length !== t2.get$length(list2))
        return false;
      for (t3 = this._elementEquality, i = 0; i < $length; ++i)
        if (!t3.equals$2(t1.$index(list1, i), t2.$index(list2, i)))
          return false;
      return true;
    },
    hash$1(_, list) {
      var t1, t2, hash, i;
      this.$ti._eval$1("List<1>?")._as(list);
      for (t1 = J.getInterceptor$asx(list), t2 = this._elementEquality, hash = 0, i = 0; i < t1.get$length(list); ++i) {
        hash = hash + t2.hash$1(0, t1.$index(list, i)) & 2147483647;
        hash = hash + (hash << 10 >>> 0) & 2147483647;
        hash ^= hash >>> 6;
      }
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A._UnorderedEquality.prototype = {
    equals$2(elements1, elements2) {
      var counts, $length, e, count,
        t1 = B._instanceType(this),
        t2 = t1._eval$1("_UnorderedEquality.T?");
      t2._as(elements1);
      t2._as(elements2);
      if (elements1 === elements2)
        return true;
      t2 = this._elementEquality;
      counts = B.HashMap_HashMap(t1._eval$1("bool(_UnorderedEquality.E,_UnorderedEquality.E)")._as(t2.get$equals()), t1._eval$1("int(_UnorderedEquality.E)")._as(t2.get$hash(t2)), t2.get$isValidKey(), t1._eval$1("_UnorderedEquality.E"), type$.int);
      for (t1 = J.get$iterator$ax(elements1), $length = 0; t1.moveNext$0();) {
        e = t1.get$current(t1);
        count = counts.$index(0, e);
        counts.$indexSet(0, e, (count == null ? 0 : count) + 1);
        ++$length;
      }
      for (t1 = J.get$iterator$ax(elements2); t1.moveNext$0();) {
        e = t1.get$current(t1);
        count = counts.$index(0, e);
        if (count == null || count === 0)
          return false;
        if (typeof count !== "number")
          return count.$sub();
        counts.$indexSet(0, e, count - 1);
        --$length;
      }
      return $length === 0;
    },
    hash$1(_, elements) {
      var t1, t2, hash;
      B._instanceType(this)._eval$1("_UnorderedEquality.T?")._as(elements);
      for (t1 = J.get$iterator$ax(elements), t2 = this._elementEquality, hash = 0; t1.moveNext$0();)
        hash = hash + t2.hash$1(0, t1.get$current(t1)) & 2147483647;
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A.SetEquality.prototype = {};
  A._MapEntry.prototype = {
    get$hashCode(_) {
      var t1 = this.equality;
      return 3 * t1._keyEquality.hash$1(0, this.key) + 7 * t1._valueEquality.hash$1(0, this.value) & 2147483647;
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (other instanceof A._MapEntry) {
        t1 = this.equality;
        t1 = t1._keyEquality.equals$2(this.key, other.key) && t1._valueEquality.equals$2(this.value, other.value);
      } else
        t1 = false;
      return t1;
    }
  };
  A.MapEquality.prototype = {
    equals$2(map1, map2) {
      var t2, equalElementCounts, t3, key, entry, count,
        t1 = this.$ti._eval$1("Map<1,2>?");
      t1._as(map1);
      t1._as(map2);
      if (map1 === map2)
        return true;
      t1 = J.getInterceptor$asx(map1);
      t2 = J.getInterceptor$asx(map2);
      if (t1.get$length(map1) !== t2.get$length(map2))
        return false;
      equalElementCounts = B.HashMap_HashMap(null, null, null, type$._MapEntry, type$.int);
      for (t3 = J.get$iterator$ax(t1.get$keys(map1)); t3.moveNext$0();) {
        key = t3.get$current(t3);
        entry = new A._MapEntry(this, key, t1.$index(map1, key));
        count = equalElementCounts.$index(0, entry);
        equalElementCounts.$indexSet(0, entry, (count == null ? 0 : count) + 1);
      }
      for (t1 = J.get$iterator$ax(t2.get$keys(map2)); t1.moveNext$0();) {
        key = t1.get$current(t1);
        entry = new A._MapEntry(this, key, t2.$index(map2, key));
        count = equalElementCounts.$index(0, entry);
        if (count == null || count === 0)
          return false;
        if (typeof count !== "number")
          return count.$sub();
        equalElementCounts.$indexSet(0, entry, count - 1);
      }
      return true;
    },
    hash$1(_, map) {
      var t2, t3, t4, t5, hash, key, keyHash, t6,
        t1 = this.$ti;
      t1._eval$1("Map<1,2>?")._as(map);
      for (t2 = J.getInterceptor$x(map), t3 = J.get$iterator$ax(t2.get$keys(map)), t4 = this._keyEquality, t5 = this._valueEquality, t1 = t1._rest[1], hash = 0; t3.moveNext$0();) {
        key = t3.get$current(t3);
        keyHash = t4.hash$1(0, key);
        t6 = t2.$index(map, key);
        hash = hash + 3 * keyHash + 7 * t5.hash$1(0, t6 == null ? t1._as(t6) : t6) & 2147483647;
      }
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    },
    $isEquality: 1
  };
  A.DeepCollectionEquality.prototype = {
    equals$2(e1, e2) {
      var _this = this,
        t1 = type$.Set_dynamic;
      if (t1._is(e1))
        return t1._is(e2) && new A.SetEquality(_this, type$.SetEquality_dynamic).equals$2(e1, e2);
      t1 = type$.Map_dynamic_dynamic;
      if (t1._is(e1))
        return t1._is(e2) && new A.MapEquality(_this, _this, type$.MapEquality_dynamic_dynamic).equals$2(e1, e2);
      t1 = type$.List_dynamic;
      if (t1._is(e1))
        return t1._is(e2) && new A.ListEquality(_this, type$.ListEquality_dynamic).equals$2(e1, e2);
      t1 = type$.Iterable_dynamic;
      if (t1._is(e1))
        return t1._is(e2) && B.boolConversionCheck(new A.IterableEquality(_this, type$.IterableEquality_dynamic).equals$2(e1, e2));
      return J.$eq$(e1, e2);
    },
    hash$1(_, o) {
      var _this = this;
      if (type$.Set_dynamic._is(o))
        return new A.SetEquality(_this, type$.SetEquality_dynamic).hash$1(0, o);
      if (type$.Map_dynamic_dynamic._is(o))
        return new A.MapEquality(_this, _this, type$.MapEquality_dynamic_dynamic).hash$1(0, o);
      if (type$.List_dynamic._is(o))
        return new A.ListEquality(_this, type$.ListEquality_dynamic).hash$1(0, o);
      if (type$.Iterable_dynamic._is(o))
        return new A.IterableEquality(_this, type$.IterableEquality_dynamic).hash$1(0, o);
      return J.get$hashCode$(o);
    },
    isValidKey$1(o) {
      !type$.Iterable_dynamic._is(o);
      return true;
    },
    $isEquality: 1
  };
  A.SingleChildStatefulWidget.prototype = {
    createElement$0(_) {
      return A.SingleChildStatefulElement$(this);
    },
    $isSingleChildWidget: 1
  };
  A.SingleChildState.prototype = {
    build$1(context) {
      return this.buildWithChild$2(context, this._widget._nested$_child);
    }
  };
  A.SingleChildStatefulElement.prototype = {
    get$widget() {
      return type$.SingleChildStatefulWidget._as(B.Element.prototype.get$widget.call(this));
    },
    get$state(_) {
      return type$.SingleChildState_SingleChildStatefulWidget._as(B.StatefulElement.prototype.get$state.call(this, this));
    },
    build$0() {
      var t1, t2, _this = this;
      if (_this.SingleChildWidgetElementMixin__parent != null) {
        t1 = type$.SingleChildState_SingleChildStatefulWidget._as(B.StatefulElement.prototype.get$state.call(_this, _this));
        t2 = _this.SingleChildWidgetElementMixin__parent._injectedChild;
        t2.toString;
        return t1.buildWithChild$2(_this, t2);
      }
      return _this.super$StatefulElement$build();
    }
  };
  A._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin.prototype = {
    mount$2($parent, newSlot) {
      if (type$.nullable__NestedHookElement._is($parent))
        this.SingleChildWidgetElementMixin__parent = $parent;
      this.super$ComponentElement$mount($parent, newSlot);
    },
    activate$0() {
      this.super$StatefulElement$activate();
      this.visitAncestorElements$1(new A._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin_activate_closure(this));
    }
  };
  var typesOffset = hunkHelpers.updateTypes(["bool(Object?,Object?)", "int(Object?)", "bool(Object?)"]);
  A._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin_activate_closure.prototype = {
    call$1($parent) {
      if ($parent instanceof B._NestedHookElement)
        this.$this.SingleChildWidgetElementMixin__parent = $parent;
      return false;
    },
    $signature: 27
  };
  (function installTearOffs() {
    var _instance_2_u = hunkHelpers._instance_2u,
      _instance_1_i = hunkHelpers._instance_1i,
      _instance_1_u = hunkHelpers._instance_1u;
    var _;
    _instance_2_u(_ = A.DeepCollectionEquality.prototype, "get$equals", "equals$2", 0);
    _instance_1_i(_, "get$hash", "hash$1", 1);
    _instance_1_u(_, "get$isValidKey", "isValidKey$1", 2);
  })();
  (function inheritance() {
    var _mixinHard = hunkHelpers.mixinHard,
      _inheritMany = hunkHelpers.inheritMany,
      _inherit = hunkHelpers.inherit;
    _inheritMany(B.Object, [A.DefaultEquality, A.IterableEquality, A.ListEquality, A._UnorderedEquality, A._MapEntry, A.MapEquality, A.DeepCollectionEquality]);
    _inherit(A.SetEquality, A._UnorderedEquality);
    _inherit(A._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin_activate_closure, B.Closure);
    _inherit(A.SingleChildStatefulWidget, B.StatefulWidget);
    _inherit(A.SingleChildState, B.State);
    _inherit(A._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin, B.StatefulElement);
    _inherit(A.SingleChildStatefulElement, A._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin);
    _mixinHard(A._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin, B.SingleChildWidgetElementMixin);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"DefaultEquality":{"Equality":["1"]},"IterableEquality":{"Equality":["Iterable<1>"]},"ListEquality":{"Equality":["List<1>"]},"_UnorderedEquality":{"Equality":["2"]},"SetEquality":{"_UnorderedEquality":["1","Set<1>"],"Equality":["Set<1>"],"_UnorderedEquality.E":"1","_UnorderedEquality.T":"Set<1>"},"MapEquality":{"Equality":["Map<1,2>"]},"DeepCollectionEquality":{"Equality":["@"]},"SingleChildStatefulWidget":{"StatefulWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[]},"SingleChildState":{"State":["1"]},"SingleChildStatefulElement":{"StatefulElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]}}'));
  var type$ = (function rtii() {
    var findType = B.findType;
    return {
      IterableEquality_dynamic: findType("IterableEquality<@>"),
      Iterable_dynamic: findType("Iterable<@>"),
      ListEquality_dynamic: findType("ListEquality<@>"),
      List_dynamic: findType("List<@>"),
      MapEquality_dynamic_dynamic: findType("MapEquality<@,@>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      SetEquality_dynamic: findType("SetEquality<@>"),
      Set_dynamic: findType("Set<@>"),
      SingleChildState_SingleChildStatefulWidget: findType("SingleChildState<SingleChildStatefulWidget>"),
      SingleChildStatefulWidget: findType("SingleChildStatefulWidget"),
      _MapEntry: findType("_MapEntry"),
      int: findType("int"),
      nullable__NestedHookElement: findType("_NestedHookElement?")
    };
  })();
  (function constants() {
    C.C_DefaultEquality = new A.DefaultEquality(B.findType("DefaultEquality<0&>"));
    C.C_DeepCollectionEquality = new A.DeepCollectionEquality();
  })();
};

$__dart_deferred_initializers__["pplzoyetLvMJV2ckrjnp9YMUXOQ="] = $__dart_deferred_initializers__.current
