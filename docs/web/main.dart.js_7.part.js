// Generated by dart2js (NullSafetyMode.sound, csp, deferred-serialization, intern-composite-values), the Dart to JavaScript compiler version: 2.19.6.
self.$__dart_deferred_initializers__ = self.$__dart_deferred_initializers__ || Object.create(null);
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var C = {SliverChildBuilderDelegate: function SliverChildBuilderDelegate(t0, t1, t2) {
      this.builder = t0;
      this.childCount = t1;
      this.findChildIndexCallback = t2;
    },
    PageView$builder(allowImplicitScrolling, controller, itemBuilder, itemCount, onPageChanged, pageSnapping, physics, reverse, scrollDirection) {
      return new B.PageView(false, scrollDirection, false, controller, physics, true, onPageChanged, new C.SliverChildBuilderDelegate(itemBuilder, itemCount, null), null);
    },
    showToast(msg) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue;
      var $async$showToast = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (msg == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              B.SmartDialog_showToast(msg, null, D.Duration_1500000, null);
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$showToast, $async$completer);
    }
  },
  A, B, D;
  C = hunkHelpers.updateHolder(holdersList[37], C);
  A = holdersList[0];
  B = holdersList[43];
  D = holdersList[2];
  C.SliverChildBuilderDelegate.prototype = {
    findIndexByKey$1(key) {
      return null;
    },
    build$2(context, index) {
      var child, exception, stackTrace, t1, exception0, details, key, semanticIndex, _null = null;
      if (index >= 0)
        t1 = index >= this.childCount;
      else
        t1 = true;
      if (t1)
        return _null;
      child = null;
      try {
        child = this.builder.call$2(context, index);
      } catch (exception0) {
        exception = A.unwrapException(exception0);
        stackTrace = A.getTraceFromException(exception0);
        details = new A.FlutterErrorDetails(exception, stackTrace, "widgets library", A.ErrorDescription$("building"), _null, false);
        A.FlutterError_reportError(details);
        child = A.ErrorWidget__defaultErrorWidgetBuilder(details);
      }
      if (child == null)
        return _null;
      if (child.key != null) {
        t1 = child.key;
        t1.toString;
        key = new B._SaltedValueKey(t1);
      } else
        key = _null;
      t1 = child;
      child = new A.RepaintBoundary(t1, _null);
      semanticIndex = B._kDefaultSemanticIndexCallback(child, index);
      if (semanticIndex != null)
        child = new B.IndexedSemantics(semanticIndex, child, _null);
      t1 = child;
      child = new B.AutomaticKeepAlive(new B._SelectionKeepAlive(t1, _null), _null);
      return new A.KeyedSubtree(child, key);
    },
    get$estimatedChildCount() {
      return this.childCount;
    },
    shouldRebuild$1(oldDelegate) {
      type$.SliverChildBuilderDelegate._as(oldDelegate);
      return true;
    }
  };
  var typesOffset = hunkHelpers.updateTypes([]);
  (function inheritance() {
    var _inherit = hunkHelpers.inherit;
    _inherit(C.SliverChildBuilderDelegate, B.SliverChildDelegate);
  })();
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"SliverChildBuilderDelegate":{"SliverChildDelegate":[]}}'));
  var type$ = {
    SliverChildBuilderDelegate: A.findType("SliverChildBuilderDelegate"),
    void: A.findType("~")
  };
};

$__dart_deferred_initializers__["rWpwHEN/qw3ZInNFtzTvpZxRDDs="] = $__dart_deferred_initializers__.current
